[
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "title": "Takehome_Ex03: Storyboard",
    "section": "",
    "text": "The music industry is constantly evolving, with emerging genres and artists reshaping cultural landscapes. One notable example is the rise of “Oceanus Folk,” a genre popularized by the artist Sailor Shift. Understanding her influence requires examining musical trends, collaboration networks, and the genre’s transformation over time.\nHence, there is a need for analytical tools that allow users to explore Sailor Shift’s career, collaborations, and legacy within the broader Oceanus Folk community. In this project, we propose a data-driven approach using visualizations to uncover key patterns in her artistic journey and forecast future genre developments."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#introduction",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#introduction",
    "title": "Takehome_Ex03: Storyboard",
    "section": "",
    "text": "The music industry is constantly evolving, with emerging genres and artists reshaping cultural landscapes. One notable example is the rise of “Oceanus Folk,” a genre popularized by the artist Sailor Shift. Understanding her influence requires examining musical trends, collaboration networks, and the genre’s transformation over time.\nHence, there is a need for analytical tools that allow users to explore Sailor Shift’s career, collaborations, and legacy within the broader Oceanus Folk community. In this project, we propose a data-driven approach using visualizations to uncover key patterns in her artistic journey and forecast future genre developments."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#motivation",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#motivation",
    "title": "Takehome_Ex03: Storyboard",
    "section": "Motivation",
    "text": "Motivation\nOceanus Folk began as a niche genre tied to the cultural identity of the small island nation of Oceanus. Its unexpected global emergence—catalyzed by Sailor Shift’s meteoric career—offers a rare opportunity to examine the interplay between individual stardom, genre influence, and collaborative networks in music. Understanding how a genre spreads and evolves offers insight not only into musical trends but also into networked cultural transmission."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#methodology",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#methodology",
    "title": "Takehome_Ex03: Storyboard",
    "section": "Methodology",
    "text": "Methodology\nTo understand the evolution and influence of Oceanus Folk, particularly through the career of Sailor Shift, our team adopted a modular, data-driven approach. The methodology consists of four key components:\n\nNetwork Construction: We parsed a JSON-based music knowledge graph into a tidygraph structure, identifying key node types (artists, songs, albums) and edge relationships (e.g., collaboration, influence). This provided the foundational structure for our visual analytics.\nCareer Profiling: We traced Sailor Shift’s career over time using timeline and slopegraph visualizations to reveal genre transitions and key milestones. This helped surface patterns in her collaborations and viral growth.\nInfluence Analysis: We extracted subgraphs to study how Sailor influenced and was influenced by others. By filtering specific edge types (e.g., coverof, interpolatesfrom), we mapped both direct and indirect genre diffusion and constructed genre-level Sankey diagrams and network timelines.\nRising Star Detection: Using centrality, clustering, and influence scores, we developed a model to highlight rising artists. We compared their early trajectories with Sailor’s to predict future Oceanus Folk influencers."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#storyboard",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#storyboard",
    "title": "Takehome_Ex03: Storyboard",
    "section": "Storyboard",
    "text": "Storyboard\nOur storyboard is structured into multiple interactive modules. Each module is specifically designed to address a key question that users may have about the Oceanus Folk music community, enabling them to explore Sailor Shift’s influence and the genre’s evolution from various perspectives. These proposed modules together will create a comprehensive, user-driven exploration platform, enabling a deep dive into the artistic and cultural dynamics of the Oceanus Folk genre.\nSection 1\n\n\n\n\n\nThe purpose of this module is to explore the individuals who have influenced Sailor Shift throughout her career. The visualization places Sailor at the center, with various edge types connecting her to other artists who may have had an impact on her work. When the user drags Sailor’s node, the connected nodes move along with it. Visually, the extent to which other nodes follow Sailor’s movement may offer an intuitive sense of the strength of their influence on her.\nSection 2\n\n\n\n\n\nThe purpose of this module is to examine the individuals and groups that Sailor Shift has influenced through collaboration. The visualization centers on Sailor’s network of creative partnerships, showing how her musical contributions have potentially shaped the work of other artists, albums, groups, and record labels.\nBy selecting the “Collaboration” view, users can explore Sailor’s direct and indirect collaborators across multiple layers of connection, adjustable by depth. In this example, the depth is set to 2, allowing users to see not only Sailor’s immediate collaborators but also their subsequent partnerships—offering insight into the ripple effects of her influence.\nSection 3\n\n\n\n\n\nThe purpose of this module is to explore how Sailor Shift’s influence has extended beyond her immediate circle and into the broader Oceanus Folk community. By selecting the “Community” view, users can examine how artists who have collaborated with Sailor went on to influence or work with others, creating a ripple effect across the network.\nIn this visualization, Sailor is connected to a cluster of albums and songs through performance edges, indicating her direct involvement. These works, in turn, link to other artists and musical projects—revealing layers of indirect influence. The network is depth-adjustable, and here set to 2, allowing users to trace not only Sailor’s collaborations but also the extended web of creative activity that stems from them.\nSection 4\n\n\n\n\n\nSelect Year: Users can select the year using the slider on the left, so the slope chart at the right side will highlight Oceanus Folk’s ranking in the specific year. On hover, it reveals rank, album/song counts, and growth rate.\nSection 5\n\n\n\n\n\nSelect Top n Influence Genres: This control allows users to define how many top genres to display, ranked by their level of influence on Oceanus Folk.\nSelect Influence Type: Users can customize what constitutes “influence,” including collaborations, direct references, covers, and more. Select Year Range: Adjusts the analysis period, letting users explore how genre influence patterns shift over time.\nSection 6\n\n\n\n\n\nSelect Year Range: Defines the temporal scope for tracing influence relationships involving Oceanus Folk.\nSelect Influence Type: Lets users refine the nature of influence to explore, such as cover versions, lyrical references, or collaboration.\nSelect Genre: By default, the chart displays both genres influencing Oceanus Folk and those influenced by it. Users can filter to focus on specific interaction directions or highlight the most impacted genres."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Sailor Shift: Rise and Resonance",
    "section": "",
    "text": "pacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts, \n               concaveman, ggforce, jsonlite, dplyr)\n\n\n\n\n\nt_data &lt;- fromJSON(\"data/MC1_graph.json\",\n                   simplifyDataFrame = TRUE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#getting-start",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#getting-start",
    "title": "Sailor Shift: Rise and Resonance",
    "section": "",
    "text": "pacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts, \n               concaveman, ggforce, jsonlite, dplyr)\n\n\n\n\n\nt_data &lt;- fromJSON(\"data/MC1_graph.json\",\n                   simplifyDataFrame = TRUE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#introduction",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#introduction",
    "title": "Sailor Shift: Rise and Resonance",
    "section": "1. Introduction",
    "text": "1. Introduction\nSailor Shift is one of the most influential figures in the development of “Oceans Folk” music. From her humble beginnings as a singer on Oceanus Island to her current status as a global superstar, she has grown to represent not only her own personal success, but has also propelled this niche genre into the world. This project uses data analysis and visualization to delve deeper into her network of collaborations, musical influences, and her importance in the overall music ecosystem. We will reveal how she has influenced others and been shaped by the zeitgeist, and further reflect on what her rise reveals about the new generation of musicians."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#data-processing",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#data-processing",
    "title": "Sailor Shift: Rise and Resonance",
    "section": "2. Data processing",
    "text": "2. Data processing\n\n2.1. Extracting Edges and Nodes\n\nnodes_tbl &lt;- as_tibble(t_data$nodes)\n\nedges_tbl &lt;- as_tibble(t_data$links) %&gt;%\n  rename(from = source, to = target)\n\n\n\n2.2. Tidying nodes data frame\n\nedges_tbl &lt;- edges_tbl\n\nnode_index&lt;- nodes_tbl %&gt;%\n  mutate(index = row_number(),\n         id = as.character(id))\n\nedges_tbl &lt;- edges_tbl %&gt;%\n  mutate(from = as.character(from),\n         to = as.character(to)) %&gt;%\n  left_join(node_index %&gt;%\n              select(id,\n                     from_index = index),\n            by = c(\"from\" = \"id\")) %&gt;%\n  left_join(node_index %&gt;%\n              select(id,\n                     to_index = index),\n            by = c(\"to\" = \"id\"))\n\n\n\n2.2. Get closer to data\n\n2.2.1. Edges\n\n\nglimpse(edges_tbl)\n\nRows: 37,857\nColumns: 6\n$ `Edge Type` &lt;chr&gt; \"InterpolatesFrom\", \"RecordedBy\", \"PerformerOf\", \"Composer…\n$ from        &lt;chr&gt; \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"5\", \"5\", \"5\", \"5\", \"5\"…\n$ to          &lt;chr&gt; \"1841\", \"4\", \"0\", \"16180\", \"0\", \"16180\", \"0\", \"5088\", \"143…\n$ key         &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ from_index  &lt;int&gt; 1, 1, 2, 2, 3, 3, 4, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6…\n$ to_index    &lt;int&gt; 1842, 5, 1, 16181, 1, 16181, 1, 5089, 14333, 11678, 2480, …\n\n\n\nlength(unique(edges_tbl$`Edge Type`))\n\n[1] 12\n\nunique(edges_tbl$`Edge Type`)\n\n [1] \"InterpolatesFrom\"   \"RecordedBy\"         \"PerformerOf\"       \n [4] \"ComposerOf\"         \"ProducerOf\"         \"InStyleOf\"         \n [7] \"LyricalReferenceTo\" \"CoverOf\"            \"DistributedBy\"     \n[10] \"MemberOf\"           \"LyricistOf\"         \"DirectlySamples\"   \n\n\nThe edges dataset contains 37,857 records and 4 fields to represent the various relationships between entities in the network. Each edge contains the node IDs (source and target) of the starting and ending points, as well as 12 Edge Types describing the nature of the relationship, such as “PerformerOf”, ‘ComposerOf’ or “RecordedBy”. Meanwhile, the key field is used to distinguish between multiple connections between the same node pair.\n\n\n2.2.2. Nodes\n\n\nglimpse(nodes_tbl)\n\nRows: 17,412\nColumns: 10\n$ `Node Type`    &lt;chr&gt; \"Song\", \"Person\", \"Person\", \"Person\", \"RecordLabel\", \"S…\n$ name           &lt;chr&gt; \"Breaking These Chains\", \"Carlos Duffy\", \"Min Qin\", \"Xi…\n$ single         &lt;lgl&gt; TRUE, NA, NA, NA, NA, FALSE, NA, NA, NA, NA, TRUE, NA, …\n$ release_date   &lt;chr&gt; \"2017\", NA, NA, NA, NA, \"2026\", NA, NA, NA, NA, \"2020\",…\n$ genre          &lt;chr&gt; \"Oceanus Folk\", NA, NA, NA, NA, \"Lo-Fi Electronica\", NA…\n$ notable        &lt;lgl&gt; TRUE, NA, NA, NA, NA, TRUE, NA, NA, NA, NA, TRUE, NA, N…\n$ id             &lt;int&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…\n$ written_date   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"2020\", NA, NA,…\n$ stage_name     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ notoriety_date &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n\n\nThe nodes dataset contains 17,412 entries, each representing an entity within the music network and categorized under the Node Type column as “Person”, “Song”, or “RecordLabel”. Each node includes relevant attributes based on its type—for example, songs have fields such as single, release_date, genre, and notable, while people may have stage_name and notoriety_date. The presence of missing values (NA) in many fields indicates that certain attributes are only applicable to specific node types.\n\n\n\n2.3. Deal with NA values\nThe function tbl_graph() cannot process with NA values, with the error message: At rinterface_extra.c:82 : The value nan is not representable as an integer. Invalid value”. Thus, it’s necessary for us to check and deal with those NA values to ensure they will not affect our analysis.\n\nnodes_tbl %&gt;% summarise_all(~ sum(is.na(.)))\n\n# A tibble: 1 × 10\n  `Node Type`  name single release_date genre notable    id written_date\n        &lt;int&gt; &lt;int&gt;  &lt;int&gt;        &lt;int&gt; &lt;int&gt;   &lt;int&gt; &lt;int&gt;        &lt;int&gt;\n1           0     0  13797        12801 12801   12801     0        15957\n# ℹ 2 more variables: stage_name &lt;int&gt;, notoriety_date &lt;int&gt;\n\nedges_tbl %&gt;% summarise_all(~ sum(is.na(.)))\n\n# A tibble: 1 × 6\n  `Edge Type`  from    to   key from_index to_index\n        &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;      &lt;int&gt;    &lt;int&gt;\n1           0     0     0     0          0        0\n\nnodes_tbl %&gt;% summarise_all(~ sum(is.nan(.)))\n\n# A tibble: 1 × 10\n  `Node Type`  name single release_date genre notable    id written_date\n        &lt;int&gt; &lt;int&gt;  &lt;int&gt;        &lt;int&gt; &lt;int&gt;   &lt;int&gt; &lt;int&gt;        &lt;int&gt;\n1           0     0      0            0     0       0     0            0\n# ℹ 2 more variables: stage_name &lt;int&gt;, notoriety_date &lt;int&gt;\n\nedges_tbl %&gt;% summarise_all(~ sum(is.nan(.)))\n\n# A tibble: 1 × 6\n  `Edge Type`  from    to   key from_index to_index\n        &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;      &lt;int&gt;    &lt;int&gt;\n1           0     0     0     0          0        0\n\n\nAs observed from the outcome above, there’s no missing value in edges, but quite a lot of NA values in nodes. However, luckily, there’s no missing ‘ID’ and ‘Name’, which will not affect the analysis."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#sailor-shifts-career-connections",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#sailor-shifts-career-connections",
    "title": "Sailor Shift: Rise and Resonance",
    "section": "3. Sailor Shift’s Career Connections",
    "text": "3. Sailor Shift’s Career Connections\n\n3.1. The contributors who shaped the modern Sailor Shift\nA singer’s journey to fame is never a solitary one. Sailor has been accompanied by many — fellow singers, producers, instrumentalists, composers, and others who helped shape her path.\n\nsailor_id &lt;- node_index %&gt;%\n  filter(name == \"Sailor Shift\") %&gt;%\n  pull(index) %&gt;%\n  as.character()\n\nedges_to_sailor &lt;- edges_tbl %&gt;%\n  filter(to_index == sailor_id)\n\ninfluencers &lt;- edges_to_sailor %&gt;%\n  left_join(node_index, by = c(\"from_index\" = \"index\"))\n\ninfluencer_summary &lt;- influencers %&gt;%\n  filter(`Node Type` == \"Person\" )\n\n\ninfluencer_summary\n\n# A tibble: 2 × 16\n  `Edge Type`     from  to      key from_index to_index `Node Type` name  single\n  &lt;chr&gt;           &lt;chr&gt; &lt;chr&gt; &lt;int&gt;      &lt;int&gt;    &lt;int&gt; &lt;chr&gt;       &lt;chr&gt; &lt;lgl&gt; \n1 LyricalReferen… 17126 17255     0      17127    17256 Person      Cass… NA    \n2 InterpolatesFr… 17155 17255     0      17156    17256 Person      Clai… NA    \n# ℹ 7 more variables: release_date &lt;chr&gt;, genre &lt;chr&gt;, notable &lt;lgl&gt;, id &lt;chr&gt;,\n#   written_date &lt;chr&gt;, stage_name &lt;chr&gt;, notoriety_date &lt;chr&gt;\n\n\n\ngraph_t &lt;- tbl_graph(nodes = nodes_tbl,\n                   edges = edges_tbl %&gt;%\n                     select(from = from_index,\n                            to = to_index,\n                            \"Edge Type\"),\n                   directed = TRUE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html",
    "title": "Demographic structures and distribution of Singapore in 2024",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, ggiraph, plotly, \n                DT, readxl, gifski, gapminder,\n               gganimate, webshot2) \n\n\n\n\n\nPopdata &lt;- read.csv(\"data/respopagesex2024.csv\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html#getting-start",
    "href": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html#getting-start",
    "title": "Demographic structures and distribution of Singapore in 2024",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, ggiraph, plotly, \n                DT, readxl, gifski, gapminder,\n               gganimate, webshot2) \n\n\n\n\n\nPopdata &lt;- read.csv(\"data/respopagesex2024.csv\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html#setting-the-sense",
    "href": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html#setting-the-sense",
    "title": "Demographic structures and distribution of Singapore in 2024",
    "section": "1. Setting the sense",
    "text": "1. Setting the sense\nSingapore’s changing demographics have become a pressing topic, especially in the context of an aging population. Understanding the composition and spatial distribution of residents is increasingly important to both policymakers and the public. This report aims to offer a clear, data-driven overview of Singapore’s demographic landscape in 2024, with a particular focus on differences across planning areas and subzones, as well as variations by age and gender. Drawing on the latest official statistics, this analysis provides insights into the trends shaping Singapore’s communities today."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html#dataset",
    "href": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html#dataset",
    "title": "Demographic structures and distribution of Singapore in 2024",
    "section": "2. Dataset",
    "text": "2. Dataset\nThe dataset used in this report was obtained from the Singapore Department of Statistics (DOS) and provides population counts as of June 2024. It contains detailed information on Singapore residents, broken down by Planning Area, Subzone, single year of age, and sex. This high-resolution demographic data enables granular analysis of population structures and spatial distribution across the city. The dataset comprises a total of 60,424 records. For more details, please refer to the metadata below.\n\n\n\nVariables\nDefinition\n\n\n\n\nPA\nPlanning Area\n\n\nSZ\nSubzone\n\n\nAge\nSingle Year of Age\n\n\nSex\nSex\n\n\nPop\nResident Count\n\n\nTime\nTime/Period"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html#data-processing",
    "href": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html#data-processing",
    "title": "Demographic structures and distribution of Singapore in 2024",
    "section": "3. Data processing",
    "text": "3. Data processing\nTo ensure the validity and reliability of this report, it is essential to preprocess the dataset and assess its quality. This includes checking for completeness, consistency, and potential anomalies that may affect the accuracy of our analysis.\n\n3.1. Checking for missing values\n\ncolSums(is.na(Popdata))\n\n  PA   SZ  Age  Sex  Pop Time \n   0    0    0    0    0    0 \n\n\nAs observed from output of code-chunk above, there’s no missing value in this dataset.\n\n\n3.2. Checking for duplicates\n\nPopdata[duplicated(Popdata)]\n\ndata frame with 0 columns and 60424 rows\n\n\nAs observed from output of code-chunk above, there’s no duplicates in this dataset.\n\n\n3.2. Checking for datatype\n\nstr(Popdata)\n\n'data.frame':   60424 obs. of  6 variables:\n $ PA  : chr  \"Ang Mo Kio\" \"Ang Mo Kio\" \"Ang Mo Kio\" \"Ang Mo Kio\" ...\n $ SZ  : chr  \"Ang Mo Kio Town Centre\" \"Ang Mo Kio Town Centre\" \"Ang Mo Kio Town Centre\" \"Ang Mo Kio Town Centre\" ...\n $ Age : chr  \"0\" \"0\" \"1\" \"1\" ...\n $ Sex : chr  \"Males\" \"Females\" \"Males\" \"Females\" ...\n $ Pop : int  10 10 10 10 10 10 10 10 30 10 ...\n $ Time: int  2024 2024 2024 2024 2024 2024 2024 2024 2024 2024 ...\n\n\nAs observed from the output of the code-chunk above, all column data types are appropriate. One point to note is that the datatype of the variable Age is character instead of integer. This is because the dataset does not provide age-specific breakdowns beyond 90 years old; instead, individuals aged 90 and above are grouped under the label “90_and_Over”. This classification is reasonable and consistent with common demographic reporting practices.\n\n\n3.3. Removing unnecessary columns\nSince the dataset has already been clearly defined as representing statistics from the year 2024, and upon inspection the variable Time contains only a single unique value (2024), this column is no longer necessary and can be safely removed.\n\nunique(Popdata$Time)\n\n[1] 2024\n\n\n\npopdata &lt;- subset(Popdata, select = -Time)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html#key-findings",
    "href": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html#key-findings",
    "title": "Demographic structures and distribution of Singapore in 2024",
    "section": "4. Key Findings",
    "text": "4. Key Findings\n\n4.1. Interactive Population Plot\n\npa_sz_summary &lt;- popdata %&gt;%\n  group_by(PA, SZ) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  mutate(\n    Pop_thousand = Pop / 1000,\n    tooltip_text = str_replace_all(\n      paste0(\"Planning Area: \", PA,\n             \"\\nSubzone: \", SZ,\n             \"\\nPopulation: \", Pop),\n      \"'\", \"\"))\n\npa_order &lt;- pa_sz_summary %&gt;%\n  group_by(PA) %&gt;%\n  summarise(TotalPop = sum(Pop_thousand)) %&gt;%\n  filter(TotalPop &gt; 0) %&gt;%                         \n  arrange(desc(TotalPop)) %&gt;%\n  pull(PA)\n\npa_sz_summary &lt;- pa_sz_summary %&gt;%\n  filter(PA %in% pa_order) %&gt;%\n  mutate(PA = factor(PA, levels = pa_order))\n\ncolor_palette &lt;- c(\"#E76F51\", \"#457B9D\", \"#F4A261\", \"#2A9D8F\")\nn_subzones &lt;- length(unique(pa_sz_summary$SZ))\ncolor_values &lt;- rep(color_palette, length.out = n_subzones)\nsz_levels &lt;- sort(unique(pa_sz_summary$SZ))\nnames(color_values) &lt;- sz_levels\n\np &lt;- ggplot(pa_sz_summary, aes(x = PA, y = Pop_thousand, fill = SZ)) +\n  geom_bar_interactive(\n    aes(tooltip = tooltip_text, data_id = tooltip_text),\n    stat = \"identity\", show.legend = FALSE\n  ) +\n  scale_fill_manual(values = color_values) +\n  scale_y_continuous(\n  breaks = seq(0, 250, by = 50),\n  labels = function(x) paste0(x, \"K\")) +\n  labs(title = \"Population by Planning Area and Subzone (2024)\",\n    x = \"Planning Area\", y = \"Population (in thousands)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8 * 0.618,\n  options = list(\n    opts_hover(\"fill-opacity:1;stroke:black;stroke-width:0.5px;cursor:pointer;\"),\n    \n    opts_hover_inv(css = \"opacity:0.2;\"),  \n    opts_tooltip()\n  ))\n\n\n\n\n\nThis chart provides a comprehensive overview of the population distribution across Singapore’s planning areas and subzones in 2024.\nFrom the planning area angle, it shows that population is heavily concentrated in areas such as Tampines, Bedok, and Sengkang. Notably, seven planning areas—Tampines, Bedok, Sengkang, Jurong West, Woodlands, Yishun, and Hougang—have populations exceeding 200,000, indicating high residential density. In contrast, areas such as Seletar and Museum have very low or near-zero populations, suggesting they may be non-residential or under development.\nFrom the subzone angle, Tampines East is the most inhabited subzone, with 128,320 residents, compared to subzones such as Boon lay’s Shipyard which is completely uninhabited.\n\n\n4.2. Distribution of elderly population in Singapore\nIn Singapore, people aged 65 and above are defined as aging people, directly translated from mandarin, this group of people are expected to have a A happy, joyful and enjoyable retirement life. At this stage of life, they are no longer burdened by raising children or dealing with intense job competition, and instead experience an unprecedented sense of freedom and ease. However, from a societal perspective, an excessive number of seniors can inevitably impact the overall dynamism of society, leading to issues such as labour shortages and increased fiscal pressure.\n\npopdata_agegroup &lt;- popdata %&gt;%\n  mutate(\n    AgeGroup = case_when(\n      Age &lt;= 21 ~ \"0–21 (Children & Teens)\",\n      Age &lt;= 35 ~ \"22–35 (Young Adults)\",\n      Age &lt;= 64 ~ \"36–64 (Middle-aged)\",\n      TRUE      ~ \"65+ (Aging)\")) %&gt;%\n  \n  group_by(AgeGroup) %&gt;%\n  summarise(TotalPop = sum(Pop), .groups = \"drop\") %&gt;%\n  mutate(Percentage = TotalPop / sum(TotalPop),\n        tooltip = paste0(\n      AgeGroup, \"\\nPopulation: \", formatC(TotalPop, format = \"d\", big.mark = \",\")),\n    AgeGroup = factor(AgeGroup, levels = c(\n      \"0–21 (Children & Teens)\", \n      \"22–35 (Young Adults)\", \n      \"36–64 (Middle-aged)\", \n      \"65+ (Aging)\")))\n\np &lt;- ggplot(popdata_agegroup, aes(x = AgeGroup, y = TotalPop)) +\n  geom_col_interactive(\n    aes(tooltip = tooltip, data_id = AgeGroup),\n    fill = \"#457B9D\") +\n  geom_text_interactive(\n    aes(\n      label = paste0(round(Percentage * 100, 1), \"%\"),\n      tooltip = tooltip,\n      data_id = AgeGroup),\n    vjust = -0.5,\n    size = 4,\n    color = \"black\") +\n  scale_y_continuous(labels = function(x) formatC(x, format = \"d\", big.mark = \",\")) +\n  labs(\n    title = \"Singapore Resident Population by Age Group\",\n    x = \"Age Group\",\n    y = \"Population\") +\n  theme_minimal()\n\n\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8 * 0.618,\n  options = list(\n    opts_hover(\"fill-opacity:1;stroke:black;stroke-width:0.5px;cursor:pointer;\"),\n    \n    opts_hover_inv(css = \"opacity:0.2;\"),  \n    opts_tooltip()\n  ))\n\n\n\n\n\nAs observed from the chart above, 44.7% of Singapore’s resident population will be in the middle-aged group (36-64 years old), indicating a mature or even aging demographic structure. The children and adolescents (0-21 years old) and the youth (22-35 years old) together account for only 34.3% of the population, resulting in a relatively limited labor supply in the future. The elderly population (65 years old and above) has already reached 21%, a proportion that should not be ignored.\nAccording to international standards, when the proportion of people aged 65 and above in a country or region exceeds 7%, it is considered an aging society; and when it exceeds 14%, it is an aged society. Singapore’s current 21% has clearly entered the “aging society” stage. This means that there are multiple challenges ahead in terms of labor force constraints, rising healthcare needs, and increasing pressure on public finances. The structural trends shown in the charts highlight the need for the government to take effective measures to encourage childbearing, extend the working life and improve the pension system.\n\nelderly_data &lt;- popdata %&gt;%\n  filter(Age &gt;= 65) %&gt;%\n  group_by(PA, SZ) %&gt;%\n  summarise(ElderlyPop = sum(Pop), .groups = \"drop\")\n\ntotal_elderly &lt;- sum(elderly_data$ElderlyPop)\n\nelderly_by_PA &lt;- elderly_data %&gt;%\n  group_by(PA) %&gt;%\n  summarise(TotalElderly = sum(ElderlyPop)) %&gt;%\n  arrange(desc(TotalElderly)) %&gt;%\n  slice_max(order_by = TotalElderly, n = 5) %&gt;%\n  mutate(\n    PA = factor(PA, levels = rev(PA)),\n    Percent = TotalElderly / total_elderly,\n    tooltip = paste0(\"Planning Area: \", PA,\n                     \"\\nPopulation: \", TotalElderly))\n\nP1 &lt;- ggplot(elderly_by_PA, aes(x = PA, y = TotalElderly)) +\n  geom_col_interactive(aes(tooltip = tooltip, data_id = PA), fill = \"#264653\") +\n  geom_text_interactive(\n    aes(label = paste0(round(Percent * 100, 1), \"%\"),\n        tooltip = tooltip, data_id = PA),\n    hjust = 1.02, color = \"white\", size = 4) +\n  coord_flip() +\n  labs(\n    title = \"Top 5 Planning Areas by Elderly Population\",\n    x = \"Planning Area\", y = \"Population\") +\n  theme_minimal(base_size = 12)\n\ntop_sz &lt;- elderly_data %&gt;%\n  arrange(desc(ElderlyPop)) %&gt;%\n  slice_max(order_by = ElderlyPop, n = 10) %&gt;%\n  mutate(\n    SZ = reorder(SZ, ElderlyPop),\n    Percent = ElderlyPop / total_elderly,\n    tooltip = paste0(\"Subzone: \", SZ,\n                     \"\\nPopulation: \", ElderlyPop))\n\nP2 &lt;- ggplot(top_sz, aes(x = SZ, y = ElderlyPop)) +\n  geom_col_interactive(aes(tooltip = tooltip, data_id = SZ), fill = \"#264653\") +\n  geom_text_interactive(\n    aes(label = paste0(round(Percent * 100, 1), \"%\"),\n        tooltip = tooltip, data_id = SZ),\n    hjust = 1.02, color = \"white\", size = 4) +\n  coord_flip() +\n  labs(title = \"Top 10 Subzones by Elderly Population\",\n    x = \"Subzone\", y = \"Population\") +\n  theme_minimal(base_size = 12)\n\ngirafe(\n  ggobj = P1 + P2,\n  width_svg = 10,\n  height_svg = 6,\n  options = list(\n    opts_hover(\"fill-opacity:1;stroke:black;stroke-width:0.5px;cursor:pointer;\"),\n    opts_hover_inv(css = \"opacity:0.2;\"),\n    opts_tooltip()))\n\n\n\n\n\nAs observed from charts above, planning areas such as Bedok, Tampines, and Hougang have some of the highest elderly populations in Singapore, with Bedok accounting for 8% of the national elderly population, Tampines 6.7%, and Tampines East alone reaching 3.3%. These figures indicate a high concentration of elderly residents in specific mature residential areas. In response to this trend, these regions need to accelerate the development of age-friendly communities, optimize the allocation of care resources, and strengthen neighborhood support systems to address the rapidly growing challenges of an ageing population."
  },
  {
    "objectID": "In-class_Ex/Week 5/In-class_Ex05.html",
    "href": "In-class_Ex/Week 5/In-class_Ex05.html",
    "title": "In-class_Exercise week5",
    "section": "",
    "text": "pacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts, \n               concaveman, ggforce, jsonlite, dplyr)\nkg &lt;- fromJSON(\"data/MC1_graph.json\")"
  },
  {
    "objectID": "In-class_Ex/Week 5/In-class_Ex05.html#initial-eda",
    "href": "In-class_Ex/Week 5/In-class_Ex05.html#initial-eda",
    "title": "In-class_Exercise week5",
    "section": "Initial EDA",
    "text": "Initial EDA\n\nggplot(data = edges_tbl, \n       aes(y = `Edge Type`)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\nid_map &lt;- tibble(id = nodes_tbl$id,\n                 index = seq_len(\n                   nrow(nodes_tbl)))\n\n\nesges_tbl &lt;- edges_tbl %&gt;%\n  left_join(id_map, by = c(\"source\" = \"id\")) %&gt;%\n  rename(from = index) %&gt;%\n  left_join(id_map, by = c(\"target\" = \"id\")) %&gt;%\n  rename(to = index)\n\n\nedges_tbl &lt;- edges_tbl %&gt;%\n  filter(!is.na(source), is.na(target))\n\n\ngraph &lt;- tbl_graph(nodes = nodes_tbl,\n                   edges = edges_tbl,\n                   directed = kg$directed)\n\n\nset.seed(1234)\n\n\nggraph(graph, layout = \"fr\") +\n  geom_edge_link(alpha = 0.3,\n                 colour = \"gray\") +\n  geom_node_point(aes(color = `Node Type`),\n                  size = 4) +\n  geom_node_text(aes(label = name),\n                 repel = TRUE,\n                 size = 2.5) +\n  theme_void()\n\n\ngraph_memberof &lt;- graph %&gt;%\n  activate(edges) %&gt;%\n  filter(edges_tbl$`Edge Type` == \"MemberOf\")\n\n\nused_node_indices &lt;- graph_memberof %&gt;%\n  activate(edges) %&gt;%\n  as_tibble() %&gt;%\n  select(from, to) %&gt;%\n  unlist() %&gt;%\n  unique()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html",
    "title": "Hands-on_Ex09",
    "section": "",
    "text": "pacman::p_load(plotly, ggtern, tidyverse)\n\n\n\n\n\n\n\npop_data &lt;- read_csv(\"data/respopagsex2000to2018_tidy.csv\")\n\n\n\n\n\n#Deriving the young, economy active and old measures\nagpop_mutated &lt;- pop_data %&gt;%\n  mutate(`Year` = as.character(Year))%&gt;%\n  spread(AG, Population) %&gt;%\n  mutate(YOUNG = rowSums(.[4:8]))%&gt;%\n  mutate(ACTIVE = rowSums(.[9:16]))  %&gt;%\n  mutate(OLD = rowSums(.[17:21])) %&gt;%\n  mutate(TOTAL = rowSums(.[22:24])) %&gt;%\n  filter(Year == 2018)%&gt;%\n  filter(TOTAL &gt; 0)\n\n\n\n\n\n\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\n\n\n\n\n\n\n\n\n# reusable function for creating annotation object\nlabel &lt;- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\n# reusable function for axis formatting\naxis &lt;- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes &lt;- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\n# Initiating a plotly visualization \nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"black\"), \n  type = \"scatterternary\"\n) %&gt;%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#creating-ternary-plot-with-r",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#creating-ternary-plot-with-r",
    "title": "Hands-on_Ex09",
    "section": "",
    "text": "pacman::p_load(plotly, ggtern, tidyverse)\n\n\n\n\n\n\n\npop_data &lt;- read_csv(\"data/respopagsex2000to2018_tidy.csv\")\n\n\n\n\n\n#Deriving the young, economy active and old measures\nagpop_mutated &lt;- pop_data %&gt;%\n  mutate(`Year` = as.character(Year))%&gt;%\n  spread(AG, Population) %&gt;%\n  mutate(YOUNG = rowSums(.[4:8]))%&gt;%\n  mutate(ACTIVE = rowSums(.[9:16]))  %&gt;%\n  mutate(OLD = rowSums(.[17:21])) %&gt;%\n  mutate(TOTAL = rowSums(.[22:24])) %&gt;%\n  filter(Year == 2018)%&gt;%\n  filter(TOTAL &gt; 0)\n\n\n\n\n\n\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n#Building the static ternary plot\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\n\n\n\n\n\n\n\n\n# reusable function for creating annotation object\nlabel &lt;- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\n# reusable function for axis formatting\naxis &lt;- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes &lt;- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\n# Initiating a plotly visualization \nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"black\"), \n  type = \"scatterternary\"\n) %&gt;%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#visual-correlation-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#visual-correlation-analysis",
    "title": "Hands-on_Ex09",
    "section": "Visual Correlation Analysis",
    "text": "Visual Correlation Analysis\n\nInstalling and Launching R Packages\n\npacman::p_load(corrplot, ggstatsplot, tidyverse)\n\n\n\nImporting and Preparing The Data Set\n\nImporting Data\n\nwine &lt;- read_csv(\"data/wine_quality.csv\")\n\n\n\n\nBuilding Correlation Matrix: pairs() method\n\nBuilding a basic correlation matrix\n\npairs(wine[,1:11])\n\n\n\n\n\n\n\n\n\npairs(wine[,2:12])\n\n\n\n\n\n\n\n\n\n\nDrawing the lower corner\n\npairs(wine[,2:12], upper.panel = NULL)\n\n\n\n\n\n\n\n\n\npairs(wine[,2:12], lower.panel = NULL)\n\n\n\n\n\n\n\n\n\n\nIncluding with correlation coefficients\n\npanel.cor &lt;- function(x, y, digits=2, prefix=\"\", cex.cor, ...) {\nusr &lt;- par(\"usr\")\non.exit(par(usr))\npar(usr = c(0, 1, 0, 1))\nr &lt;- abs(cor(x, y, use=\"complete.obs\"))\ntxt &lt;- format(c(r, 0.123456789), digits=digits)[1]\ntxt &lt;- paste(prefix, txt, sep=\"\")\nif(missing(cex.cor)) cex.cor &lt;- 0.8/strwidth(txt)\ntext(0.5, 0.5, txt, cex = cex.cor * (1 + r) / 2)\n}\n\npairs(wine[,2:12], \n      upper.panel = panel.cor)\n\n\n\n\n\n\n\n\n\n\n\nVisualising Correlation Matrix: ggcormat()\n\nThe basic plot\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11)\n\n\n\n\n\n\n\n\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11,\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  title    = \"Correlogram for wine dataset\",\n  subtitle = \"Four pairs are no significant at p &lt; 0.05\"\n)\n\n\n\n\n\n\n\n\n\nggplot.component = list(\n    theme(text=element_text(size=5),\n      axis.text.x = element_text(size = 8),\n      axis.text.y = element_text(size = 8)))\n\n\n\n\nBuilding multiple plots\n\ngrouped_ggcorrmat(\n  data = wine,\n  cor.vars = 1:11,\n  grouping.var = type,\n  type = \"robust\",\n  p.adjust.method = \"holm\",\n  plotgrid.args = list(ncol = 2),\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10),\n  annotation.args = list(\n    tag_levels = \"a\",\n    title = \"Correlogram for wine dataset\",\n    subtitle = \"The measures are: alcohol, sulphates, fixed acidity, citric acid, chlorides, residual sugar, density, free sulfur dioxide and volatile acidity\",\n    caption = \"Dataset: UCI Machine Learning Repository\"\n  )\n)\n\n\n\n\n\n\n\n\n\n\nVisualising Correlation Matrix using corrplot Package\n\nGetting started with corrplot\n\nwine.cor &lt;- cor(wine[, 1:11])\n\n\ncorrplot(wine.cor)\n\n\n\n\n\n\n\n\n\n\nWorking with visual geometrics\n\ncorrplot(wine.cor, \n         method = \"ellipse\") \n\n\n\n\n\n\n\n\n\n\nWorking with layout\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\")\n\n\n\n\n\n\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\",\n         diag = FALSE,\n         tl.col = \"black\")\n\n\n\n\n\n\n\n\n\n\nWorking with mixed layout\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\n\n\nCombining corrgram with the significant test\n\nwine.sig = cor.mtest(wine.cor, conf.level= .95)\n\n\ncorrplot(wine.cor,\n         method = \"number\",\n         type = \"lower\",\n         diag = FALSE,\n         tl.col = \"black\",\n         tl.srt = 45,\n         p.mat = wine.sig$p,\n         sig.level = .05)\n\n\n\n\n\n\n\n\n\n\nReorder a corrgram\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               order=\"AOE\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\n\n\nReordering a correlation matrix using hclust\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         tl.pos = \"lt\",\n         tl.col = \"black\",\n         order=\"hclust\",\n         hclust.method = \"ward.D\",\n         addrect = 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#heatmap-for-visualising-and-analysing-multivariate-data",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#heatmap-for-visualising-and-analysing-multivariate-data",
    "title": "Hands-on_Ex09",
    "section": "Heatmap for Visualising and Analysing Multivariate Data",
    "text": "Heatmap for Visualising and Analysing Multivariate Data\n\nInstalling and Launching R Packages\n\npacman::p_load(seriation, dendextend, heatmaply, tidyverse)\n\n\n\nImporting and Preparing The Data Set\n\nImporting the data set\n\nwh &lt;- read_csv(\"data/WHData-2018.csv\")\n\n\n\nPreparing the data\n\nrow.names(wh) &lt;- wh$Country\n\n\n\nTransforming the data frame into a matrix\n\nwh1 &lt;- dplyr::select(wh, c(3, 7:12))\nwh_matrix &lt;- data.matrix(wh)\n\n\n\n\nStatic Heatmap\n\nheatmap() of R Stats\n\nwh_heatmap &lt;- heatmap(wh_matrix,\n                      Rowv=NA, Colv=NA)\n\n\n\n\n\n\n\n\n\nwh_heatmap &lt;- heatmap(wh_matrix)\n\n\n\n\n\n\n\n\n\nwh_heatmap &lt;- heatmap(wh_matrix,\n                      scale=\"column\",\n                      cexRow = 0.6, \n                      cexCol = 0.8,\n                      margins = c(10, 4))\n\n\n\n\n\n\n\n\n\n\n\nCreating Interactive Heatmap\n\nWorking with heatmaply\n\nheatmaply(mtcars)\n\n\n\n\n\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)])\n\n\n\n\n\n\n\nData trasformation\n\nScaling method\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)],\n          scale = \"column\")\n\n\n\n\n\n\n\nNormalising method\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\n\n\nPercentising method\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\n\n\n\nClustering algorithm & Manual approach\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\")\n\n\n\n\n\n\n\nStatistical approach\n\nwh_d &lt;- dist(normalize(wh_matrix[, -c(1, 2, 4, 5)]), method = \"euclidean\")\ndend_expend(wh_d)[[3]]\n\n  dist_methods hclust_methods     optim\n1      unknown         ward.D 0.6137851\n2      unknown        ward.D2 0.6289186\n3      unknown         single 0.4774362\n4      unknown       complete 0.6434009\n5      unknown        average 0.6701688\n6      unknown       mcquitty 0.5020102\n7      unknown         median 0.5901833\n8      unknown       centroid 0.6338734\n\n\n\nwh_clust &lt;- hclust(wh_d, method = \"average\")\nnum_k &lt;- find_k(wh_clust)\nplot(num_k)\n\n\n\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"average\",\n          k_row = 3)\n\n\n\n\n\n\n\nSeriation\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"OLO\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"GW\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"mean\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"none\")\n\n\n\n\n\n\n\nWorking with colour palettes\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"none\",\n          colors = Blues)\n\n\n\n\n\n\n\nThe finishing touch\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          Colv=NA,\n          seriate = \"none\",\n          colors = Blues,\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"World Happiness Score and Variables by Country, 2018 \\nDataTransformation using Normalise Method\",\n          xlab = \"World Happiness Indicators\",\n          ylab = \"World Countries\"\n          )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#visual-multivariate-analysis-with-parallel-coordinates-plot",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#visual-multivariate-analysis-with-parallel-coordinates-plot",
    "title": "Hands-on_Ex09",
    "section": "Visual Multivariate Analysis with Parallel Coordinates Plot",
    "text": "Visual Multivariate Analysis with Parallel Coordinates Plot\n\nInstalling and Launching R Packages\n\npacman::p_load(GGally, parallelPlot, tidyverse)\n\n\n\nData Preparation\n\nwh &lt;- read_csv(\"data/WHData-2018.csv\")\n\n\n\nPlotting Static Parallel Coordinates Plot\n\nPlotting a simple parallel coordinates\n\nggparcoord(data = wh, \n           columns = c(7:12))\n\n\n\n\n\n\n\n\n\n\nPlotting a parallel coordinates with boxplot\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Parallel Coordinates Plot of World Happines Variables\")\n\n\n\n\n\n\n\n\n\n\nParallel coordinates with facet\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region)\n\n\n\n\n\n\n\n\n\n\nRotating x-axis text label\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30))\n\n\n\n\n\n\n\n\n\n\nAdjusting the rotated x-axis text label\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30, hjust=1))\n\n\n\n\n\n\n\n\n\n\n\nPlotting Interactive Parallel Coordinates Plot: parallelPlot methods\n\nThe basic plot\n\nwh &lt;- wh %&gt;%\n  select(\"Happiness score\", c(7:12))\nparallelPlot(wh,\n             width = 320,\n             height = 250)\n\n\n\n\n\n\n\nRotate axis label\n\nparallelPlot(wh,\n             rotateTitle = TRUE)\n\n\n\n\n\n\n\nChanging the colour scheme\n\nparallelPlot(wh,\n             continuousCS = \"YlOrRd\",\n             rotateTitle = TRUE)\n\n\n\n\n\n\n\nParallel coordinates plot with histogram\n\nhistoVisibility &lt;- rep(TRUE, ncol(wh))\nparallelPlot(wh,\n             rotateTitle = TRUE,\n             histoVisibility = histoVisibility)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#treemap-visualisation-with-r",
    "href": "Hands-on_Ex/Hands-on_Ex09/Hands-on_Ex09.html#treemap-visualisation-with-r",
    "title": "Hands-on_Ex09",
    "section": "Treemap Visualisation with R",
    "text": "Treemap Visualisation with R\n\nInstalling and Launching R Packages\n\npacman::p_load(treemap, treemapify, tidyverse) \n\n\n\nData Wrangling\n\nImporting the data set\n\nrealis2018 &lt;- read_csv(\"data/realis2018.csv\")\n\n\n\nGrouped summaries without the Pipe\n\nrealis2018_grouped &lt;- group_by(realis2018, `Project Name`,\n                               `Planning Region`, `Planning Area`, \n                               `Property Type`, `Type of Sale`)\nrealis2018_summarised &lt;- summarise(realis2018_grouped, \n                          `Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE),\n                          `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n                          `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE), \n                          `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE))\n\n\n\nGrouped summaries with the pipe\n\nrealis2018_summarised &lt;- realis2018 %&gt;% \n  group_by(`Project Name`,`Planning Region`, \n           `Planning Area`, `Property Type`, \n           `Type of Sale`) %&gt;%\n  summarise(`Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE), \n            `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n            `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE),\n            `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE))\n\n\n\n\nDesigning Treemap with treemap Package\n\nDesigning a static treemap\n\nrealis2018_selected &lt;- realis2018_summarised %&gt;%\n  filter(`Property Type` == \"Condominium\", `Type of Sale` == \"Resale\")\n\n\n\nUsing the basic arguments\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\nWorking with vColor and type arguments\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type = \"value\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\nThe “value” type treemap\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"value\",\n        palette=\"RdYlBu\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\nThe “manual” type treemap\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"RdYlBu\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\nWorking with algorithm argument\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        algorithm = \"squarified\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\nUsing sortID\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        algorithm = \"pivotSize\",\n        sortID = \"Median Transacted Price\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\n\nDesigning Treemap using treemapify Package\n\nDesigning a basic treemap\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`),\n       layout = \"scol\",\n       start = \"bottomleft\") + \n  geom_treemap() +\n  scale_fill_gradient(low = \"light blue\", high = \"blue\")\n\n\n\n\n\n\n\n\n\n\nDefining hierarchy\n\n# Group by Planning Region\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`),\n       start = \"topleft\") + \n  geom_treemap()\n\n\n\n\n\n\n\n\n\n# Group by Planning Area\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`,\n           subgroup2 = `Planning Area`)) + \n  geom_treemap()\n\n\n\n\n\n\n\n\n\n# Adding boundary line\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`,\n           subgroup2 = `Planning Area`)) + \n  geom_treemap() +\n  geom_treemap_subgroup2_border(colour = \"gray40\",\n                                size = 2) +\n  geom_treemap_subgroup_border(colour = \"gray20\")\n\n\n\n\n\n\n\n\n\n\nDesigning An Interactive Treemap\n\ntm &lt;- treemap(realis2018_summarised,\n        index=c(\"Planning Region\", \"Planning Area\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"value\",\n        title=\"Private Residential Property Sold, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n# d3tree(tm,rootname = \"Singapore\" )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/data/geospatial/MPSZ-2019.html",
    "href": "Hands-on_Ex/Hands-on_Ex08/data/geospatial/MPSZ-2019.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05x.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05x.html",
    "title": "Hands-on_Ex05",
    "section": "",
    "text": "pacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts, \n               concaveman, ggforce)\n\n\n\n\n\nGAStech_nodes &lt;- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges &lt;- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\n\n\n\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 8\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\n\n\n\n\nGAStech_edges &lt;- GAStech_edges %&gt;%\n  mutate(SendDate = dmy(SentDate)) %&gt;%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\n\n\n\n\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(source, target, Weekday) %&gt;%\n    summarise(Weight = n()) %&gt;%\n  filter(source!=target) %&gt;%\n  filter(Weight &gt; 1) %&gt;%\n  ungroup()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05x.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05x.html#getting-started",
    "title": "Hands-on_Ex05",
    "section": "",
    "text": "pacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts, \n               concaveman, ggforce)\n\n\n\n\n\nGAStech_nodes &lt;- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges &lt;- read_csv(\"data/GAStech_email_edge-v2.csv\")\n\n\n\n\n\nglimpse(GAStech_edges)\n\nRows: 9,063\nColumns: 8\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\n\n\n\n\nGAStech_edges &lt;- GAStech_edges %&gt;%\n  mutate(SendDate = dmy(SentDate)) %&gt;%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n\n\n\n\n\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(source, target, Weekday) %&gt;%\n    summarise(Weight = n()) %&gt;%\n  filter(source!=target) %&gt;%\n  filter(Weight &gt; 1) %&gt;%\n  ungroup()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05x.html#creating-network-objects-using-tidygraph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05x.html#creating-network-objects-using-tidygraph",
    "title": "Hands-on_Ex05",
    "section": "Creating network objects using tidygraph",
    "text": "Creating network objects using tidygraph\n\nUsing tbl_graph() to build tidygraph data model\n\nGAStech_graph &lt;- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\n\n\n\nReviewing the output tidygraph’s graph object\n\nGAStech_graph\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# Node Data: 54 × 4 (active)\n      id label               Department     Title                               \n   &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;          &lt;chr&gt;                               \n 1     1 Mat.Bramar          Administration Assistant to CEO                    \n 2     2 Anda.Ribera         Administration Assistant to CFO                    \n 3     3 Rachel.Pantanal     Administration Assistant to CIO                    \n 4     4 Linda.Lagos         Administration Assistant to COO                    \n 5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Mana…\n 6     6 Carla.Forluniau     Administration Assistant to IT Group Manager       \n 7     7 Cornelia.Lais       Administration Assistant to Security Group Manager \n 8    44 Kanon.Herrero       Security       Badging Office                      \n 9    45 Varja.Lagos         Security       Badging Office                      \n10    46 Stenig.Fusil        Security       Building Control                    \n# ℹ 44 more rows\n#\n# Edge Data: 1,372 × 4\n   from    to Weekday Weight\n  &lt;int&gt; &lt;int&gt; &lt;ord&gt;    &lt;int&gt;\n1     1     2 Sunday       5\n2     1     2 Monday       2\n3     1     2 Tuesday      3\n# ℹ 1,369 more rows\n\n\n\n\nChanging the active object\n\nGAStech_graph %&gt;%\n  activate(edges) %&gt;%\n  arrange(desc(Weight))\n\n# A tbl_graph: 54 nodes and 1372 edges\n#\n# A directed multigraph with 1 component\n#\n# Edge Data: 1,372 × 4 (active)\n    from    to Weekday   Weight\n   &lt;int&gt; &lt;int&gt; &lt;ord&gt;      &lt;int&gt;\n 1    40    41 Saturday      13\n 2    41    43 Monday        11\n 3    35    31 Tuesday       10\n 4    40    41 Monday        10\n 5    40    43 Monday        10\n 6    36    32 Sunday         9\n 7    40    43 Saturday       9\n 8    41    40 Monday         9\n 9    19    15 Wednesday      8\n10    35    38 Tuesday        8\n# ℹ 1,362 more rows\n#\n# Node Data: 54 × 4\n     id label           Department     Title           \n  &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;          &lt;chr&gt;           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05x.html#plotting-static-network-graphs-with-ggraph-package",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05x.html#plotting-static-network-graphs-with-ggraph-package",
    "title": "Hands-on_Ex05",
    "section": "Plotting Static Network Graphs with ggraph package",
    "text": "Plotting Static Network Graphs with ggraph package\n\nPlotting a basic network graph\n\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()\n\n\n\n\n\n\n\n\n\n\nChanging the default network graph theme\n\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\nChanging the coloring of the plot\n\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes(colour = 'grey50')) +\n  geom_node_point(aes(colour = 'grey40'))\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')\n\n\n\n\n\n\n\n\n\n\nFruchterman and Reingold layout\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\nStar layout\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"star\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\nNicely layout\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\nRandom layout\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"randomly\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\nModifying network nodes\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes(colour = Department, \n                      size = 3))\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\nModifying edges\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\n\ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05x.html#creating-facet-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05x.html#creating-facet-graphs",
    "title": "Hands-on_Ex05",
    "section": "Creating facet graphs",
    "text": "Creating facet graphs\n\nWorking with facet_edges()\n\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n\ng + facet_edges(~Weekday)\n\n\n\n\n\n\n\n\n\n\nWorking with facet_edges() and theme()\n\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2) +\n  theme(legend.position = 'bottom')\n  \ng + facet_edges(~Weekday)\n\n\n\n\n\n\n\n\n\n\nA framed facet graph\n\nset_graph_style() \n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_edges(~Weekday) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')\n\n\n\n\n\n\n\n\n\n\nWorking with facet_nodes()\n\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_nodes(~Department)+\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05x.html#network-metrics-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05x.html#network-metrics-analysis",
    "title": "Hands-on_Ex05",
    "section": "Network Metrics Analysis",
    "text": "Network Metrics Analysis\n\nComputing centrality indices\n\ng &lt;- GAStech_graph %&gt;%\n  mutate(betweenness_centrality = centrality_betweenness()) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department,\n            size=betweenness_centrality))\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\nVisualising network metrics\n\ng &lt;- GAStech_graph %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department, \n                      size = centrality_betweenness()))\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\nVisualising Community\n\ng &lt;- GAStech_graph %&gt;%\n  mutate(community = as.factor(\n    group_edge_betweenness(\n      weights = Weight, \n      directed = TRUE))) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(\n    aes(\n      width=Weight), \n    alpha=0.2) +\n  scale_edge_width(\n    range = c(0.1, 5)) +\n  geom_node_point(\n    aes(colour = community))  \n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\ng &lt;- GAStech_graph %&gt;%\n  activate(nodes) %&gt;%\n  mutate(community = as.factor(\n    group_optimal(weights = Weight)),\n         betweenness_measure = centrality_betweenness()) %&gt;%\n  ggraph(layout = \"fr\") +\n  geom_mark_hull(\n    aes(x, y, \n        group = community, \n        fill = community),  \n    alpha = 0.2,  \n    expand = unit(0.3, \"cm\"),  # Expand\n    radius = unit(0.3, \"cm\")  # Smoothness\n  ) + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(fill = Department,\n                      size = betweenness_measure),\n                      color = \"black\",\n                      shape = 21)\n  \ng + theme_graph()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05x.html#building-interactive-network-graph-with-visnetwork",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05x.html#building-interactive-network-graph-with-visnetwork",
    "title": "Hands-on_Ex05",
    "section": "Building Interactive Network Graph with visNetwork",
    "text": "Building Interactive Network Graph with visNetwork\n\nData preparation\n\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %&gt;%\n  rename(from = id) %&gt;%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %&gt;%\n  rename(to = id) %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(from, to) %&gt;%\n    summarise(weight = n()) %&gt;%\n  filter(from!=to) %&gt;%\n  filter(weight &gt; 1) %&gt;%\n  ungroup()\n\n\n\nPlotting the first interactive network graph\n\nvisNetwork(GAStech_nodes, \n           GAStech_edges_aggregated)\n\n\n\n\n\n\n\nWorking with layout\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") \n\n\n\n\n\n\n\nWorking with visual attributes - Nodes\n\nGAStech_nodes &lt;- GAStech_nodes %&gt;%\n  rename(group = Department) \n\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\n\nWorking with visual attributes - Edges\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)\n\n\n\n\n\n\n\nInteractivity\n\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse, readxl, gifski, gapminder,\n               gganimate, tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data03/Exam_data_03.csv\")\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data03/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_each_(funs(factor(.)), col) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse, readxl, gifski, gapminder,\n               gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-data",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data03/Exam_data_03.csv\")\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data03/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_each_(funs(factor(.)), col) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#tooltip-effect-with-tooltip-aesthetic",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#tooltip-effect-with-tooltip-aesthetic",
    "title": "Hands-on_Ex03",
    "section": "Tooltip effect with tooltip aesthetic",
    "text": "Tooltip effect with tooltip aesthetic\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL) +\n  ggtitle(\"Math scores with student ID\")\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-multiple-information-on-tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-multiple-information-on-tooltip",
    "title": "Hands-on_Ex03",
    "section": "Displaying multiple information on tooltip",
    "text": "Displaying multiple information on tooltip\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  ggtitle(\"Math scores with student ID and class info\")\n  \n  \ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#customising-tooltip-style",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#customising-tooltip-style",
    "title": "Hands-on_Ex03",
    "section": "Customising Tooltip style",
    "text": "Customising Tooltip style\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  ggtitle(\"Math scores with student ID and class info\")\n  \ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-statistics-on-tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-statistics-on-tooltip",
    "title": "Hands-on_Ex03",
    "section": "Displaying statistics on tooltip",
    "text": "Displaying statistics on tooltip\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  ) +\n  ggtitle(\"Race Distribution\")\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#hover-effect-with-data_id-aesthetic",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#hover-effect-with-data_id-aesthetic",
    "title": "Hands-on_Ex03",
    "section": "Hover effect with data_id aesthetic",
    "text": "Hover effect with data_id aesthetic\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)+\n  ggtitle(\"Math scores\")\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#styling-hover-effect",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#styling-hover-effect",
    "title": "Hands-on_Ex03",
    "section": "Styling hover effect",
    "text": "Styling hover effect\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)+\n  ggtitle(\"Math scores\")\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#combining-tooltip-and-hover-effect",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#combining-tooltip-and-hover-effect",
    "title": "Hands-on_Ex03",
    "section": "Combining tooltip and hover effect",
    "text": "Combining tooltip and hover effect\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)+\n  ggtitle(\"Math scores with class info\")\n\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#click-effect-with-onclick",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#click-effect-with-onclick",
    "title": "Hands-on_Ex03",
    "section": "Click effect with onclick",
    "text": "Click effect with onclick\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)+\n  ggtitle(\"Math scores (Click datapoint to see more details)\")\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-ggiraph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-ggiraph",
    "title": "Hands-on_Ex03",
    "section": "Coordinated Multiple Views with ggiraph",
    "text": "Coordinated Multiple Views with ggiraph\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "title": "Hands-on_Ex03",
    "section": "Creating an interactive scatter plot: plot_ly() method",
    "text": "Creating an interactive scatter plot: plot_ly() method\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-visual-variable-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-visual-variable-plot_ly-method",
    "title": "Hands-on_Ex03",
    "section": "Working with visual variable: plot_ly() method",
    "text": "Working with visual variable: plot_ly() method\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "title": "Hands-on_Ex03",
    "section": "Creating an interactive scatter plot: ggplotly() method",
    "text": "Creating an interactive scatter plot: ggplotly() method\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-plotly",
    "title": "Hands-on_Ex03",
    "section": "Coordinated Multiple Views with plotly",
    "text": "Coordinated Multiple Views with plotly\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table-dt-package",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table-dt-package",
    "title": "Hands-on_Ex03",
    "section": "Interactive Data Table: DT package",
    "text": "Interactive Data Table: DT package\n\nDT::datatable(exam_data, class= \"compact\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk-method",
    "title": "Hands-on_Ex03",
    "section": "Linked brushing: crosstalk method",
    "text": "Linked brushing: crosstalk method\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-a-static-population-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-a-static-population-bubble-plot",
    "title": "Hands-on_Ex03",
    "section": "Building a static population bubble plot",
    "text": "Building a static population bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-the-animated-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-the-animated-bubble-plot",
    "title": "Hands-on_Ex03",
    "section": "Building the animated bubble plot",
    "text": "Building the animated bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-an-animated-bubble-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-an-animated-bubble-plot-ggplotly-method",
    "title": "Hands-on_Ex03",
    "section": "Building an animated bubble plot: ggplotly() method",
    "text": "Building an animated bubble plot: ggplotly() method\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-an-animated-bubble-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-an-animated-bubble-plot-plot_ly-method",
    "title": "Hands-on_Ex03",
    "section": "Building an animated bubble plot: plot_ly() method",
    "text": "Building an animated bubble plot: plot_ly() method\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#r-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#r-graphics",
    "title": "Hands-on Exercise 1",
    "section": "R Graphics",
    "text": "R Graphics\n\nhist(exam_data$MATHS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#ggplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#ggplot",
    "title": "Hands-on Exercise 1",
    "section": "ggplot",
    "text": "ggplot\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_bar",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_bar",
    "title": "Hands-on Exercise 1",
    "section": "geom_bar",
    "text": "geom_bar\n\nggplot(data = exam_data,\n       aes(x = RACE)) + \n    geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_dotplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_dotplot",
    "title": "Hands-on Exercise 1",
    "section": "geom_dotplot",
    "text": "geom_dotplot\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_histogram",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_histogram",
    "title": "Hands-on Exercise 1",
    "section": "geom_histogram",
    "text": "geom_histogram\n\nggplot(data = exam_data,\n       aes(x = MATHS)) + \n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_density",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_density",
    "title": "Hands-on Exercise 1",
    "section": "geom_density",
    "text": "geom_density\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_boxplot",
    "title": "Hands-on Exercise 1",
    "section": "geom_boxplot",
    "text": "geom_boxplot\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot(notch = TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_violin",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_violin",
    "title": "Hands-on Exercise 1",
    "section": "geom_violin",
    "text": "geom_violin\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_point",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_point",
    "title": "Hands-on Exercise 1",
    "section": "geom_point",
    "text": "geom_point\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#combined-geom-objects",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#combined-geom-objects",
    "title": "Hands-on Exercise 1",
    "section": "Combined geom objects",
    "text": "Combined geom objects\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-geom",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-geom",
    "title": "Hands-on Exercise 1",
    "section": "Changing geom()",
    "text": "Changing geom()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-aes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-aes",
    "title": "Hands-on Exercise 1",
    "section": "Changing aes()",
    "text": "Changing aes()\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#stat_summary",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#stat_summary",
    "title": "Hands-on Exercise 1",
    "section": "stat_summary()",
    "text": "stat_summary()\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               colour =\"red\",        \n               size=4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom",
    "title": "Hands-on Exercise 1",
    "section": "geom()",
    "text": "geom()\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour=\"red\",          \n             size=4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#best-fit-line",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#best-fit-line",
    "title": "Hands-on Exercise 1",
    "section": "best fit line",
    "text": "best fit line\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_wrap",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_wrap",
    "title": "Hands-on Exercise 1",
    "section": "Facet_wrap()",
    "text": "Facet_wrap()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid",
    "title": "Hands-on Exercise 1",
    "section": "Facet_grid()",
    "text": "Facet_grid()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#coord_flip",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#coord_flip",
    "title": "Hands-on Exercise 1",
    "section": "coord_flip()",
    "text": "coord_flip()\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#coord_cartesian",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#coord_cartesian",
    "title": "Hands-on Exercise 1",
    "section": "coord_cartesian()",
    "text": "coord_cartesian()\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "about/about.html",
    "href": "about/about.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Linsen (Easant) Lu\nData Analyst | BI Specialist Supply Chain Specialist\nLinkedIn\n\n\nMy name is Linsen, you may also call me Easant.\nI have a background in supply chain and business IT, with hands-on experience in data analytics, operations, and both B2B and B2C business contexts. Through multiple internships and entrepreneurial projects, I’ve worked across different industries to support data-driven decision-making in areas like supply chain, sales, and process improvement.\n\n\nEducation\nSingapore Management University | 2024.01-2025.08\nMasters of IT in Business (Data science and Analytics)\nCurtin University | 2021.04-2023.08\nB.Com.in Logistics and Supply Chain Management\n\n\n\nExperience\nBosch APAC | Data Analyst Intern\nTTG Asia | Procurement Intern\nShanghai Markting Pte Ltd. | Business Development Intern"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\n\n\n\nexam_data2 &lt;- read_csv(\"data02/Exam_data_02.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "exam_data2 &lt;- read_csv(\"data02/Exam_data_02.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggplot2-annotation",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggplot2-annotation",
    "title": "Hands-on_Ex02",
    "section": "ggplot2 Annotation",
    "text": "ggplot2 Annotation\n\nggplot(data=exam_data2, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggrepel-annotation",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggrepel-annotation",
    "title": "Hands-on_Ex02",
    "section": "ggrepel Annotation",
    "text": "ggrepel Annotation\n\nggplot(data=exam_data2, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggplot2-themes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggplot2-themes",
    "title": "Hands-on_Ex02",
    "section": "ggplot2 Themes",
    "text": "ggplot2 Themes\n\nggplot(data=exam_data2, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggtheme-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggtheme-package",
    "title": "Hands-on_Ex02",
    "section": "ggtheme package",
    "text": "ggtheme package\n\nggplot(data=exam_data2, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#hrbthems-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#hrbthems-package",
    "title": "Hands-on_Ex02",
    "section": "hrbthems package",
    "text": "hrbthems package\n\nggplot(data=exam_data2, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#single-plots",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#single-plots",
    "title": "Hands-on_Ex02",
    "section": "Single plots",
    "text": "Single plots\n\np1 &lt;- ggplot(data=exam_data2, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\np2 &lt;- ggplot(data=exam_data2, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\np3 &lt;- ggplot(data=exam_data2, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores vs Maths scores for P3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-graphs",
    "title": "Hands-on_Ex02",
    "section": "Combining two graphs",
    "text": "Combining two graphs\n\np1 + p2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-graphs",
    "title": "Hands-on_Ex02",
    "section": "Combining three graphs",
    "text": "Combining three graphs\n\n(p1 / p2) | p3"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "title": "Hands-on_Ex02",
    "section": "Creating a composite figure with tag",
    "text": "Creating a composite figure with tag\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "title": "Hands-on_Ex02",
    "section": "Creating figure with insert",
    "text": "Creating figure with insert\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "title": "Hands-on_Ex02",
    "section": "Creating a composite figure by using patchwork and ggtheme",
    "text": "Creating a composite figure by using patchwork and ggtheme\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "pacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse, ggstatsplot, \n               tidyverse, plotly, crosstalk, DT, \n               ggdist, gganimate, FunnelPlotR, knitr)\n\n\n\n\n\nexam &lt;- read_csv(\"data04/Exam_data_03.csv\")\n\ncovid19 &lt;- read_csv(\"data04/COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#getting-start",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#getting-start",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "pacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse, ggstatsplot, \n               tidyverse, plotly, crosstalk, DT, \n               ggdist, gganimate, FunnelPlotR, knitr)\n\n\n\n\n\nexam &lt;- read_csv(\"data04/Exam_data_03.csv\")\n\ncovid19 &lt;- read_csv(\"data04/COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-distribution",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-distribution",
    "title": "Hands-on_Ex04",
    "section": "Visualising Distribution",
    "text": "Visualising Distribution\n\nVisualising Distribution with Ridgeline Plot\n\nPlotting ridgeline graph: ggridges method\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\nVarying fill colors along the x axis\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\nMapping the probabilities directly onto colour\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\nRidgeline plots with quantile lines\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\nVisualising Distribution with Raincloud Plot\n\nPlotting a Half Eye graph\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\n\n\n\n\n\n\nAdding the boxplot with geom_boxplot()\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)\n\n\n\n\n\n\n\n\n\n\nAdding the Dot Plots with stat_dots()\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\n\n\n\n\n\nFinishing touch\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visual-statistical-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visual-statistical-analysis",
    "title": "Hands-on_Ex04",
    "section": "Visual Statistical Analysis",
    "text": "Visual Statistical Analysis\n\nStatistical Tests\n\nOne-sample test: gghistostats() method\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\n\n\n\n\n\nTwo-sample mean test: ggbetweenstats()\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\n\nOneway ANOVA Test: ggbetweenstats() method\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\n\nSignificant Test of Association (Depedence) : ggbarstats() methods\n\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-uncertainty",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-uncertainty",
    "title": "Hands-on_Ex04",
    "section": "Visualising Uncertainty",
    "text": "Visualising Uncertainty\n\nVisualizing the uncertainty of point estimates: ggplot2 methods\n\nPreparation\n\nmy_sum &lt;- exam %&gt;%\n  group_by(RACE) %&gt;%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %&gt;%\n  mutate(se=sd/sqrt(n-1))\n\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n\nRACE\nn\nmean\nsd\nse\n\n\n\n\nChinese\n193\n76.50777\n15.69040\n1.132357\n\n\nIndian\n12\n60.66667\n23.35237\n7.041005\n\n\nMalay\n108\n57.44444\n21.13478\n2.043177\n\n\nOthers\n9\n69.66667\n10.72381\n3.791438\n\n\n\n\n\n\n\nPlotting standard error bars of point estimates\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")\n\n\n\n\n\n\n\n\n\n\nPlotting confidence interval of point estimates\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")\n\n\n\n\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates with interactive error bars\n\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(5,7),\n       ggplotly(\n         ggplot(shared_df) +\n           geom_errorbar(aes(\n             x = reorder(RACE, -mean),\n             ymin = mean - 2.58 * se,\n             ymax = mean + 2.58 * se),\n             linewidth = 0.5, colour = \"black\", alpha = 0.9) +\n           geom_point(aes(\n             x = RACE,\n             y = mean,\n             text = paste(\"Race:\", RACE,\n                          \"&lt;br&gt;N:\", n,\n                          \"&lt;br&gt;Avg. Scores:\", round(mean, 2),\n                          \"&lt;br&gt;99% CI:[\", round((mean - 2.58 * se), 2), \",\",\n                          round((mean + 2.58 * se), 2), \"]\")),\n             stat = \"identity\",\n             color = \"red\", size = 1.5, alpha = 1) +\n           xlab(\"Race\") +\n           ylab(\"Average Scores\") +\n           theme_minimal() +\n           theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1)) +\n           ggtitle(\"99% Confidence interval of average\\nmaths scores by race\"),\n         tooltip = \"text\"\n       ),\n       DT::datatable(shared_df,\n                     rownames = FALSE,\n                     class = \"compact\",\n                     width = \"100%\",\n                     extensions = 'Buttons',\n                     options = list(\n                       dom = 'Blfrtip',\n                       pageLength = 10,\n                       scrollX = TRUE\n                     ),\n                     colnames = c(\"No. of pupils\", \"Avg Scores\", \"Std Dev\", \"Std Error\")) %&gt;%\n         formatRound(columns = c('mean', 'sd', 'se'), digits = 2)\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisualising Uncertainty: ggdist package\n\nVisualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(\n    show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")\n\n\n\n\n\n\n\n\n\n\n\nVisualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\nInstalling ungeviz package\n\ndevtools::install_github(\"wilkelab/ungeviz\")\n\n\nlibrary(ungeviz)\n\n\nggplot(data = exam, \n       (aes(x = factor(RACE), \n            y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#0072B2\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                             group = RACE), \n              height = 0.6, \n              color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnel-plots-for-fair-comparisons",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnel-plots-for-fair-comparisons",
    "title": "Hands-on_Ex04",
    "section": "Funnel Plots for Fair Comparisons",
    "text": "Funnel Plots for Fair Comparisons\n\nFunnelPlotR methods\n\nFunnelPlotR methods: The basic plot\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Positive,\n  denominator = Death,\n  group = `Sub-district`\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\nFunnelPlotR methods: Makeover 1\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\nFunnelPlotR methods: Makeover 2\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #&lt;&lt;           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #&lt;&lt;\n  y_label = \"Cumulative Fatality Rate\"  #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\nFunnel Plot for Fair Visual Comparison: ggplot2 methods\n\nComputing the basic derived fields\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)\n\n\n\nCalculate lower and upper limits for 95% and 99.9% CI\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)\n\n\n\nPlotting a static funnel plot\n\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np\n\n\n\n\n\n\n\n\n\n\nInteractive Funnel Plot: plotly + ggplot2\n\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "title": "Hands-on_Ex06",
    "section": "",
    "text": "pacman::p_load(scales, viridis, lubridate, ggthemes,\n               gridExtra, readxl, knitr, data.table,\n               CGPfunctions, ggHoriPlot, tidyverse)\n\n\n\n\n\nattacks &lt;- read_csv(\"data/eventlog.csv\")\n\n\n\n\n\nkable(head(attacks))\n\n\n\n\ntimestamp\nsource_country\ntz\n\n\n\n\n2015-03-12 15:59:16\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:00:48\nFR\nEurope/Paris\n\n\n2015-03-12 16:02:26\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:02:38\nUS\nAmerica/Chicago\n\n\n2015-03-12 16:03:22\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:03:45\nCN\nAsia/Shanghai"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#getting-started",
    "title": "Hands-on_Ex06",
    "section": "",
    "text": "pacman::p_load(scales, viridis, lubridate, ggthemes,\n               gridExtra, readxl, knitr, data.table,\n               CGPfunctions, ggHoriPlot, tidyverse)\n\n\n\n\n\nattacks &lt;- read_csv(\"data/eventlog.csv\")\n\n\n\n\n\nkable(head(attacks))\n\n\n\n\ntimestamp\nsource_country\ntz\n\n\n\n\n2015-03-12 15:59:16\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:00:48\nFR\nEurope/Paris\n\n\n2015-03-12 16:02:26\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:02:38\nUS\nAmerica/Chicago\n\n\n2015-03-12 16:03:22\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:03:45\nCN\nAsia/Shanghai"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#data-preparation",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#data-preparation",
    "title": "Hands-on_Ex06",
    "section": "Data Preparation",
    "text": "Data Preparation\n\nStep 1: Deriving weekday and hour of day fields\n\nmake_hr_wkday &lt;- function(ts, sc, tz) {\n  real_times &lt;- ymd_hms(ts, \n                        tz = tz[1], \n                        quiet = TRUE)\n  dt &lt;- data.table(source_country = sc,\n                   wkday = weekdays(real_times),\n                   hour = hour(real_times))\n  return(dt)\n  }\n\n\n\nStep 2: Deriving the attacks tibble data frame\n\nwkday_levels &lt;- c('Saturday', 'Friday', \n                  'Thursday', 'Wednesday', \n                  'Tuesday', 'Monday', \n                  'Sunday')\n\nattacks &lt;- attacks %&gt;%\n  group_by(tz) %&gt;%\n  do(make_hr_wkday(.$timestamp, \n                   .$source_country, \n                   .$tz)) %&gt;% \n  ungroup() %&gt;% \n  mutate(wkday = factor(\n    wkday, levels = wkday_levels),\n    hour  = factor(\n      hour, levels = 0:23))\n\n\nkable(head(attacks))\n\n\n\n\ntz\nsource_country\nwkday\nhour\n\n\n\n\nAfrica/Cairo\nBG\nSaturday\n20\n\n\nAfrica/Cairo\nTW\nSunday\n6\n\n\nAfrica/Cairo\nTW\nSunday\n8\n\n\nAfrica/Cairo\nCN\nSunday\n11\n\n\nAfrica/Cairo\nUS\nSunday\n15\n\n\nAfrica/Cairo\nCA\nMonday\n11"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#building-the-calendar-heatmaps",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#building-the-calendar-heatmaps",
    "title": "Hands-on_Ex06",
    "section": "Building the Calendar Heatmaps",
    "text": "Building the Calendar Heatmaps\n\ngrouped &lt;- attacks %&gt;% \n  count(wkday, hour) %&gt;% \n  ungroup() %&gt;%\n  na.omit()\n\nggplot(grouped, \n       aes(hour, \n           wkday, \n           fill = n)) + \ngeom_tile(color = \"white\", \n          size = 0.1) + \ntheme_tufte(base_family = \"Helvetica\") + \ncoord_equal() +\nscale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\nlabs(x = NULL, \n     y = NULL, \n     title = \"Attacks by weekday and time of day\") +\ntheme(axis.ticks = element_blank(),\n      plot.title = element_text(hjust = 0.5),\n      legend.title = element_text(size = 8),\n      legend.text = element_text(size = 6) )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#building-multiple-calendar-heatmaps",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#building-multiple-calendar-heatmaps",
    "title": "Hands-on_Ex06",
    "section": "Building Multiple Calendar Heatmaps",
    "text": "Building Multiple Calendar Heatmaps\n\nStep 1: Deriving attack by country object\n\nattacks_by_country &lt;- count(\n  attacks, source_country) %&gt;%\n  mutate(percent = percent(n/sum(n))) %&gt;%\n  arrange(desc(n))\n\n\n\nStep 2: Preparing the tidy data frame\n\ntop4 &lt;- attacks_by_country$source_country[1:4]\ntop4_attacks &lt;- attacks %&gt;%\n  filter(source_country %in% top4) %&gt;%\n  count(source_country, wkday, hour) %&gt;%\n  ungroup() %&gt;%\n  mutate(source_country = factor(\n    source_country, levels = top4)) %&gt;%\n  na.omit()\n\n\n\nStep 3: Plotting the Multiple Calender Heatmap by using ggplot2 package\n\nggplot(top4_attacks, \n       aes(hour, \n           wkday, \n           fill = n)) + \n  geom_tile(color = \"white\", \n          size = 0.1) + \n  theme_tufte(base_family = \"Helvetica\") + \n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\n  facet_wrap(~source_country, ncol = 2) +\n  labs(x = NULL, y = NULL, \n     title = \"Attacks on top 4 countries by weekday and time of day\") +\n  theme(axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 7),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6) )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plotting-cycle-plot",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plotting-cycle-plot",
    "title": "Hands-on_Ex06",
    "section": "Plotting Cycle Plot",
    "text": "Plotting Cycle Plot\n\nStep 1: Data Import\n\nair &lt;- read_excel(\"data/arrivals_by_air.xlsx\")\n\n\n\nStep 2: Deriving month and year fields\n\nair$month &lt;- factor(month(air$`Month-Year`), \n                    levels=1:12, \n                    labels=month.abb, \n                    ordered=TRUE) \nair$year &lt;- year(ymd(air$`Month-Year`))\n\n\n\nStep 3: Extracting the target country\n\nVietnam &lt;- air %&gt;% \n  select(`Vietnam`, \n         month, \n         year) %&gt;%\n  filter(year &gt;= 2010)\n\n\n\nStep 4: Computing year average arrivals by month\n\nhline.data &lt;- Vietnam %&gt;% \n  group_by(month) %&gt;%\n  summarise(avgvalue = mean(`Vietnam`))\n\n\n\nStep 5: Plotting the cycle plot\n\nggplot() + \n  geom_line(data=Vietnam,\n            aes(x=year, \n                y=`Vietnam`, \n                group=month), \n            colour=\"black\") +\n  geom_hline(aes(yintercept=avgvalue), \n             data=hline.data, \n             linetype=6, \n             colour=\"red\", \n             size=0.5) + \n  facet_grid(~month) +\n  labs(axis.text.x = element_blank(),\n       title = \"Visitor arrivals from Vietnam by air, Jan 2010-Dec 2019\") +\n  xlab(\"\") +\n  ylab(\"No. of Visitors\") +\n  theme_tufte(base_family = \"Helvetica\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plotting-slopegraph",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plotting-slopegraph",
    "title": "Hands-on_Ex06",
    "section": "Plotting Slopegraph",
    "text": "Plotting Slopegraph\n\nStep 1: Data Import\n\nrice &lt;- read_csv(\"data/rice.csv\")\n\n\n\nStep 2: Plotting the slopegraph\n\nrice %&gt;% \n  mutate(Year = factor(Year)) %&gt;%\n  filter(Year %in% c(1961, 1980)) %&gt;%\n  newggslopegraph(Year, Yield, Country,\n                Title = \"Rice Yield of Top 11 Asian Counties\",\n                SubTitle = \"1961-1980\",\n                Caption = \"Prepared by: Dr. Kam Tin Seong\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html",
    "title": "Hands-on_Ex08",
    "section": "",
    "text": "pacman::p_load(sf, tmap, tidyverse)\n\n\n\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `D:\\easantl\\ISSS608-VAA\\Hands-on_Ex\\Hands-on_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\n\n\n\n\npopdata &lt;- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n\n\n\n\n\n\n\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup() %&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n\n\n\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate(across(c(PA, SZ), toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(fill = \"DEPENDENCY\", \n              fill.scale = tm_scale_intervals(\n                style = \"quantile\",\n                n = 5,\n                values = \"brewer.blues\"),\n              fill.legend = tm_legend(\n                title = \"Dependency ratio\")) +\n  tm_title(\"Distribution of Dependency Ratio by planning subzone\") +\n  tm_layout(frame = TRUE) +\n  tm_borders(fill_alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(fill = \"DEPENDENCY\") +\n  tm_borders(lwd = 0.01,  \n             fill_alpha = 0.1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"jenks\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"equal\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n### Too many number of classes \ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"pretty\",\n        n = 10)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n### Using k-mean style\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"kmeans\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7867  0.8585  0.8763 19.0000      92 \n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"quantile\",\n        n = 5,\n        values = \"brewer.greens\")) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"quantile\",\n        n = 5,\n        values = \"-brewer.greens\")) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"jenks\",\n        n = 5,\n        values = \"brewer.greens\"),\n      fill.legend = tm_legend(\n        title = \"Dependency ratio\")) +\n  tm_borders(fill_alpha = 0.5) +\n  tm_title(\"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\")\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(fill = \"DEPENDENCY\", \n              fill.scale = tm_scale_intervals(\n                style = \"quantile\",\n                n = 5,\n                values = \"brewer.blues\"),\n              fill.legend = tm_legend(\n                title = \"Dependency ratio\")) +\n  tm_title(\"Distribution of Dependency Ratio by planning subzone\") +\n  tm_layout(frame = TRUE) +\n  tm_borders(fill_alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\ntmap_style(\"white\")\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#getting-started",
    "title": "Hands-on_Ex08",
    "section": "",
    "text": "pacman::p_load(sf, tmap, tidyverse)\n\n\n\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `D:\\easantl\\ISSS608-VAA\\Hands-on_Ex\\Hands-on_Ex08\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\n\n\n\n\npopdata &lt;- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#data-preparation",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#data-preparation",
    "title": "Hands-on_Ex08",
    "section": "",
    "text": "popdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup() %&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n\n\n\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate(across(c(PA, SZ), toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#choropleth-mapping-geospatial-data-using-tmap",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#choropleth-mapping-geospatial-data-using-tmap",
    "title": "Hands-on_Ex08",
    "section": "",
    "text": "tmap_mode(\"plot\")\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(fill = \"DEPENDENCY\", \n              fill.scale = tm_scale_intervals(\n                style = \"quantile\",\n                n = 5,\n                values = \"brewer.blues\"),\n              fill.legend = tm_legend(\n                title = \"Dependency ratio\")) +\n  tm_title(\"Distribution of Dependency Ratio by planning subzone\") +\n  tm_layout(frame = TRUE) +\n  tm_borders(fill_alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(fill = \"DEPENDENCY\") +\n  tm_borders(lwd = 0.01,  \n             fill_alpha = 0.1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"jenks\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"equal\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n### Too many number of classes \ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"pretty\",\n        n = 10)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n### Using k-mean style\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"kmeans\",\n        n = 5)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7867  0.8585  0.8763 19.0000      92 \n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"quantile\",\n        n = 5,\n        values = \"brewer.greens\")) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"quantile\",\n        n = 5,\n        values = \"-brewer.greens\")) +\n  tm_borders(fill_alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\",\n      fill.scale = tm_scale_intervals(\n        style = \"jenks\",\n        n = 5,\n        values = \"brewer.greens\"),\n      fill.legend = tm_legend(\n        title = \"Dependency ratio\")) +\n  tm_borders(fill_alpha = 0.5) +\n  tm_title(\"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\")\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(fill = \"DEPENDENCY\", \n              fill.scale = tm_scale_intervals(\n                style = \"quantile\",\n                n = 5,\n                values = \"brewer.blues\"),\n              fill.legend = tm_legend(\n                title = \"Dependency ratio\")) +\n  tm_title(\"Distribution of Dependency Ratio by planning subzone\") +\n  tm_layout(frame = TRUE) +\n  tm_borders(fill_alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\n\ntmap_style(\"white\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-small-multiple-choropleth-maps",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-small-multiple-choropleth-maps",
    "title": "Hands-on_Ex08",
    "section": "",
    "text": "tm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\n\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#getting-started-1",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#getting-started-1",
    "title": "Hands-on_Ex08",
    "section": "Getting Started",
    "text": "Getting Started\n\npacman::p_load(sf, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#geospatial-data-wrangling",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#geospatial-data-wrangling",
    "title": "Hands-on_Ex08",
    "section": "Geospatial Data Wrangling",
    "text": "Geospatial Data Wrangling\n\nData Import and Preparation\n\nsgpools &lt;- read_csv(\"data/aspatial/SGPools_svy21.csv\")\n\n\nlist(sgpools) \n\n[[1]]\n# A tibble: 306 × 7\n   NAME           ADDRESS POSTCODE XCOORD YCOORD `OUTLET TYPE` `Gp1Gp2 Winnings`\n   &lt;chr&gt;          &lt;chr&gt;      &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;                     &lt;dbl&gt;\n 1 Livewire (Mar… 2 Bayf…    18972 30842. 29599. Branch                        5\n 2 Livewire (Res… 26 Sen…    98138 26704. 26526. Branch                       11\n 3 SportsBuzz (K… Lotus …   738078 20118. 44888. Branch                        0\n 4 SportsBuzz (P… 1 Sele…   188306 29777. 31382. Branch                       44\n 5 Prime Serango… Blk 54…   552542 32239. 39519. Branch                        0\n 6 Singapore Poo… 1A Woo…   731001 21012. 46987. Branch                        3\n 7 Singapore Poo… Blk 64…   370064 33990. 34356. Branch                       17\n 8 Singapore Poo… Blk 88…   370088 33847. 33976. Branch                       16\n 9 Singapore Poo… Blk 30…   540308 33910. 41275. Branch                       21\n10 Singapore Poo… Blk 20…   560202 29246. 38943. Branch                       25\n# ℹ 296 more rows\n\n\n\n\nCreating a sf data frame from an aspatial data frame\n\nsgpools_sf &lt;- st_as_sf(sgpools, \n                       coords = c(\"XCOORD\", \"YCOORD\"),\n                       crs= 3414)\n\n\nlist(sgpools_sf)\n\n[[1]]\nSimple feature collection with 306 features and 5 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 7844.194 ymin: 26525.7 xmax: 45176.57 ymax: 47987.13\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 306 × 6\n   NAME                         ADDRESS POSTCODE `OUTLET TYPE` `Gp1Gp2 Winnings`\n * &lt;chr&gt;                        &lt;chr&gt;      &lt;dbl&gt; &lt;chr&gt;                     &lt;dbl&gt;\n 1 Livewire (Marina Bay Sands)  2 Bayf…    18972 Branch                        5\n 2 Livewire (Resorts World Sen… 26 Sen…    98138 Branch                       11\n 3 SportsBuzz (Kranji)          Lotus …   738078 Branch                        0\n 4 SportsBuzz (PoMo)            1 Sele…   188306 Branch                       44\n 5 Prime Serangoon North        Blk 54…   552542 Branch                        0\n 6 Singapore Pools Woodlands C… 1A Woo…   731001 Branch                        3\n 7 Singapore Pools 64 Circuit … Blk 64…   370064 Branch                       17\n 8 Singapore Pools 88 Circuit … Blk 88…   370088 Branch                       16\n 9 Singapore Pools Anchorvale … Blk 30…   540308 Branch                       21\n10 Singapore Pools Ang Mo Kio … Blk 20…   560202 Branch                       25\n# ℹ 296 more rows\n# ℹ 1 more variable: geometry &lt;POINT [m]&gt;"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-proportional-symbol-map",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#drawing-proportional-symbol-map",
    "title": "Hands-on_Ex08",
    "section": "Drawing Proportional Symbol Map",
    "text": "Drawing Proportional Symbol Map\n\ntmap_mode(\"view\")\n\n\nIt all started with an interactive point symbol map\n\ntm_shape(sgpools_sf) + \n  tm_bubbles(fill = \"red\",\n           size = 1,\n           col = \"black\",\n           lwd = 1)\n\n\n\n\n\n\n\nLets make it proportional\n\ntm_shape(sgpools_sf) + \n  tm_bubbles(fill = \"red\",\n             size = \"Gp1Gp2 Winnings\",\n             col = \"black\",\n             lwd = 1)\n\n\n\n\n\n\n\n\nLets give it a different colour\n\ntm_shape(sgpools_sf) + \n  tm_bubbles(fill = \"OUTLET TYPE\", \n             size = \"Gp1Gp2 Winnings\",\n             col = \"black\",\n             lwd = 1)\n\n\n\n\n\n\n\n\n\nI have a twin brothers\n\ntm_shape(sgpools_sf) + \n  tm_bubbles(fill = \"OUTLET TYPE\", \n             size = \"Gp1Gp2 Winnings\",\n             col = \"black\",\n             lwd = 1) + \n  tm_facets(by= \"OUTLET TYPE\",\n            nrow = 1,\n            sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#getting-started-2",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#getting-started-2",
    "title": "Hands-on_Ex08",
    "section": "Getting Started",
    "text": "Getting Started\n\nInstalling and loading packages\n\npacman::p_load(tmap, tidyverse, sf)\n\n\n\nImporting data\n\nNGA_wp &lt;- read_rds(\"data/rds/NGA_wp.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#basic-choropleth-mapping",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#basic-choropleth-mapping",
    "title": "Hands-on_Ex08",
    "section": "Basic Choropleth Mapping",
    "text": "Basic Choropleth Mapping\n\nVisualising distribution of non-functional water point\n\np1 &lt;- tm_shape(NGA_wp) +\n  tm_polygons(fill = \"wp_functional\",\n             fill.scale = tm_scale_intervals(\n               style = \"equal\",\n               n = 10,\n               values = \"brewer.blues\"),\n             fill.legend = tm_legend(\n               position = c(\"right\", \"bottom\"))) +\n  tm_borders(lwd = 0.1,\n             fill_alpha = 1) +\n  tm_title(\"Distribution of functional water point by LGAs\")\n\n\np2 &lt;- tm_shape(NGA_wp) + \n  tm_polygons(fill = \"total_wp\", \n              fill.scale = tm_scale_intervals(\n                style = \"equal\",\n                n = 10,\n                values = \"brewer.blues\"),\n              fill.legend = tm_legend(\n                position = c(\"right\", \"bottom\"))) +\n  tm_borders(lwd = 0.1, \n             fill_alpha = 1) + \n  tm_title(\"Distribution of total  water point by LGAs\")\n\n\ntmap_arrange(p2, p1, nrow = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#choropleth-map-for-rates",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#choropleth-map-for-rates",
    "title": "Hands-on_Ex08",
    "section": "Choropleth Map for Rates",
    "text": "Choropleth Map for Rates\n\nDeriving Proportion of Functional Water Points and Non-Functional Water Points\n\nNGA_wp &lt;- NGA_wp %&gt;%\n  mutate(pct_functional = wp_functional/total_wp) %&gt;%\n  mutate(pct_nonfunctional = wp_nonfunctional/total_wp)\n\n\n\nPlotting map of rate\n\ntm_shape(NGA_wp) +\n  tm_polygons(\"pct_functional\",\n              fill.scale = tm_scale_intervals(\n                style = \"equal\",\n                n = 10,\n                values = \"brewer.blues\"),\n              fill.legend = tm_legend(\n                position = c(\"right\", \"bottom\"))) + \n  tm_borders(lwd = 0.1,\n             fill_alpha = 1) +\n  tm_title(\"Rate map of functional water point by LGAs\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#extreme-value-maps",
    "href": "Hands-on_Ex/Hands-on_Ex08/Hands-on_Ex08.html#extreme-value-maps",
    "title": "Hands-on_Ex08",
    "section": "Extreme Value Maps",
    "text": "Extreme Value Maps\n\nData Preparation\n\n# Step 1: Exclude records with NA\nNGA_wp &lt;- NGA_wp %&gt;%\n  drop_na()\n\n\n# Creating customised classification and extracting values\n\npercent &lt;- c(0,.01,.1,.5,.9,.99,1)\nvar &lt;- NGA_wp[\"pct_functional\"] %&gt;%\n  st_set_geometry(NULL)\nquantile(var[,1], percent)\n\n       0%        1%       10%       50%       90%       99%      100% \n0.0000000 0.0000000 0.2169811 0.4791667 0.8611111 1.0000000 1.0000000 \n\n\n\n\nWriting function\n\nCreating the get.var function\n\nget.var &lt;- function(vname,df) {\n  v &lt;- df[vname] %&gt;% \n    st_set_geometry(NULL)\n  v &lt;- unname(v[,1])\n  return(v)\n}\n\n\n\nA percentile mapping function\n\npercentmap &lt;- function(vnam, df, legtitle=NA, mtitle=\"Percentile Map\"){\n  percent &lt;- c(0,.01,.1,.5,.9,.99,1)\n  var &lt;- get.var(vnam, df)\n  bperc &lt;- quantile(var, percent)\n  tm_shape(df) +\n  tm_polygons() +\n  tm_shape(df) +\n     tm_polygons(vnam,\n             title=legtitle,\n             breaks=bperc,\n             palette=\"Blues\",\n          labels=c(\"&lt; 1%\", \"1% - 10%\", \"10% - 50%\", \"50% - 90%\", \"90% - 99%\", \"&gt; 99%\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"right\",\"bottom\"))\n}\n\n\n\nTest drive the percentile mapping function\n\npercentmap(\"total_wp\", NGA_wp)\n\n\n\n\n\n\n\n\n\n\n\nBox map\n\nggplot(data = NGA_wp,\n       aes(x = \"\",\n           y = wp_nonfunctional)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\nCreating the boxbreaks function\n\nboxbreaks &lt;- function(v,mult=1.5) {\n  qv &lt;- unname(quantile(v))\n  iqr &lt;- qv[4] - qv[2]\n  upfence &lt;- qv[4] + mult * iqr\n  lofence &lt;- qv[2] - mult * iqr\n  # initialize break points vector\n  bb &lt;- vector(mode=\"numeric\",length=7)\n  # logic for lower and upper fences\n  if (lofence &lt; qv[1]) {  # no lower outliers\n    bb[1] &lt;- lofence\n    bb[2] &lt;- floor(qv[1])\n  } else {\n    bb[2] &lt;- lofence\n    bb[1] &lt;- qv[1]\n  }\n  if (upfence &gt; qv[5]) { # no upper outliers\n    bb[7] &lt;- upfence\n    bb[6] &lt;- ceiling(qv[5])\n  } else {\n    bb[6] &lt;- upfence\n    bb[7] &lt;- qv[5]\n  }\n  bb[3:5] &lt;- qv[2:4]\n  return(bb)\n}\n\n\n\nCreating the get.var function\n\nget.var &lt;- function(vname,df) {\n  v &lt;- df[vname] %&gt;% st_set_geometry(NULL)\n  v &lt;- unname(v[,1])\n  return(v)\n}\n\n\n\nTest drive the newly created function\n\nvar &lt;- get.var(\"wp_nonfunctional\", NGA_wp) \nboxbreaks(var)\n\n[1] -56.5   0.0  14.0  34.0  61.0 131.5 278.0\n\n\n\n\nBoxmap function\n\nboxmap &lt;- function(vnam, df, \n                   legtitle=NA,\n                   mtitle=\"Box Map\",\n                   mult=1.5){\n  var &lt;- get.var(vnam,df)\n  bb &lt;- boxbreaks(var)\n  tm_shape(df) +\n    tm_polygons() +\n  tm_shape(df) +\n     tm_fill(vnam,title=legtitle,\n             breaks=bb,\n             palette=\"Blues\",\n          labels = c(\"lower outlier\", \n                     \"&lt; 25%\", \n                     \"25% - 50%\", \n                     \"50% - 75%\",\n                     \"&gt; 75%\", \n                     \"upper outlier\"))  +\n  tm_borders() +\n  tm_layout(main.title = mtitle, \n            title.position = c(\"left\",\n                               \"top\"))\n}\n\n\ntmap_mode(\"plot\")\nboxmap(\"wp_nonfunctional\", NGA_wp)"
  },
  {
    "objectID": "In-class_Ex/In-class_Exercise.html",
    "href": "In-class_Ex/In-class_Exercise.html",
    "title": "In-class_Exercise week5",
    "section": "",
    "text": "pacman ::p_load(tidyverse, jsonlite, SmartEDA, tydygraph, ggraph)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-Visual Analytics and Application",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Application homepage. In this website, you will find my coursework prepared for this course!"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Phase_2/Take-home_Ex01_Phase2.html",
    "href": "Take-home_Ex/Take-home_Ex01/Phase_2/Take-home_Ex01_Phase2.html",
    "title": "Take-home_Ex01_Phase2",
    "section": "",
    "text": "I‘d like to provide my personal thoughts to our friend Zhang Jinghan’s work.\nLink: https://isss608-visualanalytics.netlify.app/take-home_ex/take-home_ex01/take-home_ex01\n\n\n\n\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, ggiraph, plotly, \n                DT, readxl, gifski, gapminder,\n               gganimate, scales) \n\n\n\n\n\npop_data  &lt;- read.csv(\"data/respopagesex2024.csv\")\n\nsgresidence  &lt;- read.csv(\"data/respopagesex2024.csv\")\n\n\n\n\n\nHere are the areas across all three visuals where she did very well and I should learn from:\n\nHer insights into the data were very profound, and she did a great job transforming the data to uncover more observations. For example, she derived the Youth Dependency Ratio (YDR) and the Elderly Dependency Ratio (EDR) to provide deeper insights into the issue of population aging. In comparison, my own assignment, which only compared population distributions, was not as insightful.\nShe used colors very skillfully in her visualization—not just to make her work more visually appealing, but more importantly, to highlight contrasts between different groups. For example, she used red and blue to distinguish between male and female groups, and orange and purple to differentiate between younger and older age groups. These thoughtful color choices made her entire visualization much clearer and easier to understand.\nHer choice of visualization types was highly appropriate—for instance, using bar charts to represent population distribution and a scatter quadrant map to show the distribution of YDR and EDR across subzones. Personally, I couldn’t think of a better choice of charts to convey the data more effectively.\n\n\n\n\nFollowing are my own ideas to adjust the visuals:\n\nIn her Visualization 1, the Population Pyramid, she presented a comprehensive view of the population structure of Singapore residents in 2024, broken down by gender and age group. However, from a reader’s perspective, the visualization contains too much information in a single chart, which may require extra effort to understand the relationships among population size, gender, age group, and percentage of the total population. In another word, the visual is not very straightforward. If it were up to me, I would present these pieces of information separately for greater clarity.\n\nFor the code, I’d like to simply “borrow” the approach used by our friend Luo Yuming, who streamlined the amount of information in the chart and represented the gender ratio comparison using an additional pie chart.\n\n# Standardise column names\npop_data &lt;- pop_data %&gt;%\n  rename(\n    Planning_Area = PA,\n    Subzone = SZ,\n    Age = Age,\n    Sex = Sex,\n    Population = Pop,\n    Year = Time\n  ) %&gt;%\n  filter(Year == 2024) %&gt;%\n  mutate(\n    Age_numeric = ifelse(Age == \"90_and_Over\", 90, as.integer(Age)),  \n    Sex = ifelse(Sex == \"Males\", \"Male\", \"Female\")\n  )\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `Age_numeric = ifelse(Age == \"90_and_Over\", 90,\n  as.integer(Age))`.\nCaused by warning in `ifelse()`:\n! NAs introduced by coercion\n\nage_distribution &lt;- pop_data %&gt;%\n  filter(Sex %in% c(\"Male\", \"Female\")) %&gt;%\n  group_by(Planning_Area, Age_numeric) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  rename(Age = Age_numeric)\n\n\nweighted_median &lt;- function(df) {\n  df &lt;- df[order(df$Age), ]\n  cum_pop &lt;- cumsum(df$Population)\n  cutoff &lt;- sum(df$Population) / 2\n  df$Age[which(cum_pop &gt;= cutoff)[1]]\n}\n\n\nmedian_age_summary &lt;- age_distribution %&gt;%\n  group_by(Planning_Area) %&gt;%\n  summarise(Median_Age = weighted_median(cur_data_all()))\n\nWarning: There was 1 warning in `summarise()`.\nℹ In argument: `Median_Age = weighted_median(cur_data_all())`.\nℹ In group 1: `Planning_Area = \"Ang Mo Kio\"`.\nCaused by warning:\n! `cur_data_all()` was deprecated in dplyr 1.1.0.\nℹ Please use `pick()` instead.\n\ngender_summary &lt;- pop_data %&gt;%\n  group_by(Sex) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(Percent = Population / sum(Population),\n         Label = paste0(percent(Percent, accuracy = 0.1)))  \n\n\np1 &lt;- ggplot(gender_summary, aes(x = \"\", y = Population, fill = Sex)) +\n  geom_col(width = 1, color = \"white\") +\n  coord_polar(theta = \"y\") +\n  geom_text(aes(label = Label), position = position_stack(vjust = 0.5),\n            size = 2.5, fontface = \"bold\", color = \"black\") + \n  scale_fill_manual(values = c(\"Male\" = \"#a3c3cc\", \"Female\" = \"#d4a5a5\")) +\n  labs(title = \"Gender Distribution\") +\n  theme_void() +\n  theme(\n    plot.margin = margin(10, 10, 10, 10),  \n    legend.position = \"none\",\n    plot.title = element_text(size = 9, face = \"bold\", hjust = 0.5)\n  )\n\n\n\npyramid_data &lt;- pop_data %&gt;%\n  filter(Sex %in% c(\"Male\", \"Female\")) %&gt;%\n  mutate(AgeGroup = cut(Age_numeric,\n                        breaks = c(seq(0, 90, 10), Inf),\n                        right = FALSE,\n                        labels = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\",\n                                   \"40-49\", \"50-59\", \"60-69\", \"70-79\",\n                                   \"80-89\", \"90+\"))) %&gt;%\n  group_by(AgeGroup, Sex) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(Population = ifelse(Sex == \"Male\", -Population, Population))\n\n\n\np2 &lt;- ggplot(pyramid_data, aes(x = Population, y = AgeGroup, fill = Sex)) +\n  geom_col(width = 0.9) +\n  scale_x_continuous(labels = function(x) paste0(abs(x / 1000), \"k\")) +\n  scale_fill_manual(values = c(\"Male\" = \"#a3c3cc\", \"Female\" = \"#d4a5a5\")) +\n  labs(\n    title = \"Population Pyramid by Age Group and Gender (2024)\",\n    x = \"Population\",\n    y = \"Age Group\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5),\n    legend.position = \"none\"\n  )\n\n\ntop10_pa_names &lt;- pop_data %&gt;%\n  group_by(Planning_Area) %&gt;%\n  summarise(Total = sum(Population), .groups = \"drop\") %&gt;%\n  arrange(desc(Total)) %&gt;%\n  slice_head(n = 10) %&gt;%\n  pull(Planning_Area)\n\n\ntop10_pyramid &lt;- pop_data %&gt;%\n  filter(Planning_Area %in% top10_pa_names, Sex %in% c(\"Male\", \"Female\")) %&gt;%\n  group_by(Planning_Area, Sex) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(\n    Population = ifelse(Sex == \"Male\", -Population, Population),\n    Planning_Area = factor(Planning_Area, levels = rev(top10_pa_names))\n  )\n\n\n\np3 &lt;-ggplot(top10_pyramid, aes(x = Population, y = Planning_Area, fill = Sex)) +\n  geom_col(width = 0.7) +\n  scale_x_continuous(labels = function(x) paste0(abs(x / 1000), name = \"k\")) +\n  scale_fill_manual(values = c(\"Male\" = \"#a3c3cc\", \"Female\" = \"#d4a5a5\")) +\n  labs(\n    title = \"Population Pyramid of Top 10 Planning Areas (2024)\",\n    y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16, hjust = 0.5),\n    axis.text = element_text(size = 10),\n    legend.position = \"bottom\"\n  )\n\n\n(p1 + p2) / p3 +\n  plot_layout(\n    widths = c(1, 2),    \n    heights = c(1, 1.2)  \n  ) +\n  plot_annotation(\n    title = \"Singapore’s 2024 Population Overview\",\n    theme = theme(\n      plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5)\n    )\n  )\n\n\n\n\n\n\n\n\n\nFor visualization 2, I’d like to make a very simple adjustment which can directly hit the point, which is add a label to each zone on the chart. If required, we may also make this to an interactive chart.\n\nMy shot:\n\nsgresidence &lt;- sgresidence %&gt;%\n  mutate(age = as.integer(Age))\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `age = as.integer(Age)`.\nCaused by warning:\n! NAs introduced by coercion\n\nsgresidence %&gt;%\n  filter(is.na(as.integer(Age))) %&gt;%\n  distinct(Age)\n\nWarning: There was 1 warning in `filter()`.\nℹ In argument: `is.na(as.integer(Age))`.\nCaused by warning:\n! NAs introduced by coercion\n\n\n          Age\n1 90_and_Over\n\nsgresidence %&gt;%\n  filter(Age == \"90_and_Over\") %&gt;%\n  summarise(total_90plus = sum(Pop)) %&gt;%\n  mutate(total_pop = sum(sgresidence$Pop),\n         percent = total_90plus / total_pop * 100)\n\n  total_90plus total_pop   percent\n1        25290   4193530 0.6030719\n\nsgresidence &lt;- sgresidence %&gt;%\n  mutate(\n    Age = ifelse(Age == \"90_and_Over\", \"90\", Age),\n    age = as.integer(Age)\n  )\n\nsgresidence &lt;- sgresidence %&gt;%\n  filter(Pop &gt; 0)\n\n## 1 ────────── Calculate ratios\ndep_sz &lt;- sgresidence %&gt;% \n  mutate(group = case_when(\n    age &lt; 15  ~ \"Youth\",\n    age &gt;= 65 ~ \"Elderly\",\n    TRUE      ~ \"Working\")) %&gt;% \n  group_by(SZ, group) %&gt;% \n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;% \n  pivot_wider(names_from = group, values_from = Pop, values_fill = 0) %&gt;% \n  mutate(\n    YDR        = Youth / Working,\n    EDR        = Elderly / Working,\n    Dependants = Youth + Elderly,\n    grp        = if_else(YDR &gt; EDR, \"Y_dom\", \"O_dom\"),\n    log_ratio  = log(pmax(EDR, 1e-6) / pmax(YDR, 1e-6)),  # avoid log(0)\n    YDR_pct    = percent_rank(YDR) * 100,\n    EDR_pct    = percent_rank(EDR) * 100\n  )\n\n## 2 ────────── Discretize log_ratio into \"Low\" / \"Mid\" / \"High\"\ndep_plot &lt;- dep_sz %&gt;%\n  mutate(\n    imbalance = cut(abs(log_ratio),\n                    breaks = quantile(abs(log_ratio), probs = c(0, 1/3, 2/3, 1)),\n                    labels = c(\"Low\", \"Mid\", \"High\"),\n                    include.lowest = TRUE))\n\n## 3 ────────── Define stepped color table\ncol_tbl &lt;- tribble(\n  ~grp,     ~imbalance, ~col,\n  \"Y_dom\", \"Low\",  \"#FFF2B2\",\n  \"Y_dom\", \"Mid\",  \"#FFC94A\",\n  \"Y_dom\", \"High\", \"#FF9300\",\n  \"O_dom\", \"Low\",  \"#E3DFF5\",\n  \"O_dom\", \"Mid\",  \"#AF94E1\",\n  \"O_dom\", \"High\", \"#6B42BF\"\n)\n\n## 4 ────────── Merge color\ndep_plot &lt;- dep_plot %&gt;%\n  left_join(col_tbl, by = c(\"grp\", \"imbalance\"))\n\n## 5 ────────── Plot\nggplot(dep_plot, aes(YDR_pct, EDR_pct)) +\n  geom_hline(yintercept = 50, color = \"gray60\") +\n  geom_vline(xintercept = 50, color = \"gray60\") +\n  geom_point(aes(size = Dependants, color = col), alpha = 0.9) +\n  scale_colour_identity() +\n  scale_size_area(max_size = 12,\n                  breaks = c(500, 2000, 5000, 10000),\n                  labels = scales::comma,\n                  name = \"Dependants\\n(headcount)\") +\n  labs(\n    title = \"Youth vs Elderly Dependency Ratio of SG Sub Zones Quadrants (2024)\",\n    subtitle = \"• Hue: Dominant dependency (Purple–Elderly, Yellow–Youth) \\n• Depth: Imbalance level (Low / Mid / High) \\n• Size: Total dependants count\",\n    x = \"Youth Dependency Percentile (YDP)\",\n    y = \"Elderly Dependency Percentile (EDP)\"\n  ) +\n \n  annotate(\"text\", x = 80, y = 90, label = \"Dual-Burden Zones\", fontface = \"bold\", size = 3.5, hjust = 0.5) +\n  annotate(\"text\", x = 80, y = 10, label = \"Young Family Zones\", fontface = \"bold\", size = 3.5, hjust = 0.5) +\n  annotate(\"text\", x = 20, y = 90, label = \"Aging-Dominant Zones\", fontface = \"bold\", size = 3.5, hjust = 0.5) +\n  annotate(\"text\", x = 20, y = 10, label = \"Working Core Zones\", fontface = \"bold\", size = 3.5, hjust = 0.5) +\n  theme_minimal(base_size = 11) +\n  theme(\n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n  )\n\n\n\n\n\n\n\n\n\nFor Visualization 3, I noticed that a): Median lines for both the EDR and YDR are presented, they are not labeled, which may cause confusion. I would recommend adding clear labels to these reference lines. b): It would be helpful to highlight planning areas where EDR exceed the median values, as these zones may warrant closer attention. c): It’s good to show the median EDR and YDR in value so that readers can understand the situation more clearly.\n\nMy shot:\n\n# 1. Categorize by Age Group and summarize population\ndf_agegroup &lt;- sgresidence %&gt;%\n  mutate(AgeGroup = case_when(\n    Age &lt; 15 ~ \"Youth\",\n    Age &lt;= 64 ~ \"WorkingAge\",\n    TRUE ~ \"Elderly\"\n  )) %&gt;%\n  group_by(PA, AgeGroup) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  pivot_wider(names_from = AgeGroup, values_from = Pop, values_fill = 0) %&gt;%\n  mutate(\n    TotalPop = Youth + WorkingAge + Elderly,\n    ElderlyRatio = Elderly / WorkingAge,\n    YouthRatio = Youth / WorkingAge\n  )\n\n# 2. Reshape to long format for stacked bar chart\ndf_age_long &lt;- df_agegroup %&gt;%\n  pivot_longer(cols = c(\"Youth\", \"WorkingAge\", \"Elderly\"),\n               names_to = \"AgeGroup\", values_to = \"Pop\") %&gt;%\n  mutate(PA = fct_reorder(PA, -Pop, .fun = sum))\n\n# 3. Compute median values and max population\nmedian_edr &lt;- median(df_agegroup$ElderlyRatio, na.rm = TRUE)\nmedian_ydr &lt;- median(df_agegroup$YouthRatio, na.rm = TRUE)\nmax_pop    &lt;- max(df_agegroup$TotalPop, na.rm = TRUE)\n\n# 4. Add star marker to EDR above median\ndf_agegroup &lt;- df_agegroup %&gt;%\n  mutate(EDR_star = if_else(ElderlyRatio &gt; median_edr, \"*\", \"\"))\n\n# 5. Define color palette\ncustom_colors &lt;- c(\n  \"Youth\" = \"#FFD700\",        # Gold\n  \"WorkingAge\" = \"#B0B0B0\",   # Gray\n  \"Elderly\" = \"#800080\"       # Purple\n)\n\n# 6. Get rightmost x position\nlast_x &lt;- length(unique(df_age_long$PA))\n\n# 7. Create the plot\nggplot(df_age_long, aes(x = PA, y = Pop, fill = AgeGroup)) +\n  geom_bar(stat = \"identity\", width = 0.95) +\n\n  # Elderly Dependency Ratio line\n  geom_line(\n    data = df_agegroup,\n    aes(x = PA, y = ElderlyRatio * max_pop / 2, group = 1),\n    inherit.aes = FALSE, color = \"#9932CC\", size = 1.2\n  ) +\n\n  # Youth Dependency Ratio line\n  geom_line(\n    data = df_agegroup,\n    aes(x = PA, y = YouthRatio * max_pop / 2, group = 1),\n    inherit.aes = FALSE, color = \"#E67E22\", size = 1.2\n  ) +\n\n  # Red stars for high EDR\n  geom_text(\n    data = df_agegroup %&gt;% filter(EDR_star == \"*\"),\n    aes(x = PA, y = ElderlyRatio * max_pop / 2, label = EDR_star),\n    inherit.aes = FALSE, color = \"red\", size = 5, vjust = -0.8\n  ) +\n\n  # Median lines\n  geom_hline(yintercept = median_edr * max_pop / 2,\n             color = \"black\", linetype = \"solid\", size = 0.5) +\n  geom_hline(yintercept = median_ydr * max_pop / 2,\n             color = \"black\", linetype = \"solid\", size = 0.5) +\n\n  # Median line labels (right)\n  annotate(\"text\", x = last_x, y = median_edr * max_pop / 2,\n           label = \"Median EDR\", vjust = -1, hjust = 1, size = 3, color = \"black\") +\n  annotate(\"text\", x = last_x, y = median_ydr * max_pop / 2,\n           label = \"Median YDR\", vjust = 1.5, hjust = 1, size = 3, color = \"black\") +\n\n  # ➕ EDR/YDR values in red box area\n  annotate(\"text\", x = last_x - 10, y = max_pop * 0.9,\n           label = paste0(\"Median EDR = \", round(median_edr, 2)),\n           hjust = 0, size = 2, color = \"#9932CC\") +\n  annotate(\"text\", x = last_x - 10, y = max_pop * 0.8,\n           label = paste0(\"Median YDR = \", round(median_ydr, 2)),\n           hjust = 0, size = 2, color = \"#E67E22\") +\n\n  # Final touches\n  scale_fill_manual(values = custom_colors) +\n  scale_y_continuous(\n    name = \"Population Count\",\n    sec.axis = sec_axis(~ . * 2 / max_pop, name = \"Dependency Ratio\"),\n    labels = label_number(scale_cut = cut_short_scale())\n  ) +\n  labs(\n    title = \"Population by Planning Area with Youth & Elderly Dependency Ratios\",\n    subtitle = \"* indicates Planning Areas with Elderly Dependency Ratio above the national median\",\n    x = \"Planning Area\",\n    fill = \"Age Group\"\n  ) + \n  \n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"right\"\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Phase_2/Take-home_Ex01_Phase2.html#getting-start",
    "href": "Take-home_Ex/Take-home_Ex01/Phase_2/Take-home_Ex01_Phase2.html#getting-start",
    "title": "Take-home_Ex01_Phase2",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, ggiraph, plotly, \n                DT, readxl, gifski, gapminder,\n               gganimate, scales) \n\n\n\n\n\npop_data  &lt;- read.csv(\"data/respopagesex2024.csv\")\n\nsgresidence  &lt;- read.csv(\"data/respopagesex2024.csv\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Phase_2/Take-home_Ex01_Phase2.html#good-design-principles",
    "href": "Take-home_Ex/Take-home_Ex01/Phase_2/Take-home_Ex01_Phase2.html#good-design-principles",
    "title": "Take-home_Ex01_Phase2",
    "section": "",
    "text": "Here are the areas across all three visuals where she did very well and I should learn from:\n\nHer insights into the data were very profound, and she did a great job transforming the data to uncover more observations. For example, she derived the Youth Dependency Ratio (YDR) and the Elderly Dependency Ratio (EDR) to provide deeper insights into the issue of population aging. In comparison, my own assignment, which only compared population distributions, was not as insightful.\nShe used colors very skillfully in her visualization—not just to make her work more visually appealing, but more importantly, to highlight contrasts between different groups. For example, she used red and blue to distinguish between male and female groups, and orange and purple to differentiate between younger and older age groups. These thoughtful color choices made her entire visualization much clearer and easier to understand.\nHer choice of visualization types was highly appropriate—for instance, using bar charts to represent population distribution and a scatter quadrant map to show the distribution of YDR and EDR across subzones. Personally, I couldn’t think of a better choice of charts to convey the data more effectively."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Phase_2/Take-home_Ex01_Phase2.html#further-improvement",
    "href": "Take-home_Ex/Take-home_Ex01/Phase_2/Take-home_Ex01_Phase2.html#further-improvement",
    "title": "Take-home_Ex01_Phase2",
    "section": "",
    "text": "Following are my own ideas to adjust the visuals:\n\nIn her Visualization 1, the Population Pyramid, she presented a comprehensive view of the population structure of Singapore residents in 2024, broken down by gender and age group. However, from a reader’s perspective, the visualization contains too much information in a single chart, which may require extra effort to understand the relationships among population size, gender, age group, and percentage of the total population. In another word, the visual is not very straightforward. If it were up to me, I would present these pieces of information separately for greater clarity.\n\nFor the code, I’d like to simply “borrow” the approach used by our friend Luo Yuming, who streamlined the amount of information in the chart and represented the gender ratio comparison using an additional pie chart.\n\n# Standardise column names\npop_data &lt;- pop_data %&gt;%\n  rename(\n    Planning_Area = PA,\n    Subzone = SZ,\n    Age = Age,\n    Sex = Sex,\n    Population = Pop,\n    Year = Time\n  ) %&gt;%\n  filter(Year == 2024) %&gt;%\n  mutate(\n    Age_numeric = ifelse(Age == \"90_and_Over\", 90, as.integer(Age)),  \n    Sex = ifelse(Sex == \"Males\", \"Male\", \"Female\")\n  )\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `Age_numeric = ifelse(Age == \"90_and_Over\", 90,\n  as.integer(Age))`.\nCaused by warning in `ifelse()`:\n! NAs introduced by coercion\n\nage_distribution &lt;- pop_data %&gt;%\n  filter(Sex %in% c(\"Male\", \"Female\")) %&gt;%\n  group_by(Planning_Area, Age_numeric) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  rename(Age = Age_numeric)\n\n\nweighted_median &lt;- function(df) {\n  df &lt;- df[order(df$Age), ]\n  cum_pop &lt;- cumsum(df$Population)\n  cutoff &lt;- sum(df$Population) / 2\n  df$Age[which(cum_pop &gt;= cutoff)[1]]\n}\n\n\nmedian_age_summary &lt;- age_distribution %&gt;%\n  group_by(Planning_Area) %&gt;%\n  summarise(Median_Age = weighted_median(cur_data_all()))\n\nWarning: There was 1 warning in `summarise()`.\nℹ In argument: `Median_Age = weighted_median(cur_data_all())`.\nℹ In group 1: `Planning_Area = \"Ang Mo Kio\"`.\nCaused by warning:\n! `cur_data_all()` was deprecated in dplyr 1.1.0.\nℹ Please use `pick()` instead.\n\ngender_summary &lt;- pop_data %&gt;%\n  group_by(Sex) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(Percent = Population / sum(Population),\n         Label = paste0(percent(Percent, accuracy = 0.1)))  \n\n\np1 &lt;- ggplot(gender_summary, aes(x = \"\", y = Population, fill = Sex)) +\n  geom_col(width = 1, color = \"white\") +\n  coord_polar(theta = \"y\") +\n  geom_text(aes(label = Label), position = position_stack(vjust = 0.5),\n            size = 2.5, fontface = \"bold\", color = \"black\") + \n  scale_fill_manual(values = c(\"Male\" = \"#a3c3cc\", \"Female\" = \"#d4a5a5\")) +\n  labs(title = \"Gender Distribution\") +\n  theme_void() +\n  theme(\n    plot.margin = margin(10, 10, 10, 10),  \n    legend.position = \"none\",\n    plot.title = element_text(size = 9, face = \"bold\", hjust = 0.5)\n  )\n\n\n\npyramid_data &lt;- pop_data %&gt;%\n  filter(Sex %in% c(\"Male\", \"Female\")) %&gt;%\n  mutate(AgeGroup = cut(Age_numeric,\n                        breaks = c(seq(0, 90, 10), Inf),\n                        right = FALSE,\n                        labels = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\",\n                                   \"40-49\", \"50-59\", \"60-69\", \"70-79\",\n                                   \"80-89\", \"90+\"))) %&gt;%\n  group_by(AgeGroup, Sex) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(Population = ifelse(Sex == \"Male\", -Population, Population))\n\n\n\np2 &lt;- ggplot(pyramid_data, aes(x = Population, y = AgeGroup, fill = Sex)) +\n  geom_col(width = 0.9) +\n  scale_x_continuous(labels = function(x) paste0(abs(x / 1000), \"k\")) +\n  scale_fill_manual(values = c(\"Male\" = \"#a3c3cc\", \"Female\" = \"#d4a5a5\")) +\n  labs(\n    title = \"Population Pyramid by Age Group and Gender (2024)\",\n    x = \"Population\",\n    y = \"Age Group\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5),\n    legend.position = \"none\"\n  )\n\n\ntop10_pa_names &lt;- pop_data %&gt;%\n  group_by(Planning_Area) %&gt;%\n  summarise(Total = sum(Population), .groups = \"drop\") %&gt;%\n  arrange(desc(Total)) %&gt;%\n  slice_head(n = 10) %&gt;%\n  pull(Planning_Area)\n\n\ntop10_pyramid &lt;- pop_data %&gt;%\n  filter(Planning_Area %in% top10_pa_names, Sex %in% c(\"Male\", \"Female\")) %&gt;%\n  group_by(Planning_Area, Sex) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(\n    Population = ifelse(Sex == \"Male\", -Population, Population),\n    Planning_Area = factor(Planning_Area, levels = rev(top10_pa_names))\n  )\n\n\n\np3 &lt;-ggplot(top10_pyramid, aes(x = Population, y = Planning_Area, fill = Sex)) +\n  geom_col(width = 0.7) +\n  scale_x_continuous(labels = function(x) paste0(abs(x / 1000), name = \"k\")) +\n  scale_fill_manual(values = c(\"Male\" = \"#a3c3cc\", \"Female\" = \"#d4a5a5\")) +\n  labs(\n    title = \"Population Pyramid of Top 10 Planning Areas (2024)\",\n    y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16, hjust = 0.5),\n    axis.text = element_text(size = 10),\n    legend.position = \"bottom\"\n  )\n\n\n(p1 + p2) / p3 +\n  plot_layout(\n    widths = c(1, 2),    \n    heights = c(1, 1.2)  \n  ) +\n  plot_annotation(\n    title = \"Singapore’s 2024 Population Overview\",\n    theme = theme(\n      plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5)\n    )\n  )\n\n\n\n\n\n\n\n\n\nFor visualization 2, I’d like to make a very simple adjustment which can directly hit the point, which is add a label to each zone on the chart. If required, we may also make this to an interactive chart.\n\nMy shot:\n\nsgresidence &lt;- sgresidence %&gt;%\n  mutate(age = as.integer(Age))\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `age = as.integer(Age)`.\nCaused by warning:\n! NAs introduced by coercion\n\nsgresidence %&gt;%\n  filter(is.na(as.integer(Age))) %&gt;%\n  distinct(Age)\n\nWarning: There was 1 warning in `filter()`.\nℹ In argument: `is.na(as.integer(Age))`.\nCaused by warning:\n! NAs introduced by coercion\n\n\n          Age\n1 90_and_Over\n\nsgresidence %&gt;%\n  filter(Age == \"90_and_Over\") %&gt;%\n  summarise(total_90plus = sum(Pop)) %&gt;%\n  mutate(total_pop = sum(sgresidence$Pop),\n         percent = total_90plus / total_pop * 100)\n\n  total_90plus total_pop   percent\n1        25290   4193530 0.6030719\n\nsgresidence &lt;- sgresidence %&gt;%\n  mutate(\n    Age = ifelse(Age == \"90_and_Over\", \"90\", Age),\n    age = as.integer(Age)\n  )\n\nsgresidence &lt;- sgresidence %&gt;%\n  filter(Pop &gt; 0)\n\n## 1 ────────── Calculate ratios\ndep_sz &lt;- sgresidence %&gt;% \n  mutate(group = case_when(\n    age &lt; 15  ~ \"Youth\",\n    age &gt;= 65 ~ \"Elderly\",\n    TRUE      ~ \"Working\")) %&gt;% \n  group_by(SZ, group) %&gt;% \n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;% \n  pivot_wider(names_from = group, values_from = Pop, values_fill = 0) %&gt;% \n  mutate(\n    YDR        = Youth / Working,\n    EDR        = Elderly / Working,\n    Dependants = Youth + Elderly,\n    grp        = if_else(YDR &gt; EDR, \"Y_dom\", \"O_dom\"),\n    log_ratio  = log(pmax(EDR, 1e-6) / pmax(YDR, 1e-6)),  # avoid log(0)\n    YDR_pct    = percent_rank(YDR) * 100,\n    EDR_pct    = percent_rank(EDR) * 100\n  )\n\n## 2 ────────── Discretize log_ratio into \"Low\" / \"Mid\" / \"High\"\ndep_plot &lt;- dep_sz %&gt;%\n  mutate(\n    imbalance = cut(abs(log_ratio),\n                    breaks = quantile(abs(log_ratio), probs = c(0, 1/3, 2/3, 1)),\n                    labels = c(\"Low\", \"Mid\", \"High\"),\n                    include.lowest = TRUE))\n\n## 3 ────────── Define stepped color table\ncol_tbl &lt;- tribble(\n  ~grp,     ~imbalance, ~col,\n  \"Y_dom\", \"Low\",  \"#FFF2B2\",\n  \"Y_dom\", \"Mid\",  \"#FFC94A\",\n  \"Y_dom\", \"High\", \"#FF9300\",\n  \"O_dom\", \"Low\",  \"#E3DFF5\",\n  \"O_dom\", \"Mid\",  \"#AF94E1\",\n  \"O_dom\", \"High\", \"#6B42BF\"\n)\n\n## 4 ────────── Merge color\ndep_plot &lt;- dep_plot %&gt;%\n  left_join(col_tbl, by = c(\"grp\", \"imbalance\"))\n\n## 5 ────────── Plot\nggplot(dep_plot, aes(YDR_pct, EDR_pct)) +\n  geom_hline(yintercept = 50, color = \"gray60\") +\n  geom_vline(xintercept = 50, color = \"gray60\") +\n  geom_point(aes(size = Dependants, color = col), alpha = 0.9) +\n  scale_colour_identity() +\n  scale_size_area(max_size = 12,\n                  breaks = c(500, 2000, 5000, 10000),\n                  labels = scales::comma,\n                  name = \"Dependants\\n(headcount)\") +\n  labs(\n    title = \"Youth vs Elderly Dependency Ratio of SG Sub Zones Quadrants (2024)\",\n    subtitle = \"• Hue: Dominant dependency (Purple–Elderly, Yellow–Youth) \\n• Depth: Imbalance level (Low / Mid / High) \\n• Size: Total dependants count\",\n    x = \"Youth Dependency Percentile (YDP)\",\n    y = \"Elderly Dependency Percentile (EDP)\"\n  ) +\n \n  annotate(\"text\", x = 80, y = 90, label = \"Dual-Burden Zones\", fontface = \"bold\", size = 3.5, hjust = 0.5) +\n  annotate(\"text\", x = 80, y = 10, label = \"Young Family Zones\", fontface = \"bold\", size = 3.5, hjust = 0.5) +\n  annotate(\"text\", x = 20, y = 90, label = \"Aging-Dominant Zones\", fontface = \"bold\", size = 3.5, hjust = 0.5) +\n  annotate(\"text\", x = 20, y = 10, label = \"Working Core Zones\", fontface = \"bold\", size = 3.5, hjust = 0.5) +\n  theme_minimal(base_size = 11) +\n  theme(\n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n  )\n\n\n\n\n\n\n\n\n\nFor Visualization 3, I noticed that a): Median lines for both the EDR and YDR are presented, they are not labeled, which may cause confusion. I would recommend adding clear labels to these reference lines. b): It would be helpful to highlight planning areas where EDR exceed the median values, as these zones may warrant closer attention. c): It’s good to show the median EDR and YDR in value so that readers can understand the situation more clearly.\n\nMy shot:\n\n# 1. Categorize by Age Group and summarize population\ndf_agegroup &lt;- sgresidence %&gt;%\n  mutate(AgeGroup = case_when(\n    Age &lt; 15 ~ \"Youth\",\n    Age &lt;= 64 ~ \"WorkingAge\",\n    TRUE ~ \"Elderly\"\n  )) %&gt;%\n  group_by(PA, AgeGroup) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  pivot_wider(names_from = AgeGroup, values_from = Pop, values_fill = 0) %&gt;%\n  mutate(\n    TotalPop = Youth + WorkingAge + Elderly,\n    ElderlyRatio = Elderly / WorkingAge,\n    YouthRatio = Youth / WorkingAge\n  )\n\n# 2. Reshape to long format for stacked bar chart\ndf_age_long &lt;- df_agegroup %&gt;%\n  pivot_longer(cols = c(\"Youth\", \"WorkingAge\", \"Elderly\"),\n               names_to = \"AgeGroup\", values_to = \"Pop\") %&gt;%\n  mutate(PA = fct_reorder(PA, -Pop, .fun = sum))\n\n# 3. Compute median values and max population\nmedian_edr &lt;- median(df_agegroup$ElderlyRatio, na.rm = TRUE)\nmedian_ydr &lt;- median(df_agegroup$YouthRatio, na.rm = TRUE)\nmax_pop    &lt;- max(df_agegroup$TotalPop, na.rm = TRUE)\n\n# 4. Add star marker to EDR above median\ndf_agegroup &lt;- df_agegroup %&gt;%\n  mutate(EDR_star = if_else(ElderlyRatio &gt; median_edr, \"*\", \"\"))\n\n# 5. Define color palette\ncustom_colors &lt;- c(\n  \"Youth\" = \"#FFD700\",        # Gold\n  \"WorkingAge\" = \"#B0B0B0\",   # Gray\n  \"Elderly\" = \"#800080\"       # Purple\n)\n\n# 6. Get rightmost x position\nlast_x &lt;- length(unique(df_age_long$PA))\n\n# 7. Create the plot\nggplot(df_age_long, aes(x = PA, y = Pop, fill = AgeGroup)) +\n  geom_bar(stat = \"identity\", width = 0.95) +\n\n  # Elderly Dependency Ratio line\n  geom_line(\n    data = df_agegroup,\n    aes(x = PA, y = ElderlyRatio * max_pop / 2, group = 1),\n    inherit.aes = FALSE, color = \"#9932CC\", size = 1.2\n  ) +\n\n  # Youth Dependency Ratio line\n  geom_line(\n    data = df_agegroup,\n    aes(x = PA, y = YouthRatio * max_pop / 2, group = 1),\n    inherit.aes = FALSE, color = \"#E67E22\", size = 1.2\n  ) +\n\n  # Red stars for high EDR\n  geom_text(\n    data = df_agegroup %&gt;% filter(EDR_star == \"*\"),\n    aes(x = PA, y = ElderlyRatio * max_pop / 2, label = EDR_star),\n    inherit.aes = FALSE, color = \"red\", size = 5, vjust = -0.8\n  ) +\n\n  # Median lines\n  geom_hline(yintercept = median_edr * max_pop / 2,\n             color = \"black\", linetype = \"solid\", size = 0.5) +\n  geom_hline(yintercept = median_ydr * max_pop / 2,\n             color = \"black\", linetype = \"solid\", size = 0.5) +\n\n  # Median line labels (right)\n  annotate(\"text\", x = last_x, y = median_edr * max_pop / 2,\n           label = \"Median EDR\", vjust = -1, hjust = 1, size = 3, color = \"black\") +\n  annotate(\"text\", x = last_x, y = median_ydr * max_pop / 2,\n           label = \"Median YDR\", vjust = 1.5, hjust = 1, size = 3, color = \"black\") +\n\n  # ➕ EDR/YDR values in red box area\n  annotate(\"text\", x = last_x - 10, y = max_pop * 0.9,\n           label = paste0(\"Median EDR = \", round(median_edr, 2)),\n           hjust = 0, size = 2, color = \"#9932CC\") +\n  annotate(\"text\", x = last_x - 10, y = max_pop * 0.8,\n           label = paste0(\"Median YDR = \", round(median_ydr, 2)),\n           hjust = 0, size = 2, color = \"#E67E22\") +\n\n  # Final touches\n  scale_fill_manual(values = custom_colors) +\n  scale_y_continuous(\n    name = \"Population Count\",\n    sec.axis = sec_axis(~ . * 2 / max_pop, name = \"Dependency Ratio\"),\n    labels = label_number(scale_cut = cut_short_scale())\n  ) +\n  labs(\n    title = \"Population by Planning Area with Youth & Elderly Dependency Ratios\",\n    subtitle = \"* indicates Planning Areas with Elderly Dependency Ratio above the national median\",\n    x = \"Planning Area\",\n    fill = \"Age Group\"\n  ) + \n  \n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"right\"\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html",
    "title": "Sailor Shift: Rise and Resonance",
    "section": "",
    "text": "pacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts, \n               concaveman, ggforce, jsonlite, dplyr)\n\n\n\n\n\nt_data &lt;- fromJSON(\"data/MC1_graph.json\",\n                   simplifyDataFrame = TRUE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#getting-start",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#getting-start",
    "title": "Sailor Shift: Rise and Resonance",
    "section": "",
    "text": "pacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts, \n               concaveman, ggforce, jsonlite, dplyr)\n\n\n\n\n\nt_data &lt;- fromJSON(\"data/MC1_graph.json\",\n                   simplifyDataFrame = TRUE)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#introduction",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#introduction",
    "title": "Sailor Shift: Rise and Resonance",
    "section": "1. Introduction",
    "text": "1. Introduction\nSailor Shift is one of the most influential figures in the development of “Oceans Folk” music. From her humble beginnings as a singer on Oceanus Island to her current status as a global superstar, she has grown to represent not only her own personal success, but has also propelled this niche genre into the world. This project uses data analysis and visualization to delve deeper into her network of collaborations, musical influences, and her importance in the overall music ecosystem. We will reveal how she has influenced others and been shaped by the zeitgeist, and further reflect on what her rise reveals about the new generation of musicians."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#data-processing",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#data-processing",
    "title": "Sailor Shift: Rise and Resonance",
    "section": "2. Data processing",
    "text": "2. Data processing\n\n2.1. Extracting Edges and Nodes\n\nnodes_tbl &lt;- as_tibble(t_data$nodes)\nedges_tbl &lt;- as_tibble(t_data$links) \n\n\n\n2.2. Get closer to data\n\n2.2.1. Edges\n\n\nglimpse(edges_tbl)\n\nRows: 37,857\nColumns: 4\n$ `Edge Type` &lt;chr&gt; \"InterpolatesFrom\", \"RecordedBy\", \"PerformerOf\", \"Composer…\n$ source      &lt;int&gt; 0, 0, 1, 1, 2, 2, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5…\n$ target      &lt;int&gt; 1841, 4, 0, 16180, 0, 16180, 0, 5088, 14332, 11677, 2479, …\n$ key         &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n\n\n\nlength(unique(edges_tbl$`Edge Type`))\n\n[1] 12\n\nunique(edges_tbl$`Edge Type`)\n\n [1] \"InterpolatesFrom\"   \"RecordedBy\"         \"PerformerOf\"       \n [4] \"ComposerOf\"         \"ProducerOf\"         \"InStyleOf\"         \n [7] \"LyricalReferenceTo\" \"CoverOf\"            \"DistributedBy\"     \n[10] \"MemberOf\"           \"LyricistOf\"         \"DirectlySamples\"   \n\n\nThe edges dataset contains 37,857 records and 4 fields to represent the various relationships between entities in the network. Each edge contains the node IDs (source and target) of the starting and ending points, as well as 12 Edge Types describing the nature of the relationship, such as “PerformerOf”, ‘ComposerOf’ or “RecordedBy”. Meanwhile, the key field is used to distinguish between multiple connections between the same node pair.\n\n\n2.2.2. Nodes\n\n\nglimpse(nodes_tbl)\n\nRows: 17,412\nColumns: 10\n$ `Node Type`    &lt;chr&gt; \"Song\", \"Person\", \"Person\", \"Person\", \"RecordLabel\", \"S…\n$ name           &lt;chr&gt; \"Breaking These Chains\", \"Carlos Duffy\", \"Min Qin\", \"Xi…\n$ single         &lt;lgl&gt; TRUE, NA, NA, NA, NA, FALSE, NA, NA, NA, NA, TRUE, NA, …\n$ release_date   &lt;chr&gt; \"2017\", NA, NA, NA, NA, \"2026\", NA, NA, NA, NA, \"2020\",…\n$ genre          &lt;chr&gt; \"Oceanus Folk\", NA, NA, NA, NA, \"Lo-Fi Electronica\", NA…\n$ notable        &lt;lgl&gt; TRUE, NA, NA, NA, NA, TRUE, NA, NA, NA, NA, TRUE, NA, N…\n$ id             &lt;int&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…\n$ written_date   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"2020\", NA, NA,…\n$ stage_name     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ notoriety_date &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n\n\nThe nodes dataset contains 17,412 entries, each representing an entity within the music network and categorized under the Node Type column as “Person”, “Song”, or “RecordLabel”. Each node includes relevant attributes based on its type—for example, songs have fields such as single, release_date, genre, and notable, while people may have stage_name and notoriety_date. The presence of missing values (NA) in many fields indicates that certain attributes are only applicable to specific node types.\n\n\n2.2.3. Initial EDA\n\nggplot(data = edges_tbl,\n       aes(y = `Edge Type`)) +\n  geom_bar()\n\n\n\n\n\n\n\n\nThis bar chart above shows the distribution of different edge types in the music relationship network. The most common type is PerformerOf, indicating that the data heavily captures who performed which work. Other frequent types include ComposerOf, LyricistOf, and ProducerOf, highlighting the importance of creative and production roles. In contrast, relationships like MemberOf and DirectlySamples are less common, suggesting these connections are either rarer or less documented.\n\nggplot(data = nodes_tbl,\n       aes(y = `Node Type`)) +\n  geom_bar()\n\n\n\n\n\n\n\n\nThis bar chart displays the distribution of different node types in the music network dataset. The most common type is Person, with a count far exceeding other categories, indicating a strong focus on individual artists, producers, and contributors. Songs also appear in large numbers, highlighting the dataset’s emphasis on works being created or performed. Other types like Albums, RecordLabels, and MusicalGroups are present but in significantly smaller quantities."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#creating-knowledge-graph",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#creating-knowledge-graph",
    "title": "Sailor Shift: Rise and Resonance",
    "section": "3. Creating Knowledge Graph",
    "text": "3. Creating Knowledge Graph\n\n3.1. Mapping from node id to row index\n\nid_map &lt;- tibble(id = nodes_tbl$id,\n                 index = seq_len(\n                   nrow(nodes_tbl)))\n\n\n\n3.2. Map source and target IDs to row indices\n\nedges_tbl &lt;- edges_tbl %&gt;%\n  left_join(id_map, by = c(\"source\" = \"id\")) %&gt;%\n  rename(from = index) %&gt;%\n  left_join(id_map, by = c(\"target\" = \"id\")) %&gt;%\n  rename(to = index)\n\n\n\n3.3. Filter out any unmatched (invalid) edges\n\nedges_tbl &lt;- edges_tbl %&gt;%\n  filter(!is.na(from), !is.na(to))\n\n\n\n3.4. Creating tidygraph\n\ngraph &lt;- tbl_graph(nodes = nodes_tbl, \n                   edges = edges_tbl, \n                   directed = t_data$directed)\n\n\nclass(graph)\n\n[1] \"tbl_graph\" \"igraph\""
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#visualising-the-knowledge-graph",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#visualising-the-knowledge-graph",
    "title": "Sailor Shift: Rise and Resonance",
    "section": "4. Visualising the knowledge graph",
    "text": "4. Visualising the knowledge graph\n\nset.seed(1234)\n\n\n4.1. Visualising the whole graph\n\nggraph(graph, layout = \"fr\") +\n  geom_edge_link(alpha = 0.3, \n                 colour = \"gray\") +\n  geom_node_point(aes(color = `Node Type`), \n                  size = 4) +\n  geom_node_text(aes(label = name), \n                 repel = TRUE, \n                 size = 2.5) +\n  theme_void()\n\n\n\n\n\n\n\n\n\n\n4.2. Visualising the sub-graph\n\n4.2.1. Filtering edges to only “MemberOf”\n\ngraph_memberof &lt;- graph %&gt;%\n  activate(edges) %&gt;%\n  filter(`Edge Type` == \"MemberOf\")\n\n\n\n4.2.2. Extracting only connected nodes (i.e., used in these edges)\n\nused_node_indices &lt;- graph_memberof %&gt;%\n  activate(edges) %&gt;%\n  as_tibble() %&gt;%\n  select(from, to) %&gt;%\n  unlist() %&gt;%\n  unique()\n\n\n\n4.2.3. Keeping only those nodes\n\ngraph_memberof &lt;- graph_memberof %&gt;%\n  activate(nodes) %&gt;%\n  mutate(row_id = row_number()) %&gt;%\n  filter(row_id %in% used_node_indices) %&gt;%\n  select(-row_id)  # optional cleanup\n\n\n\n4.2.4. Plotting the sub-graph\n\nggraph(graph_memberof, \n       layout = \"fr\") +\n  geom_edge_link(alpha = 0.5, \n                 colour = \"gray\") +\n  geom_node_point(aes(color = `Node Type`), \n                  size = 1) +\n  geom_node_text(aes(label = name), \n                 repel = TRUE, \n                 size = 2.5) +\n  theme_void()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#sailor-shifts-career-connections",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02a.html#sailor-shifts-career-connections",
    "title": "Sailor Shift: Rise and Resonance",
    "section": "5. Sailor Shift’s Career Connections",
    "text": "5. Sailor Shift’s Career Connections\n\n5.1. The contributors who shaped the modern Sailor Shift\nA singer’s journey to fame is never a solitary one. Sailor has been accompanied by many — fellow singers, producers, instrumentalists, composers, and others who helped shape her path.\n\n# Sailor Shift's Index\nsailor_idx &lt;- which(nodes_tbl$name == \"Sailor Shift\")\n\n\n# Sailor Shift's works'Index\nperf_edges &lt;- graph %&gt;%\n  activate(edges) %&gt;%\n  as_tibble() %&gt;%\n  filter(`Edge Type` == \"PerformerOf\", from == sailor_idx)\n\nsailor_works_idx &lt;- perf_edges %&gt;% pull(to) %&gt;% unique()\n\nfocus_idx1 &lt;- unique(c(sailor_idx, sailor_works_idx))\n\n\n# Keep Edges that 'influence' Sailor Shift's works\ninfluence_types1 &lt;- c(\"ComposerOf\", \"ProducerOf\", \"LyricistOf\", \"CoverOf\")\n\ngraph_influence1 &lt;- graph %&gt;%\n  activate(edges) %&gt;%\n  filter(\n    `Edge Type` %in% influence_types1,\n    to %in% focus_idx1\n  )\n\n\n# Extract Nodes \nused_node_indices1 &lt;- graph_influence1 %&gt;%\n  activate(edges) %&gt;%\n  as_tibble() %&gt;%\n  select(from, to) %&gt;%\n  unlist() %&gt;%\n  unique()\n\n\n# Keep Nodes\ngraph_influence1 &lt;- graph_influence1 %&gt;%\n  activate(nodes) %&gt;%\n  mutate(.row = row_number()) %&gt;%\n  filter(.row %in% used_node_indices1) %&gt;%\n  select(-.row)\n\n\n# Plot\nggraph(graph_influence1, layout = \"fr\") +\n  geom_edge_link(aes(color = `Edge Type`),\n                 arrow    = arrow(length = unit(4, \"pt\"), type = \"closed\"),\n                 end_cap  = circle(3, \"pt\"),\n                 start_cap = circle(3, \"pt\"),\n                 width    = 0.5,\n                 alpha    = 0.6,\n                 show.legend = TRUE) +\n  geom_node_point(aes(color = `Node Type`),\n                  size = 2) +\n  geom_node_text(aes(label = name),\n                 size         = 2.5,\n                 repel        = TRUE,\n                 max.overlaps = Inf) +\n  scale_edge_colour_brewer(palette = \"Set2\",\n                           name    = \"Edge Type\") +\n  scale_color_manual(values = c(\n    \"Person\"      = \"#377EB8\",\n    \"Album\"       = \"#E41A1C\",\n    \"RecordLabel\" = \"#4DAF4A\"\n    ), name = \"Node Type\") +\n  theme_void() +\n  theme(\n    legend.position = \"right\",\n    legend.title    = element_text(size = 10),\n    legend.text     = element_text(size = 8),\n    plot.margin     = margin(5, 5, 5, 5)\n  )\n\n\n\n\n\n\n\n\nThis network diagram places Sailor Shift at its center and reveals the diverse teams behind each album. By mapping the ComposerOf, ProducerOf and LyricistOf relationships, it clearly shows which composers, producers, and record labels have shaped her work. From the visualization, it’s clear that Ewan MacRae has had the greatest influence on her discography: he not only composed Oceanbound alone but also teamed up with Freya Lindholm and Astrid Nørgaard to co-create Coral Beats, leaving a significant mark on two albums—far more than any other contributor.\n\n\n5.2. Who did Sailor Shift influenced\nThroughout Sailor’s career, not only has Sailor received influences from others, but her work has begun to inspire others, extending her creative reach beyond her immediate circle.\n\n# Sailor's works\nlayer1_targets &lt;- perf_edges %&gt;%\n  pull(to)\n\n\n# Works influenced by Silor's works\ninfluence_types2 &lt;- c(\"DirectlySamples\", \"InStyleOf\",\n                     \"LyricalReferenceTo\", \"InterpolatesFrom\")\n\nlayer2_targets &lt;- graph %&gt;%\n  activate(edges) %&gt;%\n  as_tibble() %&gt;%\n  filter(`Edge Type` %in% influence_types2,\n         from %in% layer1_targets) %&gt;%\n  pull(to)\n\n\n# Creators of those influenced works\ncreator_types &lt;- c(\"ComposerOf\", \"ProducerOf\", \"LyricistOf\")\n\n\ngraph_sub2 &lt;- graph %&gt;%\n  activate(edges) %&gt;%\n  filter(\n    (`Edge Type` == \"PerformerOf\" & from == sailor_idx) |\n    (`Edge Type` %in% influence_types2 & from %in% layer1_targets) |\n    (`Edge Type` %in% creator_types & to %in% layer2_targets)\n  )\n\n\nused_nodes2 &lt;- graph_sub2 %&gt;%\n  activate(edges) %&gt;%\n  as_tibble() %&gt;%\n  select(from, to) %&gt;%\n  unlist() %&gt;%\n  unique()\n\n\ngraph_sub2 &lt;- graph_sub2 %&gt;%\n  activate(nodes) %&gt;%\n  mutate(.row = row_number()) %&gt;%\n  filter(.row %in% used_nodes2) %&gt;%\n  select(-.row)\n\n\n\nggraph(graph_sub2, layout = \"fr\") +\n  geom_edge_link(aes(color = `Edge Type`),\n                 arrow      = arrow(length = unit(3, \"pt\"), type = \"closed\"),\n                 end_cap    = circle(2.5, \"pt\"),\n                 start_cap  = circle(2.5, \"pt\"),\n                 width      = 0.6,\n                 alpha      = 0.7) +\n  geom_node_point(aes(color = `Node Type`), size = 3) +\n  geom_node_text(aes(label = name), repel = TRUE, size = 2.5, max.overlaps = Inf) +\n  scale_edge_colour_manual(values = c(\n    PerformerOf        = \"#8DD3C7\",\n    DirectlySamples    = \"#FB8072\",\n    InStyleOf          = \"#80B1D3\",\n    LyricalReferenceTo = \"#FDB462\",\n    InterpolatesFrom   = \"#B3DE69\",\n    ComposerOf         = \"#FCCDE5\",\n    ProducerOf         = \"#BEBADA\",\n    LyricistOf         = \"#FFED6F\"\n  ), name = \"Relation\") +\n  scale_color_manual(values = c(\n    Person       = \"#377EB8\",\n    Album        = \"#E41A1C\",\n    Song         = \"#4DAF4A\",\n    RecordLabel  = \"#984EA3\",\n    MusicalGroup = \"#FF7F00\"\n  ), name = \"Node Type\") +\n  theme_void() +\n  theme(\n    legend.position = \"right\",\n    legend.title    = element_text(size = 10),\n    legend.text     = element_text(size = 8)\n  )\n\n\n\n\n\n\n\n\nThis visualization adopts a four-layer peeling approach: at the very center sits Sailor Shift (blue), surrounded by her own recordings and lyric-penned tracks (red and green). The third ring maps the songs that directly sample, stylistically echo, lyrically reference, or interpolate her work (green), and the outermost layer identifies the composers, producers, and lyricists (blue) behind those derivative pieces. By counting connection frequencies, Wei Zhao stands out as the most heavily influenced creator—appearing under two separate derivative tracks—making them the single individual most shaped by Sailor Shift’s musical legacy.\n\n\n5.3. Sailor Shift‘s influence to the Oceanus Folk community\n\n# Sailor's Index\nsailor_idx &lt;- which(nodes_tbl$name == \"Sailor Shift\")\n\n\n# Sailor's works\ncreative_edge_types &lt;- c(\"PerformerOf\")\n\nperf_edges &lt;- graph %&gt;%\n  activate(edges) %&gt;%\n  as_tibble() %&gt;%\n  filter(`Edge Type` %in% creative_edge_types, from == sailor_idx)\n\nsailor_works_idx &lt;- perf_edges %&gt;% pull(to) %&gt;% unique()\n\n\nnodes_tbl[sailor_works_idx, ]\n\n# A tibble: 26 × 10\n   `Node Type` name         single release_date genre notable    id written_date\n   &lt;chr&gt;       &lt;chr&gt;        &lt;lgl&gt;  &lt;chr&gt;        &lt;chr&gt; &lt;lgl&gt;   &lt;int&gt; &lt;chr&gt;       \n 1 Album       Tidal Pop W… NA     2028         Ocea… TRUE    17272 2027        \n 2 Album       Salty Dreams NA     2030         Ocea… TRUE    17273 2029        \n 3 Album       The Current… NA     2032         Ocea… TRUE    17274 2031        \n 4 Album       Coral Beats  NA     2034         Ocea… TRUE    17275 2033        \n 5 Album       Tides & Bal… NA     2036         Ocea… TRUE    17276 2035        \n 6 Album       Oceanbound   NA     2038         Ocea… TRUE    17277 2037        \n 7 Album       Echoes of t… NA     2040         Ocea… TRUE    17278 2039        \n 8 Song        High Tide H… TRUE   2028         Ocea… FALSE   17279 &lt;NA&gt;        \n 9 Song        Electric Ee… FALSE  2028         Ocea… TRUE    17280 &lt;NA&gt;        \n10 Song        Sun-Drenche… FALSE  2028         Ocea… FALSE   17281 &lt;NA&gt;        \n# ℹ 16 more rows\n# ℹ 2 more variables: stage_name &lt;chr&gt;, notoriety_date &lt;chr&gt;\n\n\n\n# Oceanus Folk Community works\noceanus_works_idx &lt;- nodes_tbl %&gt;%\n  mutate(idx = row_number()) %&gt;%\n  filter(genre == \"Oceanus Folk\") %&gt;%\n  pull(idx)\n\n\n# Combine all nodes\nfocus_idx &lt;- unique(c(sailor_works_idx, oceanus_works_idx))\n\n\nnodes_tbl[focus_idx, ]\n\n# A tibble: 305 × 10\n   `Node Type` name         single release_date genre notable    id written_date\n   &lt;chr&gt;       &lt;chr&gt;        &lt;lgl&gt;  &lt;chr&gt;        &lt;chr&gt; &lt;lgl&gt;   &lt;int&gt; &lt;chr&gt;       \n 1 Album       Tidal Pop W… NA     2028         Ocea… TRUE    17272 2027        \n 2 Album       Salty Dreams NA     2030         Ocea… TRUE    17273 2029        \n 3 Album       The Current… NA     2032         Ocea… TRUE    17274 2031        \n 4 Album       Coral Beats  NA     2034         Ocea… TRUE    17275 2033        \n 5 Album       Tides & Bal… NA     2036         Ocea… TRUE    17276 2035        \n 6 Album       Oceanbound   NA     2038         Ocea… TRUE    17277 2037        \n 7 Album       Echoes of t… NA     2040         Ocea… TRUE    17278 2039        \n 8 Song        High Tide H… TRUE   2028         Ocea… FALSE   17279 &lt;NA&gt;        \n 9 Song        Electric Ee… FALSE  2028         Ocea… TRUE    17280 &lt;NA&gt;        \n10 Song        Sun-Drenche… FALSE  2028         Ocea… FALSE   17281 &lt;NA&gt;        \n# ℹ 295 more rows\n# ℹ 2 more variables: stage_name &lt;chr&gt;, notoriety_date &lt;chr&gt;\n\n\n\n# Influence Types\n\ninfluence_types3 &lt;- c(\n  \"DirectlySamples\",\n  \"InStyleOf\",\n  \"LyricalReferenceTo\",\n  \"InterpolatesFrom\",\n  \"CoverOf\"\n)\n\n\n# Filter Edges\ngraph_3 &lt;- graph %&gt;%\n  activate(edges) %&gt;%\n  filter(`Edge Type` %in% influence_types3 )\n\n\n# Extracting Nodes\n\n\nused_node_indices3 &lt;- graph_3 %&gt;%\n  activate(edges) %&gt;%\n  as_tibble() %&gt;%\n  select(from, to) %&gt;%\n  unlist() %&gt;%\n  unique()\n\n\n# Keep Nodes\n\ngraph_3 &lt;- graph_3 %&gt;%\n  activate(nodes) %&gt;%\n  mutate(row_id = row_number()) %&gt;%\n  filter(row_id %in% focus_idx) %&gt;%\n  select(-row_id)  # optional cleanup\n\n\n# Add label\ngraph_3 &lt;- graph_3 %&gt;%\n  activate(nodes) %&gt;%\n  mutate(is_sailor_work = ifelse(name %in% nodes_tbl$name[sailor_works_idx], \n                                 \"Sailor's Work\", \"Other\"))\n\n\n# Ploting\n\nggraph(graph_3, layout = \"fr\") +\n  geom_edge_link(alpha = 0.5, colour = \"gray\") +\n  geom_node_point(aes(color = is_sailor_work), size = 1.5) +\n  theme_void()\n\n\n\n\n\n\n\n\nSailor Shift has influenced collaborators in the Oceanus Folk community primarily through indirect inspiration. Her works, though few in number, are embedded across different parts of the network, suggesting they have been referenced or sampled by multiple creators. While she doesn’t appear to collaborate repeatedly with specific individuals, her influence spans across stylistic clusters, indicating a broad and decentralized artistic impact"
  }
]