[
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "title": "Take-home_Ex03",
    "section": "",
    "text": "xxx3"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Demographic structures and distribution of Singapore in 2024",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, ggiraph, plotly, \n                DT, readxl, gifski, gapminder,\n               gganimate) \n\n\n\n\n\nPopdata &lt;- read.csv(\"data/respopagesex2024.csv\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#getting-start",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#getting-start",
    "title": "Demographic structures and distribution of Singapore in 2024",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, ggiraph, plotly, \n                DT, readxl, gifski, gapminder,\n               gganimate) \n\n\n\n\n\nPopdata &lt;- read.csv(\"data/respopagesex2024.csv\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#setting-the-sense",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#setting-the-sense",
    "title": "Demographic structures and distribution of Singapore in 2024",
    "section": "1. Setting the sense",
    "text": "1. Setting the sense\nSingapore’s changing demographics have become a pressing topic, especially in the context of an aging population. Understanding the composition and spatial distribution of residents is increasingly important to both policymakers and the public. This report aims to offer a clear, data-driven overview of Singapore’s demographic landscape in 2024, with a particular focus on differences across planning areas and subzones, as well as variations by age and gender. Drawing on the latest official statistics, this analysis provides insights into the trends shaping Singapore’s communities today."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#dataset",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#dataset",
    "title": "Demographic structures and distribution of Singapore in 2024",
    "section": "2. Dataset",
    "text": "2. Dataset\nThe dataset used in this report was obtained from the Singapore Department of Statistics (DOS) and provides population counts as of June 2024. It contains detailed information on Singapore residents, broken down by Planning Area, Subzone, single year of age, and sex. This high-resolution demographic data enables granular analysis of population structures and spatial distribution across the city. The dataset comprises a total of 60,424 records. For more details, please refer to the metadata below.\n\n\n\nVariables\nDefinition\n\n\n\n\nPA\nPlanning Area\n\n\nSZ\nSubzone\n\n\nAge\nSingle Year of Age\n\n\nSex\nSex\n\n\nPop\nResident Count\n\n\nTime\nTime/Period"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-processing",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-processing",
    "title": "Demographic structures and distribution of Singapore in 2024",
    "section": "3. Data processing",
    "text": "3. Data processing\nTo ensure the validity and reliability of this report, it is essential to preprocess the dataset and assess its quality. This includes checking for completeness, consistency, and potential anomalies that may affect the accuracy of our analysis.\n\n3.1. Checking for missing values\n\ncolSums(is.na(Popdata))\n\n  PA   SZ  Age  Sex  Pop Time \n   0    0    0    0    0    0 \n\n\nAs observed from output of code-chunk above, there’s no missing value in this dataset.\n\n\n3.2. Checking for duplicates\n\nPopdata[duplicated(Popdata)]\n\ndata frame with 0 columns and 60424 rows\n\n\nAs observed from output of code-chunk above, there’s no duplicates in this dataset.\n\n\n3.2. Checking for datatype\n\nstr(Popdata)\n\n'data.frame':   60424 obs. of  6 variables:\n $ PA  : chr  \"Ang Mo Kio\" \"Ang Mo Kio\" \"Ang Mo Kio\" \"Ang Mo Kio\" ...\n $ SZ  : chr  \"Ang Mo Kio Town Centre\" \"Ang Mo Kio Town Centre\" \"Ang Mo Kio Town Centre\" \"Ang Mo Kio Town Centre\" ...\n $ Age : chr  \"0\" \"0\" \"1\" \"1\" ...\n $ Sex : chr  \"Males\" \"Females\" \"Males\" \"Females\" ...\n $ Pop : int  10 10 10 10 10 10 10 10 30 10 ...\n $ Time: int  2024 2024 2024 2024 2024 2024 2024 2024 2024 2024 ...\n\n\nAs observed from the output of the code-chunk above, all column data types are appropriate. One point to note is that the datatype of the variable Age is character instead of integer. This is because the dataset does not provide age-specific breakdowns beyond 90 years old; instead, individuals aged 90 and above are grouped under the label “90_and_Over”. This classification is reasonable and consistent with common demographic reporting practices.\n\n\n3.3. Removing unnecessary columns\nSince the dataset has already been clearly defined as representing statistics from the year 2024, and upon inspection the variable Time contains only a single unique value (2024), this column is no longer necessary and can be safely removed.\n\nunique(Popdata$Time)\n\n[1] 2024\n\n\n\npopdata &lt;- subset(Popdata, select = -Time)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#key-findings",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#key-findings",
    "title": "Demographic structures and distribution of Singapore in 2024",
    "section": "4. Key Findings",
    "text": "4. Key Findings\n\n4.1. Interactive Population Plot\n\npa_sz_summary &lt;- popdata %&gt;%\n  group_by(PA, SZ) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  mutate(\n    Pop_thousand = Pop / 1000,\n    tooltip_text = str_replace_all(\n      paste0(\"Planning Area: \", PA,\n             \"\\nSubzone: \", SZ,\n             \"\\nPopulation: \", Pop),\n      \"'\", \"\"))\n\npa_order &lt;- pa_sz_summary %&gt;%\n  group_by(PA) %&gt;%\n  summarise(TotalPop = sum(Pop_thousand)) %&gt;%\n  filter(TotalPop &gt; 0) %&gt;%                         \n  arrange(desc(TotalPop)) %&gt;%\n  pull(PA)\n\npa_sz_summary &lt;- pa_sz_summary %&gt;%\n  filter(PA %in% pa_order) %&gt;%\n  mutate(PA = factor(PA, levels = pa_order))\n\ncolor_palette &lt;- c(\"#E76F51\", \"#457B9D\", \"#F4A261\", \"#2A9D8F\")\nn_subzones &lt;- length(unique(pa_sz_summary$SZ))\ncolor_values &lt;- rep(color_palette, length.out = n_subzones)\nsz_levels &lt;- sort(unique(pa_sz_summary$SZ))\nnames(color_values) &lt;- sz_levels\n\np &lt;- ggplot(pa_sz_summary, aes(x = PA, y = Pop_thousand, fill = SZ)) +\n  geom_bar_interactive(\n    aes(tooltip = tooltip_text, data_id = tooltip_text),\n    stat = \"identity\", show.legend = FALSE\n  ) +\n  scale_fill_manual(values = color_values) +\n  scale_y_continuous(\n  breaks = seq(0, 250, by = 50),\n  labels = function(x) paste0(x, \"K\")) +\n  labs(title = \"Population by Planning Area and Subzone (2024)\",\n    x = \"Planning Area\", y = \"Population (in thousands)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8 * 0.618,\n  options = list(\n    opts_hover(\"fill-opacity:1;stroke:black;stroke-width:0.5px;cursor:pointer;\"),\n    \n    opts_hover_inv(css = \"opacity:0.2;\"),  \n    opts_tooltip()\n  ))\n\n\n\n\n\nThis chart provides a comprehensive overview of the population distribution across Singapore’s planning areas and subzones in 2024.\nFrom the planning area angle, it shows that population is heavily concentrated in areas such as Tampines, Bedok, and Sengkang. Notably, seven planning areas—Tampines, Bedok, Sengkang, Jurong West, Woodlands, Yishun, and Hougang—have populations exceeding 200,000, indicating high residential density. In contrast, areas such as Seletar and Museum have very low or near-zero populations, suggesting they may be non-residential or under development.\nFrom the subzone angle, Tampines East is the most inhabited subzone, with 128,320 residents, compared to subzones such as Boon lay’s Shipyard which is completely uninhabited.\n\n\n4.2. Distribution of elderly population in Singapore\nIn Singapore, people aged 65 and above are defined as aging people, directly translated from mandarin, this group of people are expected to have a A happy, joyful and enjoyable retirement life. At this stage of life, they are no longer burdened by raising children or dealing with intense job competition, and instead experience an unprecedented sense of freedom and ease. However, from a societal perspective, an excessive number of seniors can inevitably impact the overall dynamism of society, leading to issues such as labour shortages and increased fiscal pressure.\n\npopdata_agegroup &lt;- popdata %&gt;%\n  mutate(\n    AgeGroup = case_when(\n      Age &lt;= 21 ~ \"0–21 (Children & Teens)\",\n      Age &lt;= 35 ~ \"22–35 (Young Adults)\",\n      Age &lt;= 64 ~ \"36–64 (Middle-aged)\",\n      TRUE      ~ \"65+ (Aging)\")) %&gt;%\n  \n  group_by(AgeGroup) %&gt;%\n  summarise(TotalPop = sum(Pop), .groups = \"drop\") %&gt;%\n  mutate(Percentage = TotalPop / sum(TotalPop),\n        tooltip = paste0(\n      AgeGroup, \"\\nPopulation: \", formatC(TotalPop, format = \"d\", big.mark = \",\")),\n    AgeGroup = factor(AgeGroup, levels = c(\n      \"0–21 (Children & Teens)\", \n      \"22–35 (Young Adults)\", \n      \"36–64 (Middle-aged)\", \n      \"65+ (Aging)\")))\n\np &lt;- ggplot(popdata_agegroup, aes(x = AgeGroup, y = TotalPop)) +\n  geom_col_interactive(\n    aes(tooltip = tooltip, data_id = AgeGroup),\n    fill = \"#457B9D\") +\n  geom_text_interactive(\n    aes(\n      label = paste0(round(Percentage * 100, 1), \"%\"),\n      tooltip = tooltip,\n      data_id = AgeGroup),\n    vjust = -0.5,\n    size = 4,\n    color = \"black\") +\n  scale_y_continuous(labels = function(x) formatC(x, format = \"d\", big.mark = \",\")) +\n  labs(\n    title = \"Singapore Resident Population by Age Group\",\n    x = \"Age Group\",\n    y = \"Population\") +\n  theme_minimal()\n\n\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8 * 0.618,\n  options = list(\n    opts_hover(\"fill-opacity:1;stroke:black;stroke-width:0.5px;cursor:pointer;\"),\n    \n    opts_hover_inv(css = \"opacity:0.2;\"),  \n    opts_tooltip()\n  ))\n\n\n\n\n\nAs observed from the chart above, 44.7% of Singapore’s resident population will be in the middle-aged group (36-64 years old), indicating a mature or even aging demographic structure. The children and adolescents (0-21 years old) and the youth (22-35 years old) together account for only 34.3% of the population, resulting in a relatively limited labor supply in the future. The elderly population (65 years old and above) has already reached 21%, a proportion that should not be ignored.\nAccording to international standards, when the proportion of people aged 65 and above in a country or region exceeds 7%, it is considered an aging society; and when it exceeds 14%, it is an aged society. Singapore’s current 21% has clearly entered the “aging society” stage. This means that there are multiple challenges ahead in terms of labor force constraints, rising healthcare needs, and increasing pressure on public finances. The structural trends shown in the charts highlight the need for the government to take effective measures to encourage childbearing, extend the working life and improve the pension system.\n\nelderly_data &lt;- popdata %&gt;%\n  filter(Age &gt;= 65) %&gt;%\n  group_by(PA, SZ) %&gt;%\n  summarise(ElderlyPop = sum(Pop), .groups = \"drop\")\n\ntotal_elderly &lt;- sum(elderly_data$ElderlyPop)\n\nelderly_by_PA &lt;- elderly_data %&gt;%\n  group_by(PA) %&gt;%\n  summarise(TotalElderly = sum(ElderlyPop)) %&gt;%\n  arrange(desc(TotalElderly)) %&gt;%\n  slice_max(order_by = TotalElderly, n = 5) %&gt;%\n  mutate(\n    PA = factor(PA, levels = rev(PA)),\n    Percent = TotalElderly / total_elderly,\n    tooltip = paste0(\"Planning Area: \", PA,\n                     \"\\nPopulation: \", TotalElderly))\n\nP1 &lt;- ggplot(elderly_by_PA, aes(x = PA, y = TotalElderly)) +\n  geom_col_interactive(aes(tooltip = tooltip, data_id = PA), fill = \"#264653\") +\n  geom_text_interactive(\n    aes(label = paste0(round(Percent * 100, 1), \"%\"),\n        tooltip = tooltip, data_id = PA),\n    hjust = 1.02, color = \"white\", size = 4) +\n  coord_flip() +\n  labs(\n    title = \"Top 5 Planning Areas by Elderly Population\",\n    x = \"Planning Area\", y = \"Population\") +\n  theme_minimal(base_size = 12)\n\ntop_sz &lt;- elderly_data %&gt;%\n  arrange(desc(ElderlyPop)) %&gt;%\n  slice_max(order_by = ElderlyPop, n = 10) %&gt;%\n  mutate(\n    SZ = reorder(SZ, ElderlyPop),\n    Percent = ElderlyPop / total_elderly,\n    tooltip = paste0(\"Subzone: \", SZ,\n                     \"\\nPopulation: \", ElderlyPop))\n\nP2 &lt;- ggplot(top_sz, aes(x = SZ, y = ElderlyPop)) +\n  geom_col_interactive(aes(tooltip = tooltip, data_id = SZ), fill = \"#264653\") +\n  geom_text_interactive(\n    aes(label = paste0(round(Percent * 100, 1), \"%\"),\n        tooltip = tooltip, data_id = SZ),\n    hjust = 1.02, color = \"white\", size = 4) +\n  coord_flip() +\n  labs(title = \"Top 10 Subzones by Elderly Population\",\n    x = \"Subzone\", y = \"Population\") +\n  theme_minimal(base_size = 12)\n\ngirafe(\n  ggobj = P1 + P2,\n  width_svg = 10,\n  height_svg = 6,\n  options = list(\n    opts_hover(\"fill-opacity:1;stroke:black;stroke-width:0.5px;cursor:pointer;\"),\n    opts_hover_inv(css = \"opacity:0.2;\"),\n    opts_tooltip()))\n\n\n\n\n\nAs observed from charts above, planning areas such as Bedok, Tampines, and Hougang have some of the highest elderly populations in Singapore, with Bedok accounting for 8% of the national elderly population, Tampines 6.7%, and Tampines East alone reaching 3.3%. These figures indicate a high concentration of elderly residents in specific mature residential areas. In response to this trend, these regions need to accelerate the development of age-friendly communities, optimize the allocation of care resources, and strengthen neighborhood support systems to address the rapidly growing challenges of an ageing population."
  },
  {
    "objectID": "In-class_Ex/In-class_Exercise.html",
    "href": "In-class_Ex/In-class_Exercise.html",
    "title": "In-class_Exercise",
    "section": "",
    "text": "Please view my in-class exercises on www.linsen.com"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\n\n\n\nexam_data2 &lt;- read_csv(\"data02/Exam_data_02.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "exam_data2 &lt;- read_csv(\"data02/Exam_data_02.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggplot2-annotation",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggplot2-annotation",
    "title": "Hands-on_Ex02",
    "section": "ggplot2 Annotation",
    "text": "ggplot2 Annotation\n\nggplot(data=exam_data2, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggrepel-annotation",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggrepel-annotation",
    "title": "Hands-on_Ex02",
    "section": "ggrepel Annotation",
    "text": "ggrepel Annotation\n\nggplot(data=exam_data2, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggplot2-themes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggplot2-themes",
    "title": "Hands-on_Ex02",
    "section": "ggplot2 Themes",
    "text": "ggplot2 Themes\n\nggplot(data=exam_data2, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggtheme-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggtheme-package",
    "title": "Hands-on_Ex02",
    "section": "ggtheme package",
    "text": "ggtheme package\n\nggplot(data=exam_data2, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#hrbthems-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#hrbthems-package",
    "title": "Hands-on_Ex02",
    "section": "hrbthems package",
    "text": "hrbthems package\n\nggplot(data=exam_data2, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#single-plots",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#single-plots",
    "title": "Hands-on_Ex02",
    "section": "Single plots",
    "text": "Single plots\n\np1 &lt;- ggplot(data=exam_data2, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\np2 &lt;- ggplot(data=exam_data2, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\np3 &lt;- ggplot(data=exam_data2, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores vs Maths scores for P3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-graphs",
    "title": "Hands-on_Ex02",
    "section": "Combining two graphs",
    "text": "Combining two graphs\n\np1 + p2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-graphs",
    "title": "Hands-on_Ex02",
    "section": "Combining three graphs",
    "text": "Combining three graphs\n\n(p1 / p2) | p3"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "title": "Hands-on_Ex02",
    "section": "Creating a composite figure with tag",
    "text": "Creating a composite figure with tag\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insert",
    "title": "Hands-on_Ex02",
    "section": "Creating figure with insert",
    "text": "Creating figure with insert\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "title": "Hands-on_Ex02",
    "section": "Creating a composite figure by using patchwork and ggtheme",
    "text": "Creating a composite figure by using patchwork and ggtheme\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()"
  },
  {
    "objectID": "about/about.html",
    "href": "about/about.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Linsen (Easant) Lu\nData Analyst | BI Specialist Supply Chain Specialist\nLinkedIn\n\n\nMy name is Linsen, you may also call me Easant.\nI have a background in supply chain and business IT, with hands-on experience in data analytics, operations, and both B2B and B2C business contexts. Through multiple internships and entrepreneurial projects, I’ve worked across different industries to support data-driven decision-making in areas like supply chain, sales, and process improvement.\n\n\nEducation\nSingapore Management University | 2024.01-2025.08\nMasters of IT in Business (Data science and Analytics)\nCurtin University | 2021.04-2023.08\nB.Com.in Logistics and Supply Chain Management\n\n\n\nExperience\nBosch APAC | Data Analyst Intern\nTTG Asia | Procurement Intern\nShanghai Markting Pte Ltd. | Business Development Intern"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#r-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#r-graphics",
    "title": "Hands-on Exercise 1",
    "section": "R Graphics",
    "text": "R Graphics\n\nhist(exam_data$MATHS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#ggplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#ggplot",
    "title": "Hands-on Exercise 1",
    "section": "ggplot",
    "text": "ggplot\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_bar",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_bar",
    "title": "Hands-on Exercise 1",
    "section": "geom_bar",
    "text": "geom_bar\n\nggplot(data = exam_data,\n       aes(x = RACE)) + \n    geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_dotplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_dotplot",
    "title": "Hands-on Exercise 1",
    "section": "geom_dotplot",
    "text": "geom_dotplot\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_histogram",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_histogram",
    "title": "Hands-on Exercise 1",
    "section": "geom_histogram",
    "text": "geom_histogram\n\nggplot(data = exam_data,\n       aes(x = MATHS)) + \n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_density",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_density",
    "title": "Hands-on Exercise 1",
    "section": "geom_density",
    "text": "geom_density\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_boxplot",
    "title": "Hands-on Exercise 1",
    "section": "geom_boxplot",
    "text": "geom_boxplot\n\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot(notch = TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_violin",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_violin",
    "title": "Hands-on Exercise 1",
    "section": "geom_violin",
    "text": "geom_violin\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_point",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom_point",
    "title": "Hands-on Exercise 1",
    "section": "geom_point",
    "text": "geom_point\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#combined-geom-objects",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#combined-geom-objects",
    "title": "Hands-on Exercise 1",
    "section": "Combined geom objects",
    "text": "Combined geom objects\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-geom",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-geom",
    "title": "Hands-on Exercise 1",
    "section": "Changing geom()",
    "text": "Changing geom()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-aes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-aes",
    "title": "Hands-on Exercise 1",
    "section": "Changing aes()",
    "text": "Changing aes()\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#stat_summary",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#stat_summary",
    "title": "Hands-on Exercise 1",
    "section": "stat_summary()",
    "text": "stat_summary()\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               colour =\"red\",        \n               size=4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom",
    "title": "Hands-on Exercise 1",
    "section": "geom()",
    "text": "geom()\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour=\"red\",          \n             size=4)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#best-fit-line",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#best-fit-line",
    "title": "Hands-on Exercise 1",
    "section": "best fit line",
    "text": "best fit line\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_wrap",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_wrap",
    "title": "Hands-on Exercise 1",
    "section": "Facet_wrap()",
    "text": "Facet_wrap()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid",
    "title": "Hands-on Exercise 1",
    "section": "Facet_grid()",
    "text": "Facet_grid()\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#coord_flip",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#coord_flip",
    "title": "Hands-on Exercise 1",
    "section": "coord_flip()",
    "text": "coord_flip()\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#coord_cartesian",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#coord_cartesian",
    "title": "Hands-on Exercise 1",
    "section": "coord_cartesian()",
    "text": "coord_cartesian()\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse, readxl, gifski, gapminder,\n               gganimate, tidyverse) \n\n\n\n\n\nexam_data &lt;- read_csv(\"data03/Exam_data_03.csv\")\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data03/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_each_(funs(factor(.)), col) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "pacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse, readxl, gifski, gapminder,\n               gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-data",
    "title": "Hands-on_Ex03",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data03/Exam_data_03.csv\")\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data03/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_each_(funs(factor(.)), col) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#tooltip-effect-with-tooltip-aesthetic",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#tooltip-effect-with-tooltip-aesthetic",
    "title": "Hands-on_Ex03",
    "section": "Tooltip effect with tooltip aesthetic",
    "text": "Tooltip effect with tooltip aesthetic\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL) +\n  ggtitle(\"Math scores with student ID\")\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-multiple-information-on-tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-multiple-information-on-tooltip",
    "title": "Hands-on_Ex03",
    "section": "Displaying multiple information on tooltip",
    "text": "Displaying multiple information on tooltip\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  ggtitle(\"Math scores with student ID and class info\")\n  \n  \ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#customising-tooltip-style",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#customising-tooltip-style",
    "title": "Hands-on_Ex03",
    "section": "Customising Tooltip style",
    "text": "Customising Tooltip style\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL) +\n  ggtitle(\"Math scores with student ID and class info\")\n  \ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-statistics-on-tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#displaying-statistics-on-tooltip",
    "title": "Hands-on_Ex03",
    "section": "Displaying statistics on tooltip",
    "text": "Displaying statistics on tooltip\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  ) +\n  ggtitle(\"Race Distribution\")\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#hover-effect-with-data_id-aesthetic",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#hover-effect-with-data_id-aesthetic",
    "title": "Hands-on_Ex03",
    "section": "Hover effect with data_id aesthetic",
    "text": "Hover effect with data_id aesthetic\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)+\n  ggtitle(\"Math scores\")\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#styling-hover-effect",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#styling-hover-effect",
    "title": "Hands-on_Ex03",
    "section": "Styling hover effect",
    "text": "Styling hover effect\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)+\n  ggtitle(\"Math scores\")\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#combining-tooltip-and-hover-effect",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#combining-tooltip-and-hover-effect",
    "title": "Hands-on_Ex03",
    "section": "Combining tooltip and hover effect",
    "text": "Combining tooltip and hover effect\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)+\n  ggtitle(\"Math scores with class info\")\n\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#click-effect-with-onclick",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#click-effect-with-onclick",
    "title": "Hands-on_Ex03",
    "section": "Click effect with onclick",
    "text": "Click effect with onclick\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)+\n  ggtitle(\"Math scores (Click datapoint to see more details)\")\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-ggiraph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-ggiraph",
    "title": "Hands-on_Ex03",
    "section": "Coordinated Multiple Views with ggiraph",
    "text": "Coordinated Multiple Views with ggiraph\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "title": "Hands-on_Ex03",
    "section": "Creating an interactive scatter plot: plot_ly() method",
    "text": "Creating an interactive scatter plot: plot_ly() method\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-visual-variable-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#working-with-visual-variable-plot_ly-method",
    "title": "Hands-on_Ex03",
    "section": "Working with visual variable: plot_ly() method",
    "text": "Working with visual variable: plot_ly() method\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "title": "Hands-on_Ex03",
    "section": "Creating an interactive scatter plot: ggplotly() method",
    "text": "Creating an interactive scatter plot: ggplotly() method\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#coordinated-multiple-views-with-plotly",
    "title": "Hands-on_Ex03",
    "section": "Coordinated Multiple Views with plotly",
    "text": "Coordinated Multiple Views with plotly\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table-dt-package",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-data-table-dt-package",
    "title": "Hands-on_Ex03",
    "section": "Interactive Data Table: DT package",
    "text": "Interactive Data Table: DT package\n\nDT::datatable(exam_data, class= \"compact\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#linked-brushing-crosstalk-method",
    "title": "Hands-on_Ex03",
    "section": "Linked brushing: crosstalk method",
    "text": "Linked brushing: crosstalk method\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-a-static-population-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-a-static-population-bubble-plot",
    "title": "Hands-on_Ex03",
    "section": "Building a static population bubble plot",
    "text": "Building a static population bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-the-animated-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-the-animated-bubble-plot",
    "title": "Hands-on_Ex03",
    "section": "Building the animated bubble plot",
    "text": "Building the animated bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-an-animated-bubble-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-an-animated-bubble-plot-ggplotly-method",
    "title": "Hands-on_Ex03",
    "section": "Building an animated bubble plot: ggplotly() method",
    "text": "Building an animated bubble plot: ggplotly() method\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-an-animated-bubble-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#building-an-animated-bubble-plot-plot_ly-method",
    "title": "Hands-on_Ex03",
    "section": "Building an animated bubble plot: plot_ly() method",
    "text": "Building an animated bubble plot: plot_ly() method\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-Visual Analytics and Application",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Application homepage. In this website, you will find my coursework prepared for this course!"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home_Ex02",
    "section": "",
    "text": "xxx2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "pacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse, ggstatsplot, \n               tidyverse, plotly, crosstalk, DT, \n               ggdist, gganimate, FunnelPlotR, knitr)\n\n\n\n\n\nexam &lt;- read_csv(\"data04/Exam_data_03.csv\")\n\ncovid19 &lt;- read_csv(\"data04/COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#getting-start",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#getting-start",
    "title": "Hands-on_Ex04",
    "section": "",
    "text": "pacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse, ggstatsplot, \n               tidyverse, plotly, crosstalk, DT, \n               ggdist, gganimate, FunnelPlotR, knitr)\n\n\n\n\n\nexam &lt;- read_csv(\"data04/Exam_data_03.csv\")\n\ncovid19 &lt;- read_csv(\"data04/COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-distribution",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-distribution",
    "title": "Hands-on_Ex04",
    "section": "Visualising Distribution",
    "text": "Visualising Distribution\n\nVisualising Distribution with Ridgeline Plot\n\nPlotting ridgeline graph: ggridges method\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\nVarying fill colors along the x axis\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\nMapping the probabilities directly onto colour\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\nRidgeline plots with quantile lines\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\nVisualising Distribution with Raincloud Plot\n\nPlotting a Half Eye graph\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\n\n\n\n\n\n\nAdding the boxplot with geom_boxplot()\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)\n\n\n\n\n\n\n\n\n\n\nAdding the Dot Plots with stat_dots()\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)\n\n\n\n\n\n\n\n\n\n\nFinishing touch\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visual-statistical-analysis",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visual-statistical-analysis",
    "title": "Hands-on_Ex04",
    "section": "Visual Statistical Analysis",
    "text": "Visual Statistical Analysis\n\nStatistical Tests\n\nOne-sample test: gghistostats() method\n\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\n\n\n\n\n\nTwo-sample mean test: ggbetweenstats()\n\nggbetweenstats(\n  data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\n\nOneway ANOVA Test: ggbetweenstats() method\n\nggbetweenstats(\n  data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\n\n\n\n\n\nSignificant Test of Association (Depedence) : ggbarstats() methods\n\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100))\n)\n\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-uncertainty",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#visualising-uncertainty",
    "title": "Hands-on_Ex04",
    "section": "Visualising Uncertainty",
    "text": "Visualising Uncertainty\n\nVisualizing the uncertainty of point estimates: ggplot2 methods\n\nPreparation\n\nmy_sum &lt;- exam %&gt;%\n  group_by(RACE) %&gt;%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %&gt;%\n  mutate(se=sd/sqrt(n-1))\n\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n\nRACE\nn\nmean\nsd\nse\n\n\n\n\nChinese\n193\n76.50777\n15.69040\n1.132357\n\n\nIndian\n12\n60.66667\n23.35237\n7.041005\n\n\nMalay\n108\n57.44444\n21.13478\n2.043177\n\n\nOthers\n9\n69.66667\n10.72381\n3.791438\n\n\n\n\n\n\n\nPlotting standard error bars of point estimates\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")\n\n\n\n\n\n\n\n\n\n\nPlotting confidence interval of point estimates\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")\n\n\n\n\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates with interactive error bars\n\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(5,7),\n       ggplotly(\n         ggplot(shared_df) +\n           geom_errorbar(aes(\n             x = reorder(RACE, -mean),\n             ymin = mean - 2.58 * se,\n             ymax = mean + 2.58 * se),\n             linewidth = 0.5, colour = \"black\", alpha = 0.9) +\n           geom_point(aes(\n             x = RACE,\n             y = mean,\n             text = paste(\"Race:\", RACE,\n                          \"&lt;br&gt;N:\", n,\n                          \"&lt;br&gt;Avg. Scores:\", round(mean, 2),\n                          \"&lt;br&gt;99% CI:[\", round((mean - 2.58 * se), 2), \",\",\n                          round((mean + 2.58 * se), 2), \"]\")),\n             stat = \"identity\",\n             color = \"red\", size = 1.5, alpha = 1) +\n           xlab(\"Race\") +\n           ylab(\"Average Scores\") +\n           theme_minimal() +\n           theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1)) +\n           ggtitle(\"99% Confidence interval of average\\nmaths scores by race\"),\n         tooltip = \"text\"\n       ),\n       DT::datatable(shared_df,\n                     rownames = FALSE,\n                     class = \"compact\",\n                     width = \"100%\",\n                     extensions = 'Buttons',\n                     options = list(\n                       dom = 'Blfrtip',\n                       pageLength = 10,\n                       scrollX = TRUE\n                     ),\n                     colnames = c(\"No. of pupils\", \"Avg Scores\", \"Std Dev\", \"Std Error\")) %&gt;%\n         formatRound(columns = c('mean', 'sd', 'se'), digits = 2)\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisualising Uncertainty: ggdist package\n\nVisualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(\n    show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\nVisualizing the uncertainty of point estimates: ggdist methods\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")\n\n\n\n\n\n\n\n\n\n\n\nVisualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\nInstalling ungeviz package\n\ndevtools::install_github(\"wilkelab/ungeviz\")\n\n\nlibrary(ungeviz)\n\n\nggplot(data = exam, \n       (aes(x = factor(RACE), \n            y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#0072B2\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                             group = RACE), \n              height = 0.6, \n              color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnel-plots-for-fair-comparisons",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04.html#funnel-plots-for-fair-comparisons",
    "title": "Hands-on_Ex04",
    "section": "Funnel Plots for Fair Comparisons",
    "text": "Funnel Plots for Fair Comparisons\n\nFunnelPlotR methods\n\nFunnelPlotR methods: The basic plot\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Positive,\n  denominator = Death,\n  group = `Sub-district`\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\nFunnelPlotR methods: Makeover 1\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\nFunnelPlotR methods: Makeover 2\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #&lt;&lt;           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #&lt;&lt;\n  y_label = \"Cumulative Fatality Rate\"  #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\nFunnel Plot for Fair Visual Comparison: ggplot2 methods\n\nComputing the basic derived fields\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)\n\n\n\nCalculate lower and upper limits for 95% and 99.9% CI\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)\n\n\n\nPlotting a static funnel plot\n\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np\n\n\n\n\n\n\n\n\n\n\nInteractive Funnel Plot: plotly + ggplot2\n\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Phase_2/Take-home_Ex01_Phase2.html",
    "href": "Take-home_Ex/Take-home_Ex01/Phase_2/Take-home_Ex01_Phase2.html",
    "title": "Take-home_Ex01_Phase2",
    "section": "",
    "text": "I‘d like to provide my personal thoughts to our friend Zhang Jinghan’s work.\n\n\n\n\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, ggiraph, plotly, \n                DT, readxl, gifski, gapminder,\n               gganimate, scales) \n\n\n\n\n\npop_data  &lt;- read.csv(\"data/respopagesex2024.csv\")\n\nsgresidence  &lt;- read.csv(\"data/respopagesex2024.csv\")\n\n\n\n\n\nHere are the areas where she did very well and I should learn from:\n\nHer insights into the data were very profound, and she did a great job transforming the data to uncover more observations. For example, she derived the Youth Dependency Ratio (YDR) and the Elderly Dependency Ratio (EDR) to provide deeper insights into the issue of population aging. In comparison, my own assignment, which only compared population distributions, was not as insightful.\nShe used colors very skillfully in her visualization—not just to make her work more visually appealing, but more importantly, to highlight contrasts between different groups. For example, she used red and blue to distinguish between male and female groups, and orange and purple to differentiate between younger and older age groups. These thoughtful color choices made her entire visualization much clearer and easier to understand.\nHer choice of visualization types was highly appropriate—for instance, using bar charts to represent population distribution and a scatter quadrant map to show the distribution of YDR and EDR across subzones. Personally, I couldn’t think of a better choice of charts to convey the data more effectively.\n\n\n\n\nFollowing are my own ideas to adjust the visuals:\n\nIn her Visualization 1, the Population Pyramid, she presented a comprehensive view of the population structure of Singapore residents in 2024, broken down by gender and age group. However, from a reader’s perspective, the visualization contains too much information in a single chart, which may require extra effort to understand the relationships among population size, gender, age group, and percentage of the total population. In another word, the visual is not very straightforward. If it were up to me, I would present these pieces of information separately for greater clarity.\n\nFor the code, I’d like to simply “borrow” the approach used by our friend Luo Yuming, who streamlined the amount of information in the chart and represented the gender ratio comparison using an additional pie chart.\n\n# Standardise column names\npop_data &lt;- pop_data %&gt;%\n  rename(\n    Planning_Area = PA,\n    Subzone = SZ,\n    Age = Age,\n    Sex = Sex,\n    Population = Pop,\n    Year = Time\n  ) %&gt;%\n  filter(Year == 2024) %&gt;%\n  mutate(\n    Age_numeric = ifelse(Age == \"90_and_Over\", 90, as.integer(Age)),  \n    Sex = ifelse(Sex == \"Males\", \"Male\", \"Female\")\n  )\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `Age_numeric = ifelse(Age == \"90_and_Over\", 90,\n  as.integer(Age))`.\nCaused by warning in `ifelse()`:\n! NAs introduced by coercion\n\nage_distribution &lt;- pop_data %&gt;%\n  filter(Sex %in% c(\"Male\", \"Female\")) %&gt;%\n  group_by(Planning_Area, Age_numeric) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  rename(Age = Age_numeric)\n\n\nweighted_median &lt;- function(df) {\n  df &lt;- df[order(df$Age), ]\n  cum_pop &lt;- cumsum(df$Population)\n  cutoff &lt;- sum(df$Population) / 2\n  df$Age[which(cum_pop &gt;= cutoff)[1]]\n}\n\n\nmedian_age_summary &lt;- age_distribution %&gt;%\n  group_by(Planning_Area) %&gt;%\n  summarise(Median_Age = weighted_median(cur_data_all()))\n\nWarning: There was 1 warning in `summarise()`.\nℹ In argument: `Median_Age = weighted_median(cur_data_all())`.\nℹ In group 1: `Planning_Area = \"Ang Mo Kio\"`.\nCaused by warning:\n! `cur_data_all()` was deprecated in dplyr 1.1.0.\nℹ Please use `pick()` instead.\n\ngender_summary &lt;- pop_data %&gt;%\n  group_by(Sex) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(Percent = Population / sum(Population),\n         Label = paste0(percent(Percent, accuracy = 0.1)))  \n\n\np1 &lt;- ggplot(gender_summary, aes(x = \"\", y = Population, fill = Sex)) +\n  geom_col(width = 1, color = \"white\") +\n  coord_polar(theta = \"y\") +\n  geom_text(aes(label = Label), position = position_stack(vjust = 0.5),\n            size = 2.5, fontface = \"bold\", color = \"black\") + \n  scale_fill_manual(values = c(\"Male\" = \"#a3c3cc\", \"Female\" = \"#d4a5a5\")) +\n  labs(title = \"Gender Distribution\") +\n  theme_void() +\n  theme(\n    plot.margin = margin(10, 10, 10, 10),  \n    legend.position = \"none\",\n    plot.title = element_text(size = 9, face = \"bold\", hjust = 0.5)\n  )\n\n\n\npyramid_data &lt;- pop_data %&gt;%\n  filter(Sex %in% c(\"Male\", \"Female\")) %&gt;%\n  mutate(AgeGroup = cut(Age_numeric,\n                        breaks = c(seq(0, 90, 10), Inf),\n                        right = FALSE,\n                        labels = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\",\n                                   \"40-49\", \"50-59\", \"60-69\", \"70-79\",\n                                   \"80-89\", \"90+\"))) %&gt;%\n  group_by(AgeGroup, Sex) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(Population = ifelse(Sex == \"Male\", -Population, Population))\n\n\n\np2 &lt;- ggplot(pyramid_data, aes(x = Population, y = AgeGroup, fill = Sex)) +\n  geom_col(width = 0.9) +\n  scale_x_continuous(labels = function(x) paste0(abs(x / 1000), \"k\")) +\n  scale_fill_manual(values = c(\"Male\" = \"#a3c3cc\", \"Female\" = \"#d4a5a5\")) +\n  labs(\n    title = \"Population Pyramid by Age Group and Gender (2024)\",\n    x = \"Population\",\n    y = \"Age Group\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5),\n    legend.position = \"none\"\n  )\n\n\ntop10_pa_names &lt;- pop_data %&gt;%\n  group_by(Planning_Area) %&gt;%\n  summarise(Total = sum(Population), .groups = \"drop\") %&gt;%\n  arrange(desc(Total)) %&gt;%\n  slice_head(n = 10) %&gt;%\n  pull(Planning_Area)\n\n\ntop10_pyramid &lt;- pop_data %&gt;%\n  filter(Planning_Area %in% top10_pa_names, Sex %in% c(\"Male\", \"Female\")) %&gt;%\n  group_by(Planning_Area, Sex) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(\n    Population = ifelse(Sex == \"Male\", -Population, Population),\n    Planning_Area = factor(Planning_Area, levels = rev(top10_pa_names))\n  )\n\n\n\np3 &lt;-ggplot(top10_pyramid, aes(x = Population, y = Planning_Area, fill = Sex)) +\n  geom_col(width = 0.7) +\n  scale_x_continuous(labels = function(x) paste0(abs(x / 1000), name = \"k\")) +\n  scale_fill_manual(values = c(\"Male\" = \"#a3c3cc\", \"Female\" = \"#d4a5a5\")) +\n  labs(\n    title = \"Population Pyramid of Top 10 Planning Areas (2024)\",\n    y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16, hjust = 0.5),\n    axis.text = element_text(size = 10),\n    legend.position = \"bottom\"\n  )\n\n\n(p1 + p2) / p3 +\n  plot_layout(\n    widths = c(1, 2),    \n    heights = c(1, 1.2)  \n  ) +\n  plot_annotation(\n    title = \"Singapore’s 2024 Population Overview\",\n    theme = theme(\n      plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5)\n    )\n  )\n\n\n\n\n\n\n\n\n\nFor visualization 2, I’d like to make a very simple adjustment which can directly hit the point, which is add a label to each zone on the chart. If required, we may also make this to an interactive chart.\n\nMy shot:\n\nsgresidence &lt;- sgresidence %&gt;%\n  mutate(age = as.integer(Age))\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `age = as.integer(Age)`.\nCaused by warning:\n! NAs introduced by coercion\n\nsgresidence %&gt;%\n  filter(is.na(as.integer(Age))) %&gt;%\n  distinct(Age)\n\nWarning: There was 1 warning in `filter()`.\nℹ In argument: `is.na(as.integer(Age))`.\nCaused by warning:\n! NAs introduced by coercion\n\n\n          Age\n1 90_and_Over\n\nsgresidence %&gt;%\n  filter(Age == \"90_and_Over\") %&gt;%\n  summarise(total_90plus = sum(Pop)) %&gt;%\n  mutate(total_pop = sum(sgresidence$Pop),\n         percent = total_90plus / total_pop * 100)\n\n  total_90plus total_pop   percent\n1        25290   4193530 0.6030719\n\nsgresidence &lt;- sgresidence %&gt;%\n  mutate(\n    Age = ifelse(Age == \"90_and_Over\", \"90\", Age),\n    age = as.integer(Age)\n  )\n\nsgresidence &lt;- sgresidence %&gt;%\n  filter(Pop &gt; 0)\n\n## 1 ────────── Calculate ratios\ndep_sz &lt;- sgresidence %&gt;% \n  mutate(group = case_when(\n    age &lt; 15  ~ \"Youth\",\n    age &gt;= 65 ~ \"Elderly\",\n    TRUE      ~ \"Working\")) %&gt;% \n  group_by(SZ, group) %&gt;% \n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;% \n  pivot_wider(names_from = group, values_from = Pop, values_fill = 0) %&gt;% \n  mutate(\n    YDR        = Youth / Working,\n    EDR        = Elderly / Working,\n    Dependants = Youth + Elderly,\n    grp        = if_else(YDR &gt; EDR, \"Y_dom\", \"O_dom\"),\n    log_ratio  = log(pmax(EDR, 1e-6) / pmax(YDR, 1e-6)),  # avoid log(0)\n    YDR_pct    = percent_rank(YDR) * 100,\n    EDR_pct    = percent_rank(EDR) * 100\n  )\n\n## 2 ────────── Discretize log_ratio into \"Low\" / \"Mid\" / \"High\"\ndep_plot &lt;- dep_sz %&gt;%\n  mutate(\n    imbalance = cut(abs(log_ratio),\n                    breaks = quantile(abs(log_ratio), probs = c(0, 1/3, 2/3, 1)),\n                    labels = c(\"Low\", \"Mid\", \"High\"),\n                    include.lowest = TRUE))\n\n## 3 ────────── Define stepped color table\ncol_tbl &lt;- tribble(\n  ~grp,     ~imbalance, ~col,\n  \"Y_dom\", \"Low\",  \"#FFF2B2\",\n  \"Y_dom\", \"Mid\",  \"#FFC94A\",\n  \"Y_dom\", \"High\", \"#FF9300\",\n  \"O_dom\", \"Low\",  \"#E3DFF5\",\n  \"O_dom\", \"Mid\",  \"#AF94E1\",\n  \"O_dom\", \"High\", \"#6B42BF\"\n)\n\n## 4 ────────── Merge color\ndep_plot &lt;- dep_plot %&gt;%\n  left_join(col_tbl, by = c(\"grp\", \"imbalance\"))\n\n## 5 ────────── Plot\nggplot(dep_plot, aes(YDR_pct, EDR_pct)) +\n  geom_hline(yintercept = 50, color = \"gray60\") +\n  geom_vline(xintercept = 50, color = \"gray60\") +\n  geom_point(aes(size = Dependants, color = col), alpha = 0.9) +\n  scale_colour_identity() +\n  scale_size_area(max_size = 12,\n                  breaks = c(500, 2000, 5000, 10000),\n                  labels = scales::comma,\n                  name = \"Dependants\\n(headcount)\") +\n  labs(\n    title = \"Youth vs Elderly Dependency Ratio of SG Sub Zones Quadrants (2024)\",\n    subtitle = \"• Hue: Dominant dependency (Purple–Elderly, Yellow–Youth) \\n• Depth: Imbalance level (Low / Mid / High) \\n• Size: Total dependants count\",\n    x = \"Youth Dependency Percentile (YDP)\",\n    y = \"Elderly Dependency Percentile (EDP)\"\n  ) +\n \n  annotate(\"text\", x = 80, y = 90, label = \"Dual-Burden Zones\", fontface = \"bold\", size = 3.5, hjust = 0.5) +\n  annotate(\"text\", x = 80, y = 10, label = \"Young Family Zones\", fontface = \"bold\", size = 3.5, hjust = 0.5) +\n  annotate(\"text\", x = 20, y = 90, label = \"Aging-Dominant Zones\", fontface = \"bold\", size = 3.5, hjust = 0.5) +\n  annotate(\"text\", x = 20, y = 10, label = \"Working Core Zones\", fontface = \"bold\", size = 3.5, hjust = 0.5) +\n  theme_minimal(base_size = 11) +\n  theme(\n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n  )\n\n\n\n\n\n\n\n\n\nFor Visualization 3, I noticed that a): Median lines for both the EDR and YDR are presented, they are not labeled, which may cause confusion. I would recommend adding clear labels to these reference lines. b): It would be helpful to highlight planning areas where EDR exceed the median values, as these zones may warrant closer attention. c): It’s good to show the median EDR and YDR in value so that readers can understand the situation more clearly.\n\nMy shot:\n\n# 1. Categorize by Age Group and summarize population\ndf_agegroup &lt;- sgresidence %&gt;%\n  mutate(AgeGroup = case_when(\n    Age &lt; 15 ~ \"Youth\",\n    Age &lt;= 64 ~ \"WorkingAge\",\n    TRUE ~ \"Elderly\"\n  )) %&gt;%\n  group_by(PA, AgeGroup) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  pivot_wider(names_from = AgeGroup, values_from = Pop, values_fill = 0) %&gt;%\n  mutate(\n    TotalPop = Youth + WorkingAge + Elderly,\n    ElderlyRatio = Elderly / WorkingAge,\n    YouthRatio = Youth / WorkingAge\n  )\n\n# 2. Reshape to long format for stacked bar chart\ndf_age_long &lt;- df_agegroup %&gt;%\n  pivot_longer(cols = c(\"Youth\", \"WorkingAge\", \"Elderly\"),\n               names_to = \"AgeGroup\", values_to = \"Pop\") %&gt;%\n  mutate(PA = fct_reorder(PA, -Pop, .fun = sum))\n\n# 3. Compute median values and max population\nmedian_edr &lt;- median(df_agegroup$ElderlyRatio, na.rm = TRUE)\nmedian_ydr &lt;- median(df_agegroup$YouthRatio, na.rm = TRUE)\nmax_pop    &lt;- max(df_agegroup$TotalPop, na.rm = TRUE)\n\n# 4. Add star marker to EDR above median\ndf_agegroup &lt;- df_agegroup %&gt;%\n  mutate(EDR_star = if_else(ElderlyRatio &gt; median_edr, \"*\", \"\"))\n\n# 5. Define color palette\ncustom_colors &lt;- c(\n  \"Youth\" = \"#FFD700\",        # Gold\n  \"WorkingAge\" = \"#B0B0B0\",   # Gray\n  \"Elderly\" = \"#800080\"       # Purple\n)\n\n# 6. Get rightmost x position\nlast_x &lt;- length(unique(df_age_long$PA))\n\n# 7. Create the plot\nggplot(df_age_long, aes(x = PA, y = Pop, fill = AgeGroup)) +\n  geom_bar(stat = \"identity\", width = 0.95) +\n\n  # Elderly Dependency Ratio line\n  geom_line(\n    data = df_agegroup,\n    aes(x = PA, y = ElderlyRatio * max_pop / 2, group = 1),\n    inherit.aes = FALSE, color = \"#9932CC\", size = 1.2\n  ) +\n\n  # Youth Dependency Ratio line\n  geom_line(\n    data = df_agegroup,\n    aes(x = PA, y = YouthRatio * max_pop / 2, group = 1),\n    inherit.aes = FALSE, color = \"#E67E22\", size = 1.2\n  ) +\n\n  # Red stars for high EDR\n  geom_text(\n    data = df_agegroup %&gt;% filter(EDR_star == \"*\"),\n    aes(x = PA, y = ElderlyRatio * max_pop / 2, label = EDR_star),\n    inherit.aes = FALSE, color = \"red\", size = 5, vjust = -0.8\n  ) +\n\n  # Median lines\n  geom_hline(yintercept = median_edr * max_pop / 2,\n             color = \"black\", linetype = \"solid\", size = 0.5) +\n  geom_hline(yintercept = median_ydr * max_pop / 2,\n             color = \"black\", linetype = \"solid\", size = 0.5) +\n\n  # Median line labels (right)\n  annotate(\"text\", x = last_x, y = median_edr * max_pop / 2,\n           label = \"Median EDR\", vjust = -1, hjust = 1, size = 3, color = \"black\") +\n  annotate(\"text\", x = last_x, y = median_ydr * max_pop / 2,\n           label = \"Median YDR\", vjust = 1.5, hjust = 1, size = 3, color = \"black\") +\n\n  # ➕ EDR/YDR values in red box area\n  annotate(\"text\", x = last_x - 10, y = max_pop * 0.9,\n           label = paste0(\"Median EDR = \", round(median_edr, 2)),\n           hjust = 0, size = 2, color = \"#9932CC\") +\n  annotate(\"text\", x = last_x - 10, y = max_pop * 0.8,\n           label = paste0(\"Median YDR = \", round(median_ydr, 2)),\n           hjust = 0, size = 2, color = \"#E67E22\") +\n\n  # Final touches\n  scale_fill_manual(values = custom_colors) +\n  scale_y_continuous(\n    name = \"Population Count\",\n    sec.axis = sec_axis(~ . * 2 / max_pop, name = \"Dependency Ratio\"),\n    labels = label_number(scale_cut = cut_short_scale())\n  ) +\n  labs(\n    title = \"Population by Planning Area with Youth & Elderly Dependency Ratios\",\n    subtitle = \"* indicates Planning Areas with Elderly Dependency Ratio above the national median\",\n    x = \"Planning Area\",\n    fill = \"Age Group\"\n  ) + \n  \n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"right\"\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html",
    "title": "Demographic structures and distribution of Singapore in 2024",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, ggiraph, plotly, \n                DT, readxl, gifski, gapminder,\n               gganimate) \n\n\n\n\n\nPopdata &lt;- read.csv(\"data/respopagesex2024.csv\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html#getting-start",
    "href": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html#getting-start",
    "title": "Demographic structures and distribution of Singapore in 2024",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, ggiraph, plotly, \n                DT, readxl, gifski, gapminder,\n               gganimate) \n\n\n\n\n\nPopdata &lt;- read.csv(\"data/respopagesex2024.csv\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html#setting-the-sense",
    "href": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html#setting-the-sense",
    "title": "Demographic structures and distribution of Singapore in 2024",
    "section": "1. Setting the sense",
    "text": "1. Setting the sense\nSingapore’s changing demographics have become a pressing topic, especially in the context of an aging population. Understanding the composition and spatial distribution of residents is increasingly important to both policymakers and the public. This report aims to offer a clear, data-driven overview of Singapore’s demographic landscape in 2024, with a particular focus on differences across planning areas and subzones, as well as variations by age and gender. Drawing on the latest official statistics, this analysis provides insights into the trends shaping Singapore’s communities today."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html#dataset",
    "href": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html#dataset",
    "title": "Demographic structures and distribution of Singapore in 2024",
    "section": "2. Dataset",
    "text": "2. Dataset\nThe dataset used in this report was obtained from the Singapore Department of Statistics (DOS) and provides population counts as of June 2024. It contains detailed information on Singapore residents, broken down by Planning Area, Subzone, single year of age, and sex. This high-resolution demographic data enables granular analysis of population structures and spatial distribution across the city. The dataset comprises a total of 60,424 records. For more details, please refer to the metadata below.\n\n\n\nVariables\nDefinition\n\n\n\n\nPA\nPlanning Area\n\n\nSZ\nSubzone\n\n\nAge\nSingle Year of Age\n\n\nSex\nSex\n\n\nPop\nResident Count\n\n\nTime\nTime/Period"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html#data-processing",
    "href": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html#data-processing",
    "title": "Demographic structures and distribution of Singapore in 2024",
    "section": "3. Data processing",
    "text": "3. Data processing\nTo ensure the validity and reliability of this report, it is essential to preprocess the dataset and assess its quality. This includes checking for completeness, consistency, and potential anomalies that may affect the accuracy of our analysis.\n\n3.1. Checking for missing values\n\ncolSums(is.na(Popdata))\n\n  PA   SZ  Age  Sex  Pop Time \n   0    0    0    0    0    0 \n\n\nAs observed from output of code-chunk above, there’s no missing value in this dataset.\n\n\n3.2. Checking for duplicates\n\nPopdata[duplicated(Popdata)]\n\ndata frame with 0 columns and 60424 rows\n\n\nAs observed from output of code-chunk above, there’s no duplicates in this dataset.\n\n\n3.2. Checking for datatype\n\nstr(Popdata)\n\n'data.frame':   60424 obs. of  6 variables:\n $ PA  : chr  \"Ang Mo Kio\" \"Ang Mo Kio\" \"Ang Mo Kio\" \"Ang Mo Kio\" ...\n $ SZ  : chr  \"Ang Mo Kio Town Centre\" \"Ang Mo Kio Town Centre\" \"Ang Mo Kio Town Centre\" \"Ang Mo Kio Town Centre\" ...\n $ Age : chr  \"0\" \"0\" \"1\" \"1\" ...\n $ Sex : chr  \"Males\" \"Females\" \"Males\" \"Females\" ...\n $ Pop : int  10 10 10 10 10 10 10 10 30 10 ...\n $ Time: int  2024 2024 2024 2024 2024 2024 2024 2024 2024 2024 ...\n\n\nAs observed from the output of the code-chunk above, all column data types are appropriate. One point to note is that the datatype of the variable Age is character instead of integer. This is because the dataset does not provide age-specific breakdowns beyond 90 years old; instead, individuals aged 90 and above are grouped under the label “90_and_Over”. This classification is reasonable and consistent with common demographic reporting practices.\n\n\n3.3. Removing unnecessary columns\nSince the dataset has already been clearly defined as representing statistics from the year 2024, and upon inspection the variable Time contains only a single unique value (2024), this column is no longer necessary and can be safely removed.\n\nunique(Popdata$Time)\n\n[1] 2024\n\n\n\npopdata &lt;- subset(Popdata, select = -Time)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html#key-findings",
    "href": "Take-home_Ex/Take-home_Ex01/Phase_1/Take-home_Ex01.html#key-findings",
    "title": "Demographic structures and distribution of Singapore in 2024",
    "section": "4. Key Findings",
    "text": "4. Key Findings\n\n4.1. Interactive Population Plot\n\npa_sz_summary &lt;- popdata %&gt;%\n  group_by(PA, SZ) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  mutate(\n    Pop_thousand = Pop / 1000,\n    tooltip_text = str_replace_all(\n      paste0(\"Planning Area: \", PA,\n             \"\\nSubzone: \", SZ,\n             \"\\nPopulation: \", Pop),\n      \"'\", \"\"))\n\npa_order &lt;- pa_sz_summary %&gt;%\n  group_by(PA) %&gt;%\n  summarise(TotalPop = sum(Pop_thousand)) %&gt;%\n  filter(TotalPop &gt; 0) %&gt;%                         \n  arrange(desc(TotalPop)) %&gt;%\n  pull(PA)\n\npa_sz_summary &lt;- pa_sz_summary %&gt;%\n  filter(PA %in% pa_order) %&gt;%\n  mutate(PA = factor(PA, levels = pa_order))\n\ncolor_palette &lt;- c(\"#E76F51\", \"#457B9D\", \"#F4A261\", \"#2A9D8F\")\nn_subzones &lt;- length(unique(pa_sz_summary$SZ))\ncolor_values &lt;- rep(color_palette, length.out = n_subzones)\nsz_levels &lt;- sort(unique(pa_sz_summary$SZ))\nnames(color_values) &lt;- sz_levels\n\np &lt;- ggplot(pa_sz_summary, aes(x = PA, y = Pop_thousand, fill = SZ)) +\n  geom_bar_interactive(\n    aes(tooltip = tooltip_text, data_id = tooltip_text),\n    stat = \"identity\", show.legend = FALSE\n  ) +\n  scale_fill_manual(values = color_values) +\n  scale_y_continuous(\n  breaks = seq(0, 250, by = 50),\n  labels = function(x) paste0(x, \"K\")) +\n  labs(title = \"Population by Planning Area and Subzone (2024)\",\n    x = \"Planning Area\", y = \"Population (in thousands)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8 * 0.618,\n  options = list(\n    opts_hover(\"fill-opacity:1;stroke:black;stroke-width:0.5px;cursor:pointer;\"),\n    \n    opts_hover_inv(css = \"opacity:0.2;\"),  \n    opts_tooltip()\n  ))\n\n\n\n\n\nThis chart provides a comprehensive overview of the population distribution across Singapore’s planning areas and subzones in 2024.\nFrom the planning area angle, it shows that population is heavily concentrated in areas such as Tampines, Bedok, and Sengkang. Notably, seven planning areas—Tampines, Bedok, Sengkang, Jurong West, Woodlands, Yishun, and Hougang—have populations exceeding 200,000, indicating high residential density. In contrast, areas such as Seletar and Museum have very low or near-zero populations, suggesting they may be non-residential or under development.\nFrom the subzone angle, Tampines East is the most inhabited subzone, with 128,320 residents, compared to subzones such as Boon lay’s Shipyard which is completely uninhabited.\n\n\n4.2. Distribution of elderly population in Singapore\nIn Singapore, people aged 65 and above are defined as aging people, directly translated from mandarin, this group of people are expected to have a A happy, joyful and enjoyable retirement life. At this stage of life, they are no longer burdened by raising children or dealing with intense job competition, and instead experience an unprecedented sense of freedom and ease. However, from a societal perspective, an excessive number of seniors can inevitably impact the overall dynamism of society, leading to issues such as labour shortages and increased fiscal pressure.\n\npopdata_agegroup &lt;- popdata %&gt;%\n  mutate(\n    AgeGroup = case_when(\n      Age &lt;= 21 ~ \"0–21 (Children & Teens)\",\n      Age &lt;= 35 ~ \"22–35 (Young Adults)\",\n      Age &lt;= 64 ~ \"36–64 (Middle-aged)\",\n      TRUE      ~ \"65+ (Aging)\")) %&gt;%\n  \n  group_by(AgeGroup) %&gt;%\n  summarise(TotalPop = sum(Pop), .groups = \"drop\") %&gt;%\n  mutate(Percentage = TotalPop / sum(TotalPop),\n        tooltip = paste0(\n      AgeGroup, \"\\nPopulation: \", formatC(TotalPop, format = \"d\", big.mark = \",\")),\n    AgeGroup = factor(AgeGroup, levels = c(\n      \"0–21 (Children & Teens)\", \n      \"22–35 (Young Adults)\", \n      \"36–64 (Middle-aged)\", \n      \"65+ (Aging)\")))\n\np &lt;- ggplot(popdata_agegroup, aes(x = AgeGroup, y = TotalPop)) +\n  geom_col_interactive(\n    aes(tooltip = tooltip, data_id = AgeGroup),\n    fill = \"#457B9D\") +\n  geom_text_interactive(\n    aes(\n      label = paste0(round(Percentage * 100, 1), \"%\"),\n      tooltip = tooltip,\n      data_id = AgeGroup),\n    vjust = -0.5,\n    size = 4,\n    color = \"black\") +\n  scale_y_continuous(labels = function(x) formatC(x, format = \"d\", big.mark = \",\")) +\n  labs(\n    title = \"Singapore Resident Population by Age Group\",\n    x = \"Age Group\",\n    y = \"Population\") +\n  theme_minimal()\n\n\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8 * 0.618,\n  options = list(\n    opts_hover(\"fill-opacity:1;stroke:black;stroke-width:0.5px;cursor:pointer;\"),\n    \n    opts_hover_inv(css = \"opacity:0.2;\"),  \n    opts_tooltip()\n  ))\n\n\n\n\n\nAs observed from the chart above, 44.7% of Singapore’s resident population will be in the middle-aged group (36-64 years old), indicating a mature or even aging demographic structure. The children and adolescents (0-21 years old) and the youth (22-35 years old) together account for only 34.3% of the population, resulting in a relatively limited labor supply in the future. The elderly population (65 years old and above) has already reached 21%, a proportion that should not be ignored.\nAccording to international standards, when the proportion of people aged 65 and above in a country or region exceeds 7%, it is considered an aging society; and when it exceeds 14%, it is an aged society. Singapore’s current 21% has clearly entered the “aging society” stage. This means that there are multiple challenges ahead in terms of labor force constraints, rising healthcare needs, and increasing pressure on public finances. The structural trends shown in the charts highlight the need for the government to take effective measures to encourage childbearing, extend the working life and improve the pension system.\n\nelderly_data &lt;- popdata %&gt;%\n  filter(Age &gt;= 65) %&gt;%\n  group_by(PA, SZ) %&gt;%\n  summarise(ElderlyPop = sum(Pop), .groups = \"drop\")\n\ntotal_elderly &lt;- sum(elderly_data$ElderlyPop)\n\nelderly_by_PA &lt;- elderly_data %&gt;%\n  group_by(PA) %&gt;%\n  summarise(TotalElderly = sum(ElderlyPop)) %&gt;%\n  arrange(desc(TotalElderly)) %&gt;%\n  slice_max(order_by = TotalElderly, n = 5) %&gt;%\n  mutate(\n    PA = factor(PA, levels = rev(PA)),\n    Percent = TotalElderly / total_elderly,\n    tooltip = paste0(\"Planning Area: \", PA,\n                     \"\\nPopulation: \", TotalElderly))\n\nP1 &lt;- ggplot(elderly_by_PA, aes(x = PA, y = TotalElderly)) +\n  geom_col_interactive(aes(tooltip = tooltip, data_id = PA), fill = \"#264653\") +\n  geom_text_interactive(\n    aes(label = paste0(round(Percent * 100, 1), \"%\"),\n        tooltip = tooltip, data_id = PA),\n    hjust = 1.02, color = \"white\", size = 4) +\n  coord_flip() +\n  labs(\n    title = \"Top 5 Planning Areas by Elderly Population\",\n    x = \"Planning Area\", y = \"Population\") +\n  theme_minimal(base_size = 12)\n\ntop_sz &lt;- elderly_data %&gt;%\n  arrange(desc(ElderlyPop)) %&gt;%\n  slice_max(order_by = ElderlyPop, n = 10) %&gt;%\n  mutate(\n    SZ = reorder(SZ, ElderlyPop),\n    Percent = ElderlyPop / total_elderly,\n    tooltip = paste0(\"Subzone: \", SZ,\n                     \"\\nPopulation: \", ElderlyPop))\n\nP2 &lt;- ggplot(top_sz, aes(x = SZ, y = ElderlyPop)) +\n  geom_col_interactive(aes(tooltip = tooltip, data_id = SZ), fill = \"#264653\") +\n  geom_text_interactive(\n    aes(label = paste0(round(Percent * 100, 1), \"%\"),\n        tooltip = tooltip, data_id = SZ),\n    hjust = 1.02, color = \"white\", size = 4) +\n  coord_flip() +\n  labs(title = \"Top 10 Subzones by Elderly Population\",\n    x = \"Subzone\", y = \"Population\") +\n  theme_minimal(base_size = 12)\n\ngirafe(\n  ggobj = P1 + P2,\n  width_svg = 10,\n  height_svg = 6,\n  options = list(\n    opts_hover(\"fill-opacity:1;stroke:black;stroke-width:0.5px;cursor:pointer;\"),\n    opts_hover_inv(css = \"opacity:0.2;\"),\n    opts_tooltip()))\n\n\n\n\n\nAs observed from charts above, planning areas such as Bedok, Tampines, and Hougang have some of the highest elderly populations in Singapore, with Bedok accounting for 8% of the national elderly population, Tampines 6.7%, and Tampines East alone reaching 3.3%. These figures indicate a high concentration of elderly residents in specific mature residential areas. In response to this trend, these regions need to accelerate the development of age-friendly communities, optimize the allocation of care resources, and strengthen neighborhood support systems to address the rapidly growing challenges of an ageing population."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Phase_2/Take-home_Ex01_Phase2.html#getting-start",
    "href": "Take-home_Ex/Take-home_Ex01/Phase_2/Take-home_Ex01_Phase2.html#getting-start",
    "title": "Take-home_Ex01_Phase2",
    "section": "",
    "text": "pacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse, ggiraph, plotly, \n                DT, readxl, gifski, gapminder,\n               gganimate, scales) \n\n\n\n\n\npop_data  &lt;- read.csv(\"data/respopagesex2024.csv\")\n\nsgresidence  &lt;- read.csv(\"data/respopagesex2024.csv\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Phase_2/Take-home_Ex01_Phase2.html#good-design-principles",
    "href": "Take-home_Ex/Take-home_Ex01/Phase_2/Take-home_Ex01_Phase2.html#good-design-principles",
    "title": "Take-home_Ex01_Phase2",
    "section": "",
    "text": "Here are the areas where she did very well and I should learn from:\n\nHer insights into the data were very profound, and she did a great job transforming the data to uncover more observations. For example, she derived the Youth Dependency Ratio (YDR) and the Elderly Dependency Ratio (EDR) to provide deeper insights into the issue of population aging. In comparison, my own assignment, which only compared population distributions, was not as insightful.\nShe used colors very skillfully in her visualization—not just to make her work more visually appealing, but more importantly, to highlight contrasts between different groups. For example, she used red and blue to distinguish between male and female groups, and orange and purple to differentiate between younger and older age groups. These thoughtful color choices made her entire visualization much clearer and easier to understand.\nHer choice of visualization types was highly appropriate—for instance, using bar charts to represent population distribution and a scatter quadrant map to show the distribution of YDR and EDR across subzones. Personally, I couldn’t think of a better choice of charts to convey the data more effectively."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Phase_2/Take-home_Ex01_Phase2.html#further-improvement",
    "href": "Take-home_Ex/Take-home_Ex01/Phase_2/Take-home_Ex01_Phase2.html#further-improvement",
    "title": "Take-home_Ex01_Phase2",
    "section": "",
    "text": "Following are my own ideas to adjust the visuals:\n\nIn her Visualization 1, the Population Pyramid, she presented a comprehensive view of the population structure of Singapore residents in 2024, broken down by gender and age group. However, from a reader’s perspective, the visualization contains too much information in a single chart, which may require extra effort to understand the relationships among population size, gender, age group, and percentage of the total population. In another word, the visual is not very straightforward. If it were up to me, I would present these pieces of information separately for greater clarity.\n\nFor the code, I’d like to simply “borrow” the approach used by our friend Luo Yuming, who streamlined the amount of information in the chart and represented the gender ratio comparison using an additional pie chart.\n\n# Standardise column names\npop_data &lt;- pop_data %&gt;%\n  rename(\n    Planning_Area = PA,\n    Subzone = SZ,\n    Age = Age,\n    Sex = Sex,\n    Population = Pop,\n    Year = Time\n  ) %&gt;%\n  filter(Year == 2024) %&gt;%\n  mutate(\n    Age_numeric = ifelse(Age == \"90_and_Over\", 90, as.integer(Age)),  \n    Sex = ifelse(Sex == \"Males\", \"Male\", \"Female\")\n  )\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `Age_numeric = ifelse(Age == \"90_and_Over\", 90,\n  as.integer(Age))`.\nCaused by warning in `ifelse()`:\n! NAs introduced by coercion\n\nage_distribution &lt;- pop_data %&gt;%\n  filter(Sex %in% c(\"Male\", \"Female\")) %&gt;%\n  group_by(Planning_Area, Age_numeric) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  rename(Age = Age_numeric)\n\n\nweighted_median &lt;- function(df) {\n  df &lt;- df[order(df$Age), ]\n  cum_pop &lt;- cumsum(df$Population)\n  cutoff &lt;- sum(df$Population) / 2\n  df$Age[which(cum_pop &gt;= cutoff)[1]]\n}\n\n\nmedian_age_summary &lt;- age_distribution %&gt;%\n  group_by(Planning_Area) %&gt;%\n  summarise(Median_Age = weighted_median(cur_data_all()))\n\nWarning: There was 1 warning in `summarise()`.\nℹ In argument: `Median_Age = weighted_median(cur_data_all())`.\nℹ In group 1: `Planning_Area = \"Ang Mo Kio\"`.\nCaused by warning:\n! `cur_data_all()` was deprecated in dplyr 1.1.0.\nℹ Please use `pick()` instead.\n\ngender_summary &lt;- pop_data %&gt;%\n  group_by(Sex) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(Percent = Population / sum(Population),\n         Label = paste0(percent(Percent, accuracy = 0.1)))  \n\n\np1 &lt;- ggplot(gender_summary, aes(x = \"\", y = Population, fill = Sex)) +\n  geom_col(width = 1, color = \"white\") +\n  coord_polar(theta = \"y\") +\n  geom_text(aes(label = Label), position = position_stack(vjust = 0.5),\n            size = 2.5, fontface = \"bold\", color = \"black\") + \n  scale_fill_manual(values = c(\"Male\" = \"#a3c3cc\", \"Female\" = \"#d4a5a5\")) +\n  labs(title = \"Gender Distribution\") +\n  theme_void() +\n  theme(\n    plot.margin = margin(10, 10, 10, 10),  \n    legend.position = \"none\",\n    plot.title = element_text(size = 9, face = \"bold\", hjust = 0.5)\n  )\n\n\n\npyramid_data &lt;- pop_data %&gt;%\n  filter(Sex %in% c(\"Male\", \"Female\")) %&gt;%\n  mutate(AgeGroup = cut(Age_numeric,\n                        breaks = c(seq(0, 90, 10), Inf),\n                        right = FALSE,\n                        labels = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\",\n                                   \"40-49\", \"50-59\", \"60-69\", \"70-79\",\n                                   \"80-89\", \"90+\"))) %&gt;%\n  group_by(AgeGroup, Sex) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(Population = ifelse(Sex == \"Male\", -Population, Population))\n\n\n\np2 &lt;- ggplot(pyramid_data, aes(x = Population, y = AgeGroup, fill = Sex)) +\n  geom_col(width = 0.9) +\n  scale_x_continuous(labels = function(x) paste0(abs(x / 1000), \"k\")) +\n  scale_fill_manual(values = c(\"Male\" = \"#a3c3cc\", \"Female\" = \"#d4a5a5\")) +\n  labs(\n    title = \"Population Pyramid by Age Group and Gender (2024)\",\n    x = \"Population\",\n    y = \"Age Group\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5),\n    legend.position = \"none\"\n  )\n\n\ntop10_pa_names &lt;- pop_data %&gt;%\n  group_by(Planning_Area) %&gt;%\n  summarise(Total = sum(Population), .groups = \"drop\") %&gt;%\n  arrange(desc(Total)) %&gt;%\n  slice_head(n = 10) %&gt;%\n  pull(Planning_Area)\n\n\ntop10_pyramid &lt;- pop_data %&gt;%\n  filter(Planning_Area %in% top10_pa_names, Sex %in% c(\"Male\", \"Female\")) %&gt;%\n  group_by(Planning_Area, Sex) %&gt;%\n  summarise(Population = sum(Population), .groups = \"drop\") %&gt;%\n  mutate(\n    Population = ifelse(Sex == \"Male\", -Population, Population),\n    Planning_Area = factor(Planning_Area, levels = rev(top10_pa_names))\n  )\n\n\n\np3 &lt;-ggplot(top10_pyramid, aes(x = Population, y = Planning_Area, fill = Sex)) +\n  geom_col(width = 0.7) +\n  scale_x_continuous(labels = function(x) paste0(abs(x / 1000), name = \"k\")) +\n  scale_fill_manual(values = c(\"Male\" = \"#a3c3cc\", \"Female\" = \"#d4a5a5\")) +\n  labs(\n    title = \"Population Pyramid of Top 10 Planning Areas (2024)\",\n    y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 16, hjust = 0.5),\n    axis.text = element_text(size = 10),\n    legend.position = \"bottom\"\n  )\n\n\n(p1 + p2) / p3 +\n  plot_layout(\n    widths = c(1, 2),    \n    heights = c(1, 1.2)  \n  ) +\n  plot_annotation(\n    title = \"Singapore’s 2024 Population Overview\",\n    theme = theme(\n      plot.title = element_text(size = 18, face = \"bold\", hjust = 0.5)\n    )\n  )\n\n\n\n\n\n\n\n\n\nFor visualization 2, I’d like to make a very simple adjustment which can directly hit the point, which is add a label to each zone on the chart. If required, we may also make this to an interactive chart.\n\nMy shot:\n\nsgresidence &lt;- sgresidence %&gt;%\n  mutate(age = as.integer(Age))\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `age = as.integer(Age)`.\nCaused by warning:\n! NAs introduced by coercion\n\nsgresidence %&gt;%\n  filter(is.na(as.integer(Age))) %&gt;%\n  distinct(Age)\n\nWarning: There was 1 warning in `filter()`.\nℹ In argument: `is.na(as.integer(Age))`.\nCaused by warning:\n! NAs introduced by coercion\n\n\n          Age\n1 90_and_Over\n\nsgresidence %&gt;%\n  filter(Age == \"90_and_Over\") %&gt;%\n  summarise(total_90plus = sum(Pop)) %&gt;%\n  mutate(total_pop = sum(sgresidence$Pop),\n         percent = total_90plus / total_pop * 100)\n\n  total_90plus total_pop   percent\n1        25290   4193530 0.6030719\n\nsgresidence &lt;- sgresidence %&gt;%\n  mutate(\n    Age = ifelse(Age == \"90_and_Over\", \"90\", Age),\n    age = as.integer(Age)\n  )\n\nsgresidence &lt;- sgresidence %&gt;%\n  filter(Pop &gt; 0)\n\n## 1 ────────── Calculate ratios\ndep_sz &lt;- sgresidence %&gt;% \n  mutate(group = case_when(\n    age &lt; 15  ~ \"Youth\",\n    age &gt;= 65 ~ \"Elderly\",\n    TRUE      ~ \"Working\")) %&gt;% \n  group_by(SZ, group) %&gt;% \n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;% \n  pivot_wider(names_from = group, values_from = Pop, values_fill = 0) %&gt;% \n  mutate(\n    YDR        = Youth / Working,\n    EDR        = Elderly / Working,\n    Dependants = Youth + Elderly,\n    grp        = if_else(YDR &gt; EDR, \"Y_dom\", \"O_dom\"),\n    log_ratio  = log(pmax(EDR, 1e-6) / pmax(YDR, 1e-6)),  # avoid log(0)\n    YDR_pct    = percent_rank(YDR) * 100,\n    EDR_pct    = percent_rank(EDR) * 100\n  )\n\n## 2 ────────── Discretize log_ratio into \"Low\" / \"Mid\" / \"High\"\ndep_plot &lt;- dep_sz %&gt;%\n  mutate(\n    imbalance = cut(abs(log_ratio),\n                    breaks = quantile(abs(log_ratio), probs = c(0, 1/3, 2/3, 1)),\n                    labels = c(\"Low\", \"Mid\", \"High\"),\n                    include.lowest = TRUE))\n\n## 3 ────────── Define stepped color table\ncol_tbl &lt;- tribble(\n  ~grp,     ~imbalance, ~col,\n  \"Y_dom\", \"Low\",  \"#FFF2B2\",\n  \"Y_dom\", \"Mid\",  \"#FFC94A\",\n  \"Y_dom\", \"High\", \"#FF9300\",\n  \"O_dom\", \"Low\",  \"#E3DFF5\",\n  \"O_dom\", \"Mid\",  \"#AF94E1\",\n  \"O_dom\", \"High\", \"#6B42BF\"\n)\n\n## 4 ────────── Merge color\ndep_plot &lt;- dep_plot %&gt;%\n  left_join(col_tbl, by = c(\"grp\", \"imbalance\"))\n\n## 5 ────────── Plot\nggplot(dep_plot, aes(YDR_pct, EDR_pct)) +\n  geom_hline(yintercept = 50, color = \"gray60\") +\n  geom_vline(xintercept = 50, color = \"gray60\") +\n  geom_point(aes(size = Dependants, color = col), alpha = 0.9) +\n  scale_colour_identity() +\n  scale_size_area(max_size = 12,\n                  breaks = c(500, 2000, 5000, 10000),\n                  labels = scales::comma,\n                  name = \"Dependants\\n(headcount)\") +\n  labs(\n    title = \"Youth vs Elderly Dependency Ratio of SG Sub Zones Quadrants (2024)\",\n    subtitle = \"• Hue: Dominant dependency (Purple–Elderly, Yellow–Youth) \\n• Depth: Imbalance level (Low / Mid / High) \\n• Size: Total dependants count\",\n    x = \"Youth Dependency Percentile (YDP)\",\n    y = \"Elderly Dependency Percentile (EDP)\"\n  ) +\n \n  annotate(\"text\", x = 80, y = 90, label = \"Dual-Burden Zones\", fontface = \"bold\", size = 3.5, hjust = 0.5) +\n  annotate(\"text\", x = 80, y = 10, label = \"Young Family Zones\", fontface = \"bold\", size = 3.5, hjust = 0.5) +\n  annotate(\"text\", x = 20, y = 90, label = \"Aging-Dominant Zones\", fontface = \"bold\", size = 3.5, hjust = 0.5) +\n  annotate(\"text\", x = 20, y = 10, label = \"Working Core Zones\", fontface = \"bold\", size = 3.5, hjust = 0.5) +\n  theme_minimal(base_size = 11) +\n  theme(\n    panel.grid.minor = element_blank(),\n    plot.title.position = \"plot\"\n  )\n\n\n\n\n\n\n\n\n\nFor Visualization 3, I noticed that a): Median lines for both the EDR and YDR are presented, they are not labeled, which may cause confusion. I would recommend adding clear labels to these reference lines. b): It would be helpful to highlight planning areas where EDR exceed the median values, as these zones may warrant closer attention. c): It’s good to show the median EDR and YDR in value so that readers can understand the situation more clearly.\n\nMy shot:\n\n# 1. Categorize by Age Group and summarize population\ndf_agegroup &lt;- sgresidence %&gt;%\n  mutate(AgeGroup = case_when(\n    Age &lt; 15 ~ \"Youth\",\n    Age &lt;= 64 ~ \"WorkingAge\",\n    TRUE ~ \"Elderly\"\n  )) %&gt;%\n  group_by(PA, AgeGroup) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  pivot_wider(names_from = AgeGroup, values_from = Pop, values_fill = 0) %&gt;%\n  mutate(\n    TotalPop = Youth + WorkingAge + Elderly,\n    ElderlyRatio = Elderly / WorkingAge,\n    YouthRatio = Youth / WorkingAge\n  )\n\n# 2. Reshape to long format for stacked bar chart\ndf_age_long &lt;- df_agegroup %&gt;%\n  pivot_longer(cols = c(\"Youth\", \"WorkingAge\", \"Elderly\"),\n               names_to = \"AgeGroup\", values_to = \"Pop\") %&gt;%\n  mutate(PA = fct_reorder(PA, -Pop, .fun = sum))\n\n# 3. Compute median values and max population\nmedian_edr &lt;- median(df_agegroup$ElderlyRatio, na.rm = TRUE)\nmedian_ydr &lt;- median(df_agegroup$YouthRatio, na.rm = TRUE)\nmax_pop    &lt;- max(df_agegroup$TotalPop, na.rm = TRUE)\n\n# 4. Add star marker to EDR above median\ndf_agegroup &lt;- df_agegroup %&gt;%\n  mutate(EDR_star = if_else(ElderlyRatio &gt; median_edr, \"*\", \"\"))\n\n# 5. Define color palette\ncustom_colors &lt;- c(\n  \"Youth\" = \"#FFD700\",        # Gold\n  \"WorkingAge\" = \"#B0B0B0\",   # Gray\n  \"Elderly\" = \"#800080\"       # Purple\n)\n\n# 6. Get rightmost x position\nlast_x &lt;- length(unique(df_age_long$PA))\n\n# 7. Create the plot\nggplot(df_age_long, aes(x = PA, y = Pop, fill = AgeGroup)) +\n  geom_bar(stat = \"identity\", width = 0.95) +\n\n  # Elderly Dependency Ratio line\n  geom_line(\n    data = df_agegroup,\n    aes(x = PA, y = ElderlyRatio * max_pop / 2, group = 1),\n    inherit.aes = FALSE, color = \"#9932CC\", size = 1.2\n  ) +\n\n  # Youth Dependency Ratio line\n  geom_line(\n    data = df_agegroup,\n    aes(x = PA, y = YouthRatio * max_pop / 2, group = 1),\n    inherit.aes = FALSE, color = \"#E67E22\", size = 1.2\n  ) +\n\n  # Red stars for high EDR\n  geom_text(\n    data = df_agegroup %&gt;% filter(EDR_star == \"*\"),\n    aes(x = PA, y = ElderlyRatio * max_pop / 2, label = EDR_star),\n    inherit.aes = FALSE, color = \"red\", size = 5, vjust = -0.8\n  ) +\n\n  # Median lines\n  geom_hline(yintercept = median_edr * max_pop / 2,\n             color = \"black\", linetype = \"solid\", size = 0.5) +\n  geom_hline(yintercept = median_ydr * max_pop / 2,\n             color = \"black\", linetype = \"solid\", size = 0.5) +\n\n  # Median line labels (right)\n  annotate(\"text\", x = last_x, y = median_edr * max_pop / 2,\n           label = \"Median EDR\", vjust = -1, hjust = 1, size = 3, color = \"black\") +\n  annotate(\"text\", x = last_x, y = median_ydr * max_pop / 2,\n           label = \"Median YDR\", vjust = 1.5, hjust = 1, size = 3, color = \"black\") +\n\n  # ➕ EDR/YDR values in red box area\n  annotate(\"text\", x = last_x - 10, y = max_pop * 0.9,\n           label = paste0(\"Median EDR = \", round(median_edr, 2)),\n           hjust = 0, size = 2, color = \"#9932CC\") +\n  annotate(\"text\", x = last_x - 10, y = max_pop * 0.8,\n           label = paste0(\"Median YDR = \", round(median_ydr, 2)),\n           hjust = 0, size = 2, color = \"#E67E22\") +\n\n  # Final touches\n  scale_fill_manual(values = custom_colors) +\n  scale_y_continuous(\n    name = \"Population Count\",\n    sec.axis = sec_axis(~ . * 2 / max_pop, name = \"Dependency Ratio\"),\n    labels = label_number(scale_cut = cut_short_scale())\n  ) +\n  labs(\n    title = \"Population by Planning Area with Youth & Elderly Dependency Ratios\",\n    subtitle = \"* indicates Planning Areas with Elderly Dependency Ratio above the national median\",\n    x = \"Planning Area\",\n    fill = \"Age Group\"\n  ) + \n  \n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"right\"\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  }
]