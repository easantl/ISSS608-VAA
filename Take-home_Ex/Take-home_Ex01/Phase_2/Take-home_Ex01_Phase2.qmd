---
title: "Take-home_Ex01_Phase2"
format: html
---

# Take-home Exercise 1 - Phase 2

I‘d like to provide my personal thoughts to our friend **Zhang Jinghan**'s work.

## Getting start

### **Installing and loading the required libraries**

```{R}
pacman::p_load(ggrepel, patchwork, 
               ggthemes, hrbrthemes,
               tidyverse, ggiraph, plotly, 
                DT, readxl, gifski, gapminder,
               gganimate, scales) 
```

### **Importing data**

```{R}
pop_data  <- read.csv("data/respopagesex2024.csv")
```

## Good design principles

Here are the areas where she did very well and I should learn from:

1.  Her insights into the data were very profound, and she did a great job transforming the data to uncover more observations. For example, she derived the Youth Dependency Ratio (YDR) and the Elderly Dependency Ratio (EDR) to provide deeper insights into the issue of population aging. In comparison, my own assignment, which only compared population distributions, was not as insightful.
2.  She used colors very skillfully in her visualization—not just to make her work more visually appealing, but more importantly, to highlight contrasts between different groups. For example, she used red and blue to distinguish between male and female groups, and orange and purple to differentiate between younger and older age groups. These thoughtful color choices made her entire visualization much clearer and easier to understand.
3.  Her choice of visualization types was highly appropriate—for instance, using bar charts to represent population distribution and a scatter quadrant map to show the distribution of YDR and EDR across subzones. Personally, I couldn't think of a better choice of charts to convey the data more effectively.

## Further improvement

Following are my own ideas to adjust the visuals:

1.  In her Visualization 1, the Population Pyramid, she presented a comprehensive view of the population structure of Singapore residents in 2024, broken down by gender and age group. However, from a reader’s perspective, the visualization contains too much information in a single chart, which may require extra effort to understand the relationships among population size, gender, age group, and percentage of the total population. In another word, the visual is not very straightforward. If it were up to me, I would present these pieces of information separately for greater clarity.

For the code, I’d like to simply “borrow” the approach used by our friend **Luo Yuming**, who streamlined the amount of information in the chart and represented the gender ratio comparison using an additional pie chart.

```{R}

# Standardise column names
pop_data <- pop_data %>%
  rename(
    Planning_Area = PA,
    Subzone = SZ,
    Age = Age,
    Sex = Sex,
    Population = Pop,
    Year = Time
  ) %>%
  filter(Year == 2024) %>%
  mutate(
    Age_numeric = ifelse(Age == "90_and_Over", 90, as.integer(Age)),  
    Sex = ifelse(Sex == "Males", "Male", "Female")
  )

age_distribution <- pop_data %>%
  filter(Sex %in% c("Male", "Female")) %>%
  group_by(Planning_Area, Age_numeric) %>%
  summarise(Population = sum(Population), .groups = "drop") %>%
  rename(Age = Age_numeric)


weighted_median <- function(df) {
  df <- df[order(df$Age), ]
  cum_pop <- cumsum(df$Population)
  cutoff <- sum(df$Population) / 2
  df$Age[which(cum_pop >= cutoff)[1]]
}


median_age_summary <- age_distribution %>%
  group_by(Planning_Area) %>%
  summarise(Median_Age = weighted_median(cur_data_all()))


gender_summary <- pop_data %>%
  group_by(Sex) %>%
  summarise(Population = sum(Population), .groups = "drop") %>%
  mutate(Percent = Population / sum(Population),
         Label = paste0(percent(Percent, accuracy = 0.1)))  


p1 <- ggplot(gender_summary, aes(x = "", y = Population, fill = Sex)) +
  geom_col(width = 1, color = "white") +
  coord_polar(theta = "y") +
  geom_text(aes(label = Label), position = position_stack(vjust = 0.5),
            size = 2.5, fontface = "bold", color = "black") + 
  scale_fill_manual(values = c("Male" = "#a3c3cc", "Female" = "#d4a5a5")) +
  labs(title = "Gender Distribution") +
  theme_void() +
  theme(
    plot.margin = margin(10, 10, 10, 10),  
    legend.position = "none",
    plot.title = element_text(size = 9, face = "bold", hjust = 0.5)
  )



pyramid_data <- pop_data %>%
  filter(Sex %in% c("Male", "Female")) %>%
  mutate(AgeGroup = cut(Age_numeric,
                        breaks = c(seq(0, 90, 10), Inf),
                        right = FALSE,
                        labels = c("0-9", "10-19", "20-29", "30-39",
                                   "40-49", "50-59", "60-69", "70-79",
                                   "80-89", "90+"))) %>%
  group_by(AgeGroup, Sex) %>%
  summarise(Population = sum(Population), .groups = "drop") %>%
  mutate(Population = ifelse(Sex == "Male", -Population, Population))



p2 <- ggplot(pyramid_data, aes(x = Population, y = AgeGroup, fill = Sex)) +
  geom_col(width = 0.9) +
  scale_x_continuous(labels = function(x) paste0(abs(x / 1000), "k")) +
  scale_fill_manual(values = c("Male" = "#a3c3cc", "Female" = "#d4a5a5")) +
  labs(
    title = "Population Pyramid by Age Group and Gender (2024)",
    x = "Population",
    y = "Age Group"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
    legend.position = "none"
  )


top10_pa_names <- pop_data %>%
  group_by(Planning_Area) %>%
  summarise(Total = sum(Population), .groups = "drop") %>%
  arrange(desc(Total)) %>%
  slice_head(n = 10) %>%
  pull(Planning_Area)


top10_pyramid <- pop_data %>%
  filter(Planning_Area %in% top10_pa_names, Sex %in% c("Male", "Female")) %>%
  group_by(Planning_Area, Sex) %>%
  summarise(Population = sum(Population), .groups = "drop") %>%
  mutate(
    Population = ifelse(Sex == "Male", -Population, Population),
    Planning_Area = factor(Planning_Area, levels = rev(top10_pa_names))
  )



p3 <-ggplot(top10_pyramid, aes(x = Population, y = Planning_Area, fill = Sex)) +
  geom_col(width = 0.7) +
  scale_x_continuous(labels = function(x) paste0(abs(x / 1000), name = "k")) +
  scale_fill_manual(values = c("Male" = "#a3c3cc", "Female" = "#d4a5a5")) +
  labs(
    title = "Population Pyramid of Top 10 Planning Areas (2024)",
    y = NULL
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(face = "bold", size = 16, hjust = 0.5),
    axis.text = element_text(size = 10),
    legend.position = "bottom"
  )


(p1 + p2) / p3 +
  plot_layout(
    widths = c(1, 2),    
    heights = c(1, 1.2)  
  ) +
  plot_annotation(
    title = "Singapore’s 2024 Population Overview",
    theme = theme(
      plot.title = element_text(size = 18, face = "bold", hjust = 0.5)
    )
  )


```
