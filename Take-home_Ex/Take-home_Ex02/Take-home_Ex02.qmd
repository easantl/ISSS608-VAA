---
title: "Sailor Shift: Rise and Resonance"
author: "Linsen Lu"
execute: 
  eval: true
  echo: true
  warning: false
---

## Getting Start

### **Installing and loading the required libraries**

```{R}
pacman::p_load(igraph, tidygraph, ggraph, 
               visNetwork, lubridate, clock,
               tidyverse, graphlayouts, 
               concaveman, ggforce, jsonlite, dplyr)
```

### **Importing data**

```{R}
t_data <- fromJSON("data/MC1_graph.json",
                   simplifyDataFrame = TRUE)
```

## 1. Introduction

Sailor Shift is one of the most influential figures in the development of “Oceans Folk” music. From her humble beginnings as a singer on Oceanus Island to her current status as a global superstar, she has grown to represent not only her own personal success, but has also propelled this niche genre into the world. This project uses data analysis and visualization to delve deeper into her network of collaborations, musical influences, and her importance in the overall music ecosystem. We will reveal how she has influenced others and been shaped by the zeitgeist, and further reflect on what her rise reveals about the new generation of musicians.

## 2. Data processing

### 2.1. Extracting Edges and Nodes

```{R}
nodes_tbl <- as_tibble(t_data$nodes)

edges_tbl <- as_tibble(t_data$links) %>%
  rename(from = source, to = target)
```

### 2.2. Tidying nodes data frame

```{R}
edges_tbl <- edges_tbl

node_index<- nodes_tbl %>%
  mutate(index = row_number(),
         id = as.character(id))

edges_tbl <- edges_tbl %>%
  mutate(from = as.character(from),
         to = as.character(to)) %>%
  left_join(node_index %>%
              select(id,
                     from_index = index),
            by = c("from" = "id")) %>%
  left_join(node_index %>%
              select(id,
                     to_index = index),
            by = c("to" = "id"))
```

### 2.2. Get closer to data

#### 2.2.1. Edges

![](Pics/Edges.png){width="298"}

```{R}
glimpse(edges_tbl)
```

```{R}
length(unique(edges_tbl$`Edge Type`))

unique(edges_tbl$`Edge Type`)

```

The edges dataset contains 37,857 records and 4 fields to represent the various relationships between entities in the network. Each edge contains the node IDs (source and target) of the starting and ending points, as well as 12 Edge Types describing the nature of the relationship, such as “PerformerOf”, ‘ComposerOf’ or “RecordedBy”. Meanwhile, the key field is used to distinguish between multiple connections between the same node pair.

#### 2.2.2. Nodes

![](Pics/Nodes.jpg){width="542"}

```{R}
glimpse(nodes_tbl)
```

The nodes dataset contains 17,412 entries, each representing an entity within the music network and categorized under the Node Type column as "Person", "Song", or "RecordLabel". Each node includes relevant attributes based on its type—for example, songs have fields such as single, release_date, genre, and notable, while people may have stage_name and notoriety_date. The presence of missing values (NA) in many fields indicates that certain attributes are only applicable to specific node types.

### 2.3. Deal with NA values

The function tbl_graph() cannot process with NA values, with the error message: At rinterface_extra.c:82 : The value nan is not representable as an integer. Invalid value". Thus, it's necessary for us to check and deal with those NA values to ensure they will not affect our analysis.

```{R}
nodes_tbl %>% summarise_all(~ sum(is.na(.)))

edges_tbl %>% summarise_all(~ sum(is.na(.)))

nodes_tbl %>% summarise_all(~ sum(is.nan(.)))

edges_tbl %>% summarise_all(~ sum(is.nan(.)))

```

As observed from the outcome above, there's no missing value in edges, but quite a lot of NA values in nodes. However, luckily, there's no missing 'ID' and 'Name', which will not affect the analysis.

## 3. Sailor Shift’s Career Connections

### 3.1. The contributors who shaped the modern Sailor Shift

A singer’s journey to fame is never a solitary one. Sailor has been accompanied by many — fellow singers, producers, instrumentalists, composers, and others who helped shape her path.

```{R}
sailor_id <- node_index %>%
  filter(name == "Sailor Shift") %>%
  pull(index) %>%
  as.character()

edges_to_sailor <- edges_tbl %>%
  filter(to_index == sailor_id)

influencers <- edges_to_sailor %>%
  left_join(node_index, by = c("from_index" = "index"))

influencer_summary <- influencers %>%
  filter(`Node Type` == "Person" )


influencer_summary

```

```{R}
graph_t <- tbl_graph(nodes = nodes_tbl,
                   edges = edges_tbl %>%
                     select(from = from_index,
                            to = to_index,
                            "Edge Type"),
                   directed = TRUE)



```

```{R}


```

```{R}

```
